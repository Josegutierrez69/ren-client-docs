(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{117:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return d})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return s}));var a=n(3),i=n(8),r=(n(0),n(489)),o=n(490),c={title:"LockGatewayLogicV1"},d={unversionedId:"gateway-sol/Gateway/LockGatewayLogicV1",id:"gateway-sol/Gateway/LockGatewayLogicV1",isDocsHomePage:!1,title:"LockGatewayLogicV1",description:"Contract: LockGatewayLogicV1",source:"@site/contracts/gateway-sol/Gateway/LockGatewayLogicV1.mdx",slug:"/gateway-sol/Gateway/LockGatewayLogicV1",permalink:"/ren-client-docs/contracts/gateway-sol/Gateway/LockGatewayLogicV1",version:"current",sidebar:"contracts",previous:{title:"GatewayStateV2",permalink:"/ren-client-docs/contracts/gateway-sol/Gateway/GatewayStateV2"},next:{title:"LockGatewayStateV1",permalink:"/ren-client-docs/contracts/gateway-sol/Gateway/LockGatewayStateV1"}},l=[{value:"Contract: <code>LockGatewayLogicV1</code>",id:"contract-lockgatewaylogicv1",children:[]},{value:"Modifiers",id:"modifiers",children:[{value:"<code>onlyOwnerOrMintAuthority()</code>",id:"onlyownerormintauthority",children:[]}]},{value:"Functions",id:"functions",children:[{value:"<strong><code>initialize</code></strong> <em><code>(contract RenERC20LogicV1 _token, address _feeRecipient, address _mintAuthority, uint16 _lockFee, uint16 _releaseFee, uint256 _minimumBurnAmount)</code></em> (public)",id:"initialize-contract-renerc20logicv1-_token-address-_feerecipient-address-_mintauthority-uint16-_lockfee-uint16-_releasefee-uint256-_minimumburnamount-public",children:[]},{value:"<strong><code>claimTokenOwnership</code></strong> <em><code>()</code></em> (public)",id:"claimtokenownership--public",children:[]},{value:"<strong><code>updateMintAuthority</code></strong> <em><code>(address _nextMintAuthority)</code></em> (public)",id:"updatemintauthority-address-_nextmintauthority-public",children:[]},{value:"<strong><code>updateFeeRecipient</code></strong> <em><code>(address _nextFeeRecipient)</code></em> (public)",id:"updatefeerecipient-address-_nextfeerecipient-public",children:[]},{value:"<strong><code>updateLockFee</code></strong> <em><code>(uint16 _nextLockFee)</code></em> (public)",id:"updatelockfee-uint16-_nextlockfee-public",children:[]},{value:"<strong><code>updateReleaseFee</code></strong> <em><code>(uint16 _nextReleaseFee)</code></em> (public)",id:"updatereleasefee-uint16-_nextreleasefee-public",children:[]},{value:"<strong><code>lock</code></strong> <em><code>(string _chain, bytes _to, bytes _payload, uint256 _amount) \u2192 uint256</code></em> (public)",id:"lock-string-_chain-bytes-_to-bytes-_payload-uint256-_amount-\u2192-uint256-public",children:[]},{value:"<strong><code>release</code></strong> <em><code>(bytes32 _pHash, uint256 _amount, bytes32 _nHash, bytes _sig) \u2192 uint256</code></em> (public)",id:"release-bytes32-_phash-uint256-_amount-bytes32-_nhash-bytes-_sig-\u2192-uint256-public",children:[]},{value:"<strong><code>verifySignature</code></strong> <em><code>(bytes32 _signedMessageHash, bytes _sig) \u2192 bool</code></em> (public)",id:"verifysignature-bytes32-_signedmessagehash-bytes-_sig-\u2192-bool-public",children:[]},{value:"<strong><code>hashForSignature</code></strong> <em><code>(bytes32 _pHash, uint256 _amount, address _to, bytes32 _nHash) \u2192 bytes32</code></em> (public)",id:"hashforsignature-bytes32-_phash-uint256-_amount-address-_to-bytes32-_nhash-\u2192-bytes32-public",children:[]}]},{value:"Events",id:"events",children:[{value:"<strong><code>LogMintAuthorityUpdated</code></strong> <em><code>(address _newMintAuthority)</code></em>",id:"logmintauthorityupdated-address-_newmintauthority",children:[]},{value:"<strong><code>LogLock</code></strong> <em><code>(bytes _to, bytes _p, uint256 _amount, uint256 _n, bytes _indexedTo)</code></em>",id:"loglock-bytes-_to-bytes-_p-uint256-_amount-uint256-_n-bytes-_indexedto",children:[]},{value:"<strong><code>LogRelease</code></strong> <em><code>(address _to, uint256 _amount, uint256 _n, bytes32 _signedMessageHash)</code></em>",id:"logrelease-address-_to-uint256-_amount-uint256-_n-bytes32-_signedmessagehash",children:[]}]}],m={toc:l};function s(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.mdx)("wrapper",Object(a.default)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(r.mdx)(o.DocTag,{type:o.DocType.Reference,mdxType:"DocTag"}),Object(r.mdx)("h2",{id:"contract-lockgatewaylogicv1"},"Contract: ",Object(r.mdx)("inlineCode",{parentName:"h2"},"LockGatewayLogicV1")),Object(r.mdx)("p",null,"Gateway handles verifying mint and burn requests. A mintAuthority\napproves new assets to be minted by providing a digital signature. An owner\nof an asset can request for it to be burnt."),Object(r.mdx)("p",null,"Inherits from:"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"LockGatewayStateV1")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"CanReclaimTokens")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"Claimable")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"Ownable")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"Context")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"Initializable"))),Object(r.mdx)("hr",null),Object(r.mdx)("br",null),Object(r.mdx)("h2",{id:"modifiers"},"Modifiers"),Object(r.mdx)("h3",{id:"onlyownerormintauthority"},Object(r.mdx)("inlineCode",{parentName:"h3"},"onlyOwnerOrMintAuthority()")),Object(r.mdx)("p",null,"Only allow the Darknode Payment contract."),Object(r.mdx)("hr",null),Object(r.mdx)("br",null),Object(r.mdx)("h2",{id:"functions"},"Functions"),Object(r.mdx)("h3",{id:"initialize-contract-renerc20logicv1-_token-address-_feerecipient-address-_mintauthority-uint16-_lockfee-uint16-_releasefee-uint256-_minimumburnamount-public"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"initialize"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(contract RenERC20LogicV1 _token, address _feeRecipient, address _mintAuthority, uint16 _lockFee, uint16 _releaseFee, uint256 _minimumBurnAmount)"))," (public)"),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Params")),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("p",{parentName:"li"},Object(r.mdx)("inlineCode",{parentName:"p"},"_token"),": The RenERC20 this Gateway is responsible for.")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("p",{parentName:"li"},Object(r.mdx)("inlineCode",{parentName:"p"},"_feeRecipient"),": The recipient of burning and minting fees.")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("p",{parentName:"li"},Object(r.mdx)("inlineCode",{parentName:"p"},"_mintAuthority"),": The address of the key that can sign mint\nrequests.")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("p",{parentName:"li"},Object(r.mdx)("inlineCode",{parentName:"p"},"_lockFee"),": The amount subtracted each mint request and\nforwarded to the feeRecipient. In BIPS.")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("p",{parentName:"li"},Object(r.mdx)("inlineCode",{parentName:"p"},"_releaseFee"),": The amount subtracted each burn request and\nforwarded to the feeRecipient. In BIPS."))),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"claimtokenownership--public"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"claimTokenOwnership"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"()"))," (public)"),Object(r.mdx)("p",null,"Claims ownership of the token passed in to the constructor.\n",Object(r.mdx)("inlineCode",{parentName:"p"},"transferStoreOwnership")," must have previously been called.\nAnyone can call this function."),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"updatemintauthority-address-_nextmintauthority-public"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"updateMintAuthority"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(address _nextMintAuthority)"))," (public)"),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Params")),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"_nextMintAuthority"),": The address to start paying fees to.")),Object(r.mdx)("p",null,"Allow the owner to update the fee recipient."),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"updatefeerecipient-address-_nextfeerecipient-public"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"updateFeeRecipient"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(address _nextFeeRecipient)"))," (public)"),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Params")),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"_nextFeeRecipient"),": The address to start paying fees to.")),Object(r.mdx)("p",null,"Allow the owner to update the fee recipient."),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"updatelockfee-uint16-_nextlockfee-public"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"updateLockFee"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(uint16 _nextLockFee)"))," (public)"),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Params")),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"_nextLockFee"),": The new fee for locking.")),Object(r.mdx)("p",null,"Allow the owner to update the 'mint' fee."),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"updatereleasefee-uint16-_nextreleasefee-public"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"updateReleaseFee"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(uint16 _nextReleaseFee)"))," (public)"),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Params")),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"_nextReleaseFee"),": The new fee for releasing.")),Object(r.mdx)("p",null,"Allow the owner to update the burn fee."),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"lock-string-_chain-bytes-_to-bytes-_payload-uint256-_amount-\u2192-uint256-public"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"lock"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(string _chain, bytes _to, bytes _payload, uint256 _amount) \u2192 uint256"))," (public)"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"release-bytes32-_phash-uint256-_amount-bytes32-_nhash-bytes-_sig-\u2192-uint256-public"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"release"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(bytes32 _pHash, uint256 _amount, bytes32 _nHash, bytes _sig) \u2192 uint256"))," (public)"),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Params")),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("p",{parentName:"li"},Object(r.mdx)("inlineCode",{parentName:"p"},"_pHash"),": (payload hash) The hash of the payload associated with the\nrelease.")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("p",{parentName:"li"},Object(r.mdx)("inlineCode",{parentName:"p"},"_amount"),": The amount of the token being released, in its smallest\nvalue. (e.g. satoshis for BTC).")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("p",{parentName:"li"},Object(r.mdx)("inlineCode",{parentName:"p"},"_nHash"),": (nonce hash) The hash of the nonce, amount and pHash.")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("p",{parentName:"li"},Object(r.mdx)("inlineCode",{parentName:"p"},"_sig"),": The signature of the hash of the following values:\n(pHash, amount, msg.sender, nHash), signed by the mintAuthority."))),Object(r.mdx)("p",null,"release verifies a release approval signature from RenVM and\nsends tokens after taking a fee for the ",Object(r.mdx)("inlineCode",{parentName:"p"},"_feeRecipient"),"."),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"verifysignature-bytes32-_signedmessagehash-bytes-_sig-\u2192-bool-public"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"verifySignature"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(bytes32 _signedMessageHash, bytes _sig) \u2192 bool"))," (public)"),Object(r.mdx)("p",null,"verifySignature checks the the provided signature matches the provided\nparameters."),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"hashforsignature-bytes32-_phash-uint256-_amount-address-_to-bytes32-_nhash-\u2192-bytes32-public"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"hashForSignature"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(bytes32 _pHash, uint256 _amount, address _to, bytes32 _nHash) \u2192 bytes32"))," (public)"),Object(r.mdx)("p",null,"hashForSignature hashes the parameters so that they can be signed."),Object(r.mdx)("hr",null),Object(r.mdx)("br",null),Object(r.mdx)("h2",{id:"events"},"Events"),Object(r.mdx)("h3",{id:"logmintauthorityupdated-address-_newmintauthority"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"LogMintAuthorityUpdated"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(address _newMintAuthority)"))),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"loglock-bytes-_to-bytes-_p-uint256-_amount-uint256-_n-bytes-_indexedto"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"LogLock"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(bytes _to, bytes _p, uint256 _amount, uint256 _n, bytes _indexedTo)"))),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"logrelease-address-_to-uint256-_amount-uint256-_n-bytes32-_signedmessagehash"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"LogRelease"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(address _to, uint256 _amount, uint256 _n, bytes32 _signedMessageHash)"))),Object(r.mdx)("hr",null))}s.isMDXComponent=!0},489:function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return m})),n.d(t,"MDXProvider",(function(){return p})),n.d(t,"mdx",(function(){return x})),n.d(t,"useMDXComponents",(function(){return u})),n.d(t,"withMDXComponents",(function(){return s}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var m=i.a.createContext({}),s=function(e){return function(t){var n=u(t.components);return i.a.createElement(e,o({},t,{components:n}))}},u=function(e){var t=i.a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},p=function(e){var t=u(e.components);return i.a.createElement(m.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},h=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),s=a,p=m["".concat(o,".").concat(s)]||m[s]||b[s]||r;return n?i.a.createElement(p,d(d({ref:t},c),{},{components:n})):i.a.createElement(p,d({ref:t},c))}));function x(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=h;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<r;l++)o[l]=n[l];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},490:function(e,t,n){"use strict";var a=n(4).default;Object.defineProperty(t,"__esModule",{value:!0}),t.DocTag=t.DocType=void 0;var i=a(n(0));let r;t.DocType=r,function(e){e.Tutorial="Tutorial",e.HowTo="How To",e.Reference="Reference",e.Explanation="Explanation"}(r||(t.DocType=r={}));const o={[r.Tutorial]:"#b16bfc",[r.HowTo]:"#EC0088",[r.Reference]:"#ff823a",[r.Explanation]:"#29C0AF"};t.DocTag=({type:e,marginBottom:t})=>i.default.createElement(i.default.Fragment,null,i.default.createElement("span",{style:{border:"2px solid "+o[e]||!1,borderRadius:"5px",color:o[e]||"orange",padding:"0.1rem 0.4rem",marginBottom:void 0!==t?t:30,display:"inline-block"}},String(e)))}}]);