(window.webpackJsonp=window.webpackJsonp||[]).push([[225],{258:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return m})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return d})),a.d(t,"default",(function(){return l}));var n=a(3),r=(a(0),a(415));const m={id:"lib_interfaces_build_main_chain.mintchain",title:"Interface: MintChain<Transaction, Address, Network>",sidebar_label:"MintChain",custom_edit_url:null},i={unversionedId:"api/interfaces/lib_interfaces_build_main_chain.mintchain",id:"api/interfaces/lib_interfaces_build_main_chain.mintchain",isDocsHomePage:!1,title:"Interface: MintChain<Transaction, Address, Network>",description:"Interface: MintChain",source:"@site/ren-js/api/interfaces/lib_interfaces_build_main_chain.mintchain.md",slug:"/api/interfaces/lib_interfaces_build_main_chain.mintchain",permalink:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.mintchain",editUrl:null,version:"current",sidebar_label:"MintChain"},d=[{value:"Type parameters",id:"type-parameters",children:[]},{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Properties",id:"properties",children:[{value:"assetDecimals",id:"assetdecimals",children:[]},{value:"assetIsNative",id:"assetisnative",children:[]},{value:"assetIsSupported",id:"assetissupported",children:[]},{value:"findBurnTransaction",id:"findburntransaction",children:[]},{value:"findTransaction",id:"findtransaction",children:[]},{value:"getBurnParams",id:"getburnparams",children:[]},{value:"getMintParams",id:"getmintparams",children:[]},{value:"initialize",id:"initialize",children:[]},{value:"legacyName",id:"legacyname",children:[]},{value:"name",id:"name",children:[]},{value:"renNetwork",id:"rennetwork",children:[]},{value:"resolveTokenGatewayContract",id:"resolvetokengatewaycontract",children:[]},{value:"submitMint",id:"submitmint",children:[]},{value:"transactionConfidence",id:"transactionconfidence",children:[]},{value:"transactionFromID",id:"transactionfromid",children:[]},{value:"transactionID",id:"transactionid",children:[]},{value:"transactionRPCFormat",id:"transactionrpcformat",children:[]},{value:"utils",id:"utils",children:[]},{value:"withProvider",id:"withprovider",children:[]}]},{value:"Methods",id:"methods",children:[{value:"getBalance",id:"getbalance",children:[]},{value:"getFees",id:"getfees",children:[]}]}],c={toc:d};function l({components:e,...t}){return Object(r.mdx)("wrapper",Object(n.default)({},c,t,{components:e,mdxType:"MDXLayout"}),Object(r.mdx)("h1",{id:"interface-mintchaintransaction-address-network"},"Interface: MintChain<Transaction, Address, Network",">"),Object(r.mdx)("p",null,Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain"},"lib/interfaces/build/main/chain"),".MintChain"),Object(r.mdx)("h2",{id:"type-parameters"},"Type parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Default"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"Transaction")),Object(r.mdx)("td",{parentName:"tr",align:"left"},"-"),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"any"))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"Address")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string")," ","|"," { ",Object(r.mdx)("inlineCode",{parentName:"td"},"address"),": ",Object(r.mdx)("em",{parentName:"td"},"string"),"  }"),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"any"))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"Network")),Object(r.mdx)("td",{parentName:"tr",align:"left"},"-"),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"any"))))),Object(r.mdx)("h2",{id:"hierarchy"},"Hierarchy"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("p",{parentName:"li"},Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},Object(r.mdx)("em",{parentName:"a"},"ChainCommon")),"<Transaction, Address, Network",">"),Object(r.mdx)("p",{parentName:"li"},"\u21b3 ",Object(r.mdx)("strong",{parentName:"p"},"MintChain")))),Object(r.mdx)("h2",{id:"properties"},"Properties"),Object(r.mdx)("h3",{id:"assetdecimals"},"assetDecimals"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("strong",{parentName:"p"},"assetDecimals"),": (",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),") => ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<number",">"),Object(r.mdx)("p",null,Object(r.mdx)("inlineCode",{parentName:"p"},"assetDecimals")," should return the number of decimals of the asset."),Object(r.mdx)("p",null,"If the asset is not supported, an error should be thrown."),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-ts"},'bitcoin.assetDecimals = asset => {\n    if (asset === "BTC") { return 8; }\n    throw new Error(`Unsupported asset ${asset}.`);\n}\n')),Object(r.mdx)("h4",{id:"type-declaration"},"Type declaration"),Object(r.mdx)("p",null,"\u25b8 (",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),"): ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<number",">"),Object(r.mdx)("h4",{id:"parameters"},"Parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"asset")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string"))))),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<number",">"),Object(r.mdx)("p",null,"Inherited from: ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#assetdecimals"},"assetDecimals")),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:93"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"assetisnative"},"assetIsNative"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("strong",{parentName:"p"},"assetIsNative"),": (",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),") => ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<boolean",">"),Object(r.mdx)("p",null,Object(r.mdx)("inlineCode",{parentName:"p"},"assetIsNative")," should return true if the asset is native to the Chain.\nMint-chains should return ",Object(r.mdx)("inlineCode",{parentName:"p"},"false")," for assets that have been bridged to\nit."),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-ts"},'ethereum.assetIsNative = asset => asset === "ETH" ||;\n')),Object(r.mdx)("h4",{id:"type-declaration-1"},"Type declaration"),Object(r.mdx)("p",null,"\u25b8 (",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),"): ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<boolean",">"),Object(r.mdx)("h4",{id:"parameters-1"},"Parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"asset")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string"))))),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<boolean",">"),Object(r.mdx)("p",null,"Inherited from: ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#assetisnative"},"assetIsNative")),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:71"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"assetissupported"},"assetIsSupported"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("strong",{parentName:"p"},"assetIsSupported"),": (",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),") => ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<boolean",">"),Object(r.mdx)("p",null,Object(r.mdx)("inlineCode",{parentName:"p"},"assetIsSupported")," should return true if the the asset is native to the\nchain or if the asset can be minted onto the chain."),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-ts"},'ethereum.assetIsSupported = asset => asset === "ETH" || asset === "BTC" || ...;\n')),Object(r.mdx)("h4",{id:"type-declaration-2"},"Type declaration"),Object(r.mdx)("p",null,"\u25b8 (",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),"): ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<boolean",">"),Object(r.mdx)("h4",{id:"parameters-2"},"Parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"asset")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string"))))),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<boolean",">"),Object(r.mdx)("p",null,"Inherited from: ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#assetissupported"},"assetIsSupported")),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:80"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"findburntransaction"},"findBurnTransaction"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("strong",{parentName:"p"},"findBurnTransaction"),": (",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"burn"),": { ",Object(r.mdx)("inlineCode",{parentName:"p"},"burnNonce?"),": ",Object(r.mdx)("em",{parentName:"p"},"string")," ","|"," ",Object(r.mdx)("em",{parentName:"p"},"number")," ","|"," ",Object(r.mdx)("em",{parentName:"p"},"Buffer")," ; ",Object(r.mdx)("inlineCode",{parentName:"p"},"contractCalls?"),": ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_parameters.contractcall"},Object(r.mdx)("em",{parentName:"a"},"ContractCall")),"[] ; ",Object(r.mdx)("inlineCode",{parentName:"p"},"transaction?"),": Transaction  }, ",Object(r.mdx)("inlineCode",{parentName:"p"},"eventEmitter"),": ",Object(r.mdx)("em",{parentName:"p"},"EventEmitter"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"logger"),": ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_logger.logger"},Object(r.mdx)("em",{parentName:"a"},"Logger")),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"networkDelay?"),": ",Object(r.mdx)("em",{parentName:"p"},"number"),") => ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.burndetails"},Object(r.mdx)("em",{parentName:"a"},"BurnDetails")),"<Transaction",">",">"),Object(r.mdx)("p",null,"Read a burn reference from an Ethereum transaction - or submit a\ntransaction first if the transaction details have been provided."),Object(r.mdx)("h4",{id:"type-declaration-3"},"Type declaration"),Object(r.mdx)("p",null,"\u25b8 (",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"burn"),": { ",Object(r.mdx)("inlineCode",{parentName:"p"},"burnNonce?"),": ",Object(r.mdx)("em",{parentName:"p"},"string")," ","|"," ",Object(r.mdx)("em",{parentName:"p"},"number")," ","|"," ",Object(r.mdx)("em",{parentName:"p"},"Buffer")," ; ",Object(r.mdx)("inlineCode",{parentName:"p"},"contractCalls?"),": ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_parameters.contractcall"},Object(r.mdx)("em",{parentName:"a"},"ContractCall")),"[] ; ",Object(r.mdx)("inlineCode",{parentName:"p"},"transaction?"),": Transaction  }, ",Object(r.mdx)("inlineCode",{parentName:"p"},"eventEmitter"),": ",Object(r.mdx)("em",{parentName:"p"},"EventEmitter"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"logger"),": ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_logger.logger"},Object(r.mdx)("em",{parentName:"a"},"Logger")),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"networkDelay?"),": ",Object(r.mdx)("em",{parentName:"p"},"number"),"): ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.burndetails"},Object(r.mdx)("em",{parentName:"a"},"BurnDetails")),"<Transaction",">",">"),Object(r.mdx)("h4",{id:"parameters-3"},"Parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"asset")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string"))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"burn")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"object"))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"burn.burnNonce?")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string")," ","|"," ",Object(r.mdx)("em",{parentName:"td"},"number")," ","|"," ",Object(r.mdx)("em",{parentName:"td"},"Buffer"))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"burn.contractCalls?")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_parameters.contractcall"},Object(r.mdx)("em",{parentName:"a"},"ContractCall")),"[]")),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"burn.transaction?")),Object(r.mdx)("td",{parentName:"tr",align:"left"},"Transaction")),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"eventEmitter")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"EventEmitter"))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"logger")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_logger.logger"},Object(r.mdx)("em",{parentName:"a"},"Logger")))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"networkDelay?")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"number"))))),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.burndetails"},Object(r.mdx)("em",{parentName:"a"},"BurnDetails")),"<Transaction",">",">"),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:203"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"findtransaction"},"findTransaction"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("strong",{parentName:"p"},"findTransaction"),": (",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"nHash"),": ",Object(r.mdx)("em",{parentName:"p"},"Buffer"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"sigHash?"),": ",Object(r.mdx)("em",{parentName:"p"},"Buffer"),") => ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<undefined ","|"," Transaction",">"),Object(r.mdx)("h4",{id:"type-declaration-4"},"Type declaration"),Object(r.mdx)("p",null,"\u25b8 (",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"nHash"),": ",Object(r.mdx)("em",{parentName:"p"},"Buffer"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"sigHash?"),": ",Object(r.mdx)("em",{parentName:"p"},"Buffer"),"): ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<undefined ","|"," Transaction",">"),Object(r.mdx)("h4",{id:"parameters-4"},"Parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"asset")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string"))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"nHash")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"Buffer"))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"sigHash?")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"Buffer"))))),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<undefined ","|"," Transaction",">"),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:198"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"getburnparams"},"getBurnParams"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("inlineCode",{parentName:"p"},"Optional")," ",Object(r.mdx)("strong",{parentName:"p"},"getBurnParams"),": (",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"burnPayload?"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),") => ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<undefined ","|"," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#overwritableburnandreleaseparams"},Object(r.mdx)("em",{parentName:"a"},"OverwritableBurnAndReleaseParams")),">"),Object(r.mdx)("h4",{id:"type-declaration-5"},"Type declaration"),Object(r.mdx)("p",null,"\u25b8 (",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"burnPayload?"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),"): ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<undefined ","|"," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#overwritableburnandreleaseparams"},Object(r.mdx)("em",{parentName:"a"},"OverwritableBurnAndReleaseParams")),">"),Object(r.mdx)("h4",{id:"parameters-5"},"Parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"asset")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string"))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"burnPayload?")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string"))))),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<undefined ","|"," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#overwritableburnandreleaseparams"},Object(r.mdx)("em",{parentName:"a"},"OverwritableBurnAndReleaseParams")),">"),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:220"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"getmintparams"},"getMintParams"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("inlineCode",{parentName:"p"},"Optional")," ",Object(r.mdx)("strong",{parentName:"p"},"getMintParams"),": (",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),") => ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<undefined ","|"," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#overwritablelockandmintparams"},Object(r.mdx)("em",{parentName:"a"},"OverwritableLockAndMintParams")),">"),Object(r.mdx)("h4",{id:"type-declaration-6"},"Type declaration"),Object(r.mdx)("p",null,"\u25b8 (",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),"): ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<undefined ","|"," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#overwritablelockandmintparams"},Object(r.mdx)("em",{parentName:"a"},"OverwritableLockAndMintParams")),">"),Object(r.mdx)("h4",{id:"parameters-6"},"Parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"asset")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string"))))),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<undefined ","|"," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#overwritablelockandmintparams"},Object(r.mdx)("em",{parentName:"a"},"OverwritableLockAndMintParams")),">"),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:219"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"initialize"},"initialize"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("strong",{parentName:"p"},"initialize"),": (",Object(r.mdx)("inlineCode",{parentName:"p"},"network"),": ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_networks.rennetworkdetails"},Object(r.mdx)("em",{parentName:"a"},"RenNetworkDetails"))," ","|"," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/enums/lib_interfaces_build_main_networks.rennetwork"},Object(r.mdx)("em",{parentName:"a"},"RenNetwork"))," ","|"," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_networks#rennetworkstring"},Object(r.mdx)("em",{parentName:"a"},"RenNetworkString")),") => ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.mintchain"},Object(r.mdx)("em",{parentName:"a"},"MintChain")),"<Transaction, Address, Network",">",">"),Object(r.mdx)("p",null,Object(r.mdx)("inlineCode",{parentName:"p"},"initialize")," allows RenJS to pass in parameters after the user has\ninitialized the Chain. This allows the user to pass in network\nparameters such as the network only once."),Object(r.mdx)("p",null,"If the Chain's constructor has an optional network parameter and the\nuser has explicitly initialized it, the Chain should ignore the\nnetwork passed in to ",Object(r.mdx)("inlineCode",{parentName:"p"},"initialize"),". This is to allow different network\ncombinations, such as working with testnet Bitcoin and a local Ethereum\nchain - whereas the default ",Object(r.mdx)("inlineCode",{parentName:"p"},"testnet")," configuration would use testnet\nBitcoin and Ethereum's Kovan testnet."),Object(r.mdx)("h4",{id:"type-declaration-7"},"Type declaration"),Object(r.mdx)("p",null,"\u25b8 (",Object(r.mdx)("inlineCode",{parentName:"p"},"network"),": ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_networks.rennetworkdetails"},Object(r.mdx)("em",{parentName:"a"},"RenNetworkDetails"))," ","|"," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/enums/lib_interfaces_build_main_networks.rennetwork"},Object(r.mdx)("em",{parentName:"a"},"RenNetwork"))," ","|"," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_networks#rennetworkstring"},Object(r.mdx)("em",{parentName:"a"},"RenNetworkString")),"): ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.mintchain"},Object(r.mdx)("em",{parentName:"a"},"MintChain")),"<Transaction, Address, Network",">",">"),Object(r.mdx)("h4",{id:"parameters-7"},"Parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"network")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_networks.rennetworkdetails"},Object(r.mdx)("em",{parentName:"a"},"RenNetworkDetails"))," ","|"," ",Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/enums/lib_interfaces_build_main_networks.rennetwork"},Object(r.mdx)("em",{parentName:"a"},"RenNetwork"))," ","|"," ",Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_networks#rennetworkstring"},Object(r.mdx)("em",{parentName:"a"},"RenNetworkString")))))),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.mintchain"},Object(r.mdx)("em",{parentName:"a"},"MintChain")),"<Transaction, Address, Network",">",">"),Object(r.mdx)("p",null,"Inherited from: ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#initialize"},"initialize")),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:60"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"legacyname"},"legacyName"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("inlineCode",{parentName:"p"},"Optional")," ",Object(r.mdx)("strong",{parentName:"p"},"legacyName"),": ",Object(r.mdx)("em",{parentName:"p"},"string")),Object(r.mdx)("p",null,"The name of the Chain used the v0.2 RenVM nodes."),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-ts"},'bitcoin.legacyName = "Btc";\n')),Object(r.mdx)("p",null,"Inherited from: ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#legacyname"},"legacyName")),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:43"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"name"},"name"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("strong",{parentName:"p"},"name"),": ",Object(r.mdx)("em",{parentName:"p"},"string")),Object(r.mdx)("p",null,"The name of the Chain."),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-ts"},'bitcoin.name = "Bitcoin";\n')),Object(r.mdx)("p",null,"Inherited from: ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#name"},"name")),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:35"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"rennetwork"},"renNetwork"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("inlineCode",{parentName:"p"},"Optional")," ",Object(r.mdx)("strong",{parentName:"p"},"renNetwork"),": ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_networks.rennetworkdetails"},Object(r.mdx)("em",{parentName:"a"},"RenNetworkDetails"))),Object(r.mdx)("p",null,"Should be set by ",Object(r.mdx)("inlineCode",{parentName:"p"},"constructor")," or ",Object(r.mdx)("inlineCode",{parentName:"p"},"initialize"),"."),Object(r.mdx)("p",null,"Inherited from: ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#rennetwork"},"renNetwork")),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:47"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"resolvetokengatewaycontract"},"resolveTokenGatewayContract"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("strong",{parentName:"p"},"resolveTokenGatewayContract"),": (",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),") => ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<string",">"),Object(r.mdx)("h4",{id:"type-declaration-8"},"Type declaration"),Object(r.mdx)("p",null,"\u25b8 (",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),"): ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<string",">"),Object(r.mdx)("h4",{id:"parameters-8"},"Parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"asset")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string"))))),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<string",">"),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:192"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"submitmint"},"submitMint"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("strong",{parentName:"p"},"submitMint"),": (",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"contractCalls"),": ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_parameters.contractcall"},Object(r.mdx)("em",{parentName:"a"},"ContractCall")),"[], ",Object(r.mdx)("inlineCode",{parentName:"p"},"mintTx"),": ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_transaction#lockandminttransaction"},Object(r.mdx)("em",{parentName:"a"},"LockAndMintTransaction")),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"eventEmitter"),": ",Object(r.mdx)("em",{parentName:"p"},"EventEmitter"),") => ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<Transaction",">"),Object(r.mdx)("p",null,Object(r.mdx)("inlineCode",{parentName:"p"},"submitMint")," should take the completed mint transaction from RenVM and\nsubmit its signature to the mint chain to finalize the mint."),Object(r.mdx)("h4",{id:"type-declaration-9"},"Type declaration"),Object(r.mdx)("p",null,"\u25b8 (",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"contractCalls"),": ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_parameters.contractcall"},Object(r.mdx)("em",{parentName:"a"},"ContractCall")),"[], ",Object(r.mdx)("inlineCode",{parentName:"p"},"mintTx"),": ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_transaction#lockandminttransaction"},Object(r.mdx)("em",{parentName:"a"},"LockAndMintTransaction")),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"eventEmitter"),": ",Object(r.mdx)("em",{parentName:"p"},"EventEmitter"),"): ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<Transaction",">"),Object(r.mdx)("h4",{id:"parameters-9"},"Parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"asset")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string"))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"contractCalls")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_parameters.contractcall"},Object(r.mdx)("em",{parentName:"a"},"ContractCall")),"[]")),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"mintTx")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_transaction#lockandminttransaction"},Object(r.mdx)("em",{parentName:"a"},"LockAndMintTransaction")))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"eventEmitter")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"EventEmitter"))))),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<Transaction",">"),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:197"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"transactionconfidence"},"transactionConfidence"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("strong",{parentName:"p"},"transactionConfidence"),": (",Object(r.mdx)("inlineCode",{parentName:"p"},"transaction"),": Transaction) => ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<{ ",Object(r.mdx)("inlineCode",{parentName:"p"},"current"),": ",Object(r.mdx)("em",{parentName:"p"},"number")," ; ",Object(r.mdx)("inlineCode",{parentName:"p"},"target"),": ",Object(r.mdx)("em",{parentName:"p"},"number"),"  }",">"),Object(r.mdx)("p",null,Object(r.mdx)("inlineCode",{parentName:"p"},"transactionConfidence")," should return a target and a current\nconfidence that the deposit is irreversible. For most chains, this will\nbe represented by the number of blocks that have passed."),Object(r.mdx)("p",null,"For example, a Bitcoin transaction with 2 confirmations will return\n",Object(r.mdx)("inlineCode",{parentName:"p"},"{ current: 2, target: 6 }")," on mainnet, where the target is currently 6\nconfirmations."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},Object(r.mdx)("inlineCode",{parentName:"strong"},"dev"))," Must be compatible with the matching RenVM multichain LockChain."),Object(r.mdx)("h4",{id:"type-declaration-10"},"Type declaration"),Object(r.mdx)("p",null,"\u25b8 (",Object(r.mdx)("inlineCode",{parentName:"p"},"transaction"),": Transaction): ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<{ ",Object(r.mdx)("inlineCode",{parentName:"p"},"current"),": ",Object(r.mdx)("em",{parentName:"p"},"number")," ; ",Object(r.mdx)("inlineCode",{parentName:"p"},"target"),": ",Object(r.mdx)("em",{parentName:"p"},"number"),"  }",">"),Object(r.mdx)("h4",{id:"parameters-10"},"Parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"transaction")),Object(r.mdx)("td",{parentName:"tr",align:"left"},"Transaction")))),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<{ ",Object(r.mdx)("inlineCode",{parentName:"p"},"current"),": ",Object(r.mdx)("em",{parentName:"p"},"number")," ; ",Object(r.mdx)("inlineCode",{parentName:"p"},"target"),": ",Object(r.mdx)("em",{parentName:"p"},"number"),"  }",">"),Object(r.mdx)("p",null,"Inherited from: ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#transactionconfidence"},"transactionConfidence")),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:110"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"transactionfromid"},"transactionFromID"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("strong",{parentName:"p"},"transactionFromID"),": (",Object(r.mdx)("inlineCode",{parentName:"p"},"txid"),": ",Object(r.mdx)("em",{parentName:"p"},"string")," ","|"," ",Object(r.mdx)("em",{parentName:"p"},"Buffer"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"txindex"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"reversed?"),": ",Object(r.mdx)("em",{parentName:"p"},"boolean"),") => ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<Transaction",">"),Object(r.mdx)("h4",{id:"type-declaration-11"},"Type declaration"),Object(r.mdx)("p",null,"\u25b8 (",Object(r.mdx)("inlineCode",{parentName:"p"},"txid"),": ",Object(r.mdx)("em",{parentName:"p"},"string")," ","|"," ",Object(r.mdx)("em",{parentName:"p"},"Buffer"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"txindex"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"reversed?"),": ",Object(r.mdx)("em",{parentName:"p"},"boolean"),"): ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<Transaction",">"),Object(r.mdx)("h4",{id:"parameters-11"},"Parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"txid")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string")," ","|"," ",Object(r.mdx)("em",{parentName:"td"},"Buffer"))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"txindex")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string"))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"reversed?")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"boolean"))))),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<Transaction",">"),Object(r.mdx)("p",null,"Inherited from: ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#transactionfromid"},"transactionFromID")),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:118"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"transactionid"},"transactionID"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("strong",{parentName:"p"},"transactionID"),": (",Object(r.mdx)("inlineCode",{parentName:"p"},"transaction"),": Transaction) => ",Object(r.mdx)("em",{parentName:"p"},"string")),Object(r.mdx)("p",null,Object(r.mdx)("inlineCode",{parentName:"p"},"transactionID")," should return a string that uniquely represents the\ntransaction."),Object(r.mdx)("h4",{id:"type-declaration-12"},"Type declaration"),Object(r.mdx)("p",null,"\u25b8 (",Object(r.mdx)("inlineCode",{parentName:"p"},"transaction"),": Transaction): ",Object(r.mdx)("em",{parentName:"p"},"string")),Object(r.mdx)("h4",{id:"parameters-12"},"Parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"transaction")),Object(r.mdx)("td",{parentName:"tr",align:"left"},"Transaction")))),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(r.mdx)("em",{parentName:"p"},"string")),Object(r.mdx)("p",null,"Inherited from: ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#transactionid"},"transactionID")),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:98"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"transactionrpcformat"},"transactionRPCFormat"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("strong",{parentName:"p"},"transactionRPCFormat"),": (",Object(r.mdx)("inlineCode",{parentName:"p"},"transaction"),": Transaction, ",Object(r.mdx)("inlineCode",{parentName:"p"},"v2?"),": ",Object(r.mdx)("em",{parentName:"p"},"boolean"),") => { ",Object(r.mdx)("inlineCode",{parentName:"p"},"txid"),": ",Object(r.mdx)("em",{parentName:"p"},"Buffer")," ; ",Object(r.mdx)("inlineCode",{parentName:"p"},"txindex"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),"  }"),Object(r.mdx)("h4",{id:"type-declaration-13"},"Type declaration"),Object(r.mdx)("p",null,"\u25b8 (",Object(r.mdx)("inlineCode",{parentName:"p"},"transaction"),": Transaction, ",Object(r.mdx)("inlineCode",{parentName:"p"},"v2?"),": ",Object(r.mdx)("em",{parentName:"p"},"boolean"),"): ",Object(r.mdx)("em",{parentName:"p"},"object")),Object(r.mdx)("h4",{id:"parameters-13"},"Parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"transaction")),Object(r.mdx)("td",{parentName:"tr",align:"left"},"Transaction")),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"v2?")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"boolean"))))),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(r.mdx)("em",{parentName:"p"},"object")),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"txid")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"Buffer"))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"txindex")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string"))))),Object(r.mdx)("p",null,"Inherited from: ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#transactionrpcformat"},"transactionRPCFormat")),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:114"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"utils"},"utils"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("strong",{parentName:"p"},"utils"),": ",Object(r.mdx)("em",{parentName:"p"},"object")),Object(r.mdx)("h4",{id:"type-declaration-14"},"Type declaration"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Description"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"addressExplorerLink?")),Object(r.mdx)("td",{parentName:"tr",align:"left"},"(",Object(r.mdx)("inlineCode",{parentName:"td"},"address"),": ",Object(r.mdx)("em",{parentName:"td"},"string")," ","|"," Address, ",Object(r.mdx)("inlineCode",{parentName:"td"},"network?"),": ",Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_networks.rennetworkdetails"},Object(r.mdx)("em",{parentName:"a"},"RenNetworkDetails"))," ","|"," Network ","|"," ",Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/enums/lib_interfaces_build_main_networks.rennetwork"},Object(r.mdx)("em",{parentName:"a"},"RenNetwork"))," ","|"," ",Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_networks#rennetworkstring"},Object(r.mdx)("em",{parentName:"a"},"RenNetworkString")),", ",Object(r.mdx)("inlineCode",{parentName:"td"},"explorer?"),": ",Object(r.mdx)("em",{parentName:"td"},"string"),") => ",Object(r.mdx)("em",{parentName:"td"},"undefined")," ","|"," ",Object(r.mdx)("em",{parentName:"td"},"string")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"addressExplorerLink")," should return a URL that can be shown to a user to access more information about an address.  ",Object(r.mdx)("inlineCode",{parentName:"td"},"explorer")," can be provided to request a link to a different explorer. It's up to the chain implementation to choose how to interpret this.")),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"transactionExplorerLink?")),Object(r.mdx)("td",{parentName:"tr",align:"left"},"(",Object(r.mdx)("inlineCode",{parentName:"td"},"transaction"),": ",Object(r.mdx)("em",{parentName:"td"},"string")," ","|"," Transaction, ",Object(r.mdx)("inlineCode",{parentName:"td"},"network?"),": ",Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_networks.rennetworkdetails"},Object(r.mdx)("em",{parentName:"a"},"RenNetworkDetails"))," ","|"," Network ","|"," ",Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/enums/lib_interfaces_build_main_networks.rennetwork"},Object(r.mdx)("em",{parentName:"a"},"RenNetwork"))," ","|"," ",Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_networks#rennetworkstring"},Object(r.mdx)("em",{parentName:"a"},"RenNetworkString")),", ",Object(r.mdx)("inlineCode",{parentName:"td"},"explorer?"),": ",Object(r.mdx)("em",{parentName:"td"},"string"),") => ",Object(r.mdx)("em",{parentName:"td"},"undefined")," ","|"," ",Object(r.mdx)("em",{parentName:"td"},"string")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"transactionExplorerLink")," should return a URL that can be shown to a user to access more information about a transaction.  ",Object(r.mdx)("inlineCode",{parentName:"td"},"explorer")," can be provided to request a link to a different explorer. It's up to the chain implementation to choose how to interpret this.")),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"addressIsValid")),Object(r.mdx)("td",{parentName:"tr",align:"left"},"(",Object(r.mdx)("inlineCode",{parentName:"td"},"address"),": ",Object(r.mdx)("em",{parentName:"td"},"string")," ","|"," Address, ",Object(r.mdx)("inlineCode",{parentName:"td"},"network?"),": ",Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_networks.rennetworkdetails"},Object(r.mdx)("em",{parentName:"a"},"RenNetworkDetails"))," ","|"," Network ","|"," ",Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/enums/lib_interfaces_build_main_networks.rennetwork"},Object(r.mdx)("em",{parentName:"a"},"RenNetwork"))," ","|"," ",Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_networks#rennetworkstring"},Object(r.mdx)("em",{parentName:"a"},"RenNetworkString")),") => ",Object(r.mdx)("em",{parentName:"td"},"boolean")),Object(r.mdx)("td",{parentName:"tr",align:"left"},"-")),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"resolveChainNetwork")),Object(r.mdx)("td",{parentName:"tr",align:"left"},"(",Object(r.mdx)("inlineCode",{parentName:"td"},"network"),": ",Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_networks.rennetworkdetails"},Object(r.mdx)("em",{parentName:"a"},"RenNetworkDetails"))," ","|"," Network ","|"," ",Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/enums/lib_interfaces_build_main_networks.rennetwork"},Object(r.mdx)("em",{parentName:"a"},"RenNetwork"))," ","|"," ",Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_networks#rennetworkstring"},Object(r.mdx)("em",{parentName:"a"},"RenNetworkString")),") => Network"),Object(r.mdx)("td",{parentName:"tr",align:"left"},"-")))),Object(r.mdx)("p",null,"Inherited from: ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#utils"},"utils")),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:228"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"withprovider"},"withProvider"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("inlineCode",{parentName:"p"},"Optional")," ",Object(r.mdx)("strong",{parentName:"p"},"withProvider"),": (...",Object(r.mdx)("inlineCode",{parentName:"p"},"args"),": ",Object(r.mdx)("em",{parentName:"p"},"any"),"[]) => ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.mintchain"},Object(r.mdx)("em",{parentName:"a"},"MintChain")),"<Transaction, Address, Network",">",">"),Object(r.mdx)("h4",{id:"type-declaration-15"},"Type declaration"),Object(r.mdx)("p",null,"\u25b8 (...",Object(r.mdx)("inlineCode",{parentName:"p"},"args"),": ",Object(r.mdx)("em",{parentName:"p"},"any"),"[]): ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.mintchain"},Object(r.mdx)("em",{parentName:"a"},"MintChain")),"<Transaction, Address, Network",">",">"),Object(r.mdx)("h4",{id:"parameters-14"},"Parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"...args")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"any"),"[]")))),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.mintchain"},Object(r.mdx)("em",{parentName:"a"},"MintChain")),"<Transaction, Address, Network",">",">"),Object(r.mdx)("p",null,"Inherited from: ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#withprovider"},"withProvider")),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:61"),Object(r.mdx)("h2",{id:"methods"},"Methods"),Object(r.mdx)("h3",{id:"getbalance"},"getBalance"),Object(r.mdx)("p",null,"\u25b8 ",Object(r.mdx)("strong",{parentName:"p"},"getBalance"),"(",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),", ",Object(r.mdx)("inlineCode",{parentName:"p"},"address"),": Address): ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<BigNumber",">"),Object(r.mdx)("p",null,"Fetch the addresses' balance of the asset's representation on the chain."),Object(r.mdx)("h4",{id:"parameters-15"},"Parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"asset")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string"))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"address")),Object(r.mdx)("td",{parentName:"tr",align:"left"},"Address")))),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<BigNumber",">"),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:218"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"getfees"},"getFees"),Object(r.mdx)("p",null,"\u25b8 ",Object(r.mdx)("strong",{parentName:"p"},"getFees"),"(",Object(r.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string"),"): ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<{ ",Object(r.mdx)("inlineCode",{parentName:"p"},"burn"),": ",Object(r.mdx)("em",{parentName:"p"},"number")," ; ",Object(r.mdx)("inlineCode",{parentName:"p"},"mint"),": ",Object(r.mdx)("em",{parentName:"p"},"number"),"  }",">"),Object(r.mdx)("p",null,"Fetch the mint and burn fees for an asset."),Object(r.mdx)("h4",{id:"parameters-16"},"Parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"asset")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string"))))),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(r.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<{ ",Object(r.mdx)("inlineCode",{parentName:"p"},"burn"),": ",Object(r.mdx)("em",{parentName:"p"},"number")," ; ",Object(r.mdx)("inlineCode",{parentName:"p"},"mint"),": ",Object(r.mdx)("em",{parentName:"p"},"number"),"  }",">"),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:211"))}l.isMDXComponent=!0},415:function(e,t,a){"use strict";a.r(t),a.d(t,"MDXContext",(function(){return p})),a.d(t,"MDXProvider",(function(){return o})),a.d(t,"mdx",(function(){return x})),a.d(t,"useMDXComponents",(function(){return s})),a.d(t,"withMDXComponents",(function(){return b}));var n=a(0),r=a.n(n);function m(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}function d(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?d(Object(a),!0).forEach((function(t){m(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):d(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},m=Object.keys(e);for(n=0;n<m.length;n++)a=m[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(n=0;n<m.length;n++)a=m[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),b=function(e){return function(t){var a=s(t.components);return r.a.createElement(e,i({},t,{components:a}))}},s=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},o=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},j={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,m=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(a),b=n,o=p["".concat(i,".").concat(b)]||p[b]||j[b]||m;return a?r.a.createElement(o,c(c({ref:t},d),{},{components:a})):r.a.createElement(o,c({ref:t},d))}));function x(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var m=a.length,i=new Array(m);i[0]=O;var d={};for(var c in t)hasOwnProperty.call(t,c)&&(d[c]=t[c]);d.originalType=e,d.mdxType="string"==typeof e?e:n,i[1]=d;for(var l=2;l<m;l++)i[l]=a[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"}}]);