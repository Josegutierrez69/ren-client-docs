(window.webpackJsonp=window.webpackJsonp||[]).push([[196],{228:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return c})),r.d(n,"metadata",(function(){return i})),r.d(n,"toc",(function(){return u})),r.d(n,"default",(function(){return p}));var t=r(3),a=r(8),o=(r(0),r(488)),c={id:"int",title:"Int"},i={unversionedId:"subgraph/scalars/int",id:"subgraph/scalars/int",isDocsHomePage:!1,title:"Int",description:"The Int scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",source:"@site/subgraph/subgraph/scalars/int.mdx",slug:"/subgraph/scalars/int",permalink:"/ren-client-docs/subgraph/subgraph/scalars/int",version:"current",sidebar:"subgraph",previous:{title:"ID",permalink:"/ren-client-docs/subgraph/subgraph/scalars/id"},next:{title:"String",permalink:"/ren-client-docs/subgraph/subgraph/scalars/string"}},u=[],s={toc:u};function p(e){var n=e.components,r=Object(a.a)(e,["components"]);return Object(o.mdx)("wrapper",Object(t.default)({},s,r,{components:n,mdxType:"MDXLayout"}),Object(o.mdx)("p",null,"The ",Object(o.mdx)("inlineCode",{parentName:"p"},"Int")," scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."),Object(o.mdx)("pre",null,Object(o.mdx)("code",{parentName:"pre",className:"language-graphql"},"scalar Int\n")))}p.isMDXComponent=!0},488:function(e,n,r){"use strict";r.r(n),r.d(n,"MDXContext",(function(){return p})),r.d(n,"MDXProvider",(function(){return d})),r.d(n,"mdx",(function(){return g})),r.d(n,"useMDXComponents",(function(){return f})),r.d(n,"withMDXComponents",(function(){return l}));var t=r(0),a=r.n(t);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function c(){return(c=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e}).apply(this,arguments)}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function u(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),l=function(e){return function(n){var r=f(n.components);return a.a.createElement(e,c({},n,{components:r}))}},f=function(e){var n=a.a.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):u(u({},n),e)),r},d=function(e){var n=f(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},b=a.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,o=e.originalType,c=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),p=f(r),l=t,d=p["".concat(c,".").concat(l)]||p[l]||m[l]||o;return r?a.a.createElement(d,u(u({ref:n},i),{},{components:r})):a.a.createElement(d,u({ref:n},i))}));function g(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=r.length,c=new Array(o);c[0]=b;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:t,c[1]=i;for(var s=2;s<o;s++)c[s]=r[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"}}]);