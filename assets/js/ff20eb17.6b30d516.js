(window.webpackJsonp=window.webpackJsonp||[]).push([[299],{332:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return m})),n.d(t,"toc",(function(){return d})),n.d(t,"default",(function(){return o}));var a=n(3),r=n(9),i=(n(0),n(414)),c={id:"lib_ren_src_lockandmint.lockandmintdeposit",title:"Class: LockAndMintDeposit<LockTransaction, LockDeposit, LockAddress, MintTransaction, MintAddress>",sidebar_label:"LockAndMintDeposit",custom_edit_url:null},m={unversionedId:"api/classes/lib_ren_src_lockandmint.lockandmintdeposit",id:"api/classes/lib_ren_src_lockandmint.lockandmintdeposit",isDocsHomePage:!1,title:"Class: LockAndMintDeposit<LockTransaction, LockDeposit, LockAddress, MintTransaction, MintAddress>",description:"Class: LockAndMintDeposit",source:"@site/ren-js/api/classes/lib_ren_src_lockandmint.lockandmintdeposit.md",slug:"/api/classes/lib_ren_src_lockandmint.lockandmintdeposit",permalink:"/ren-client-docs/ren-js/api/classes/lib_ren_src_lockandmint.lockandmintdeposit",editUrl:null,version:"current",sidebar_label:"LockAndMintDeposit"},d=[{value:"Type parameters",id:"type-parameters",children:[]},{value:"Properties",id:"properties",children:[{value:"_state",id:"_state",children:[]},{value:"depositDetails",id:"depositdetails",children:[]},{value:"mintTransaction",id:"minttransaction",children:[]},{value:"params",id:"params",children:[]},{value:"renVM",id:"renvm",children:[]},{value:"revertReason",id:"revertreason",children:[]},{value:"status",id:"status",children:[]}]},{value:"Main Methods",id:"main-methods",children:[{value:"confirmed",id:"confirmed",children:[]},{value:"mint",id:"mint",children:[]},{value:"signed",id:"signed",children:[]}]},{value:"Other Methods",id:"other-methods",children:[{value:"confirmationTarget",id:"confirmationtarget",children:[]},{value:"confirmations",id:"confirmations",children:[]},{value:"findTransaction",id:"findtransaction",children:[]},{value:"queryTx",id:"querytx",children:[]},{value:"txHash",id:"txhash",children:[]}]}],s={toc:d};function o(e){var t=e.components,n=Object(r.default)(e,["components"]);return Object(i.mdx)("wrapper",Object(a.default)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.mdx)("h1",{id:"class-lockandmintdepositlocktransaction-lockdeposit-lockaddress-minttransaction-mintaddress"},"Class: LockAndMintDeposit<LockTransaction, LockDeposit, LockAddress, MintTransaction, MintAddress",">"),Object(i.mdx)("p",null,Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_ren_src_lockandmint"},"lib/ren/src/lockAndMint"),".LockAndMintDeposit"),Object(i.mdx)("p",null,"A LockAndMintDeposit represents a deposit that has been made to a gateway\naddress."),Object(i.mdx)("p",null,"Once it has been detected, the steps required to complete the mint are:"),Object(i.mdx)("ol",null,Object(i.mdx)("li",{parentName:"ol"},"Wait for the transaction to be mined. The number of confirmations here\ndepends on the asset."),Object(i.mdx)("li",{parentName:"ol"},"Submit the deposit to RenVM and wait for a signature."),Object(i.mdx)("li",{parentName:"ol"},"Submit the deposit to the lock-chain.")),Object(i.mdx)("p",null,"Each of these steps can be performed using their respective methods. Each\nof these return a PromiEvent, meaning that in addition to being a promise,\nthey also emit events that can be listened to."),Object(i.mdx)("pre",null,Object(i.mdx)("code",{parentName:"pre",className:"language-ts"},"await deposit.confirmed();\nawait deposit.signed();\nawait deposit.mint();\n")),Object(i.mdx)("h2",{id:"type-parameters"},"Type parameters"),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Type"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Default"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"LockTransaction")),Object(i.mdx)("td",{parentName:"tr",align:"left"},"-"),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"any"))),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"LockDeposit")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#depositcommon"},Object(i.mdx)("em",{parentName:"a"},"DepositCommon")),"<LockTransaction",">"),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#depositcommon"},Object(i.mdx)("em",{parentName:"a"},"DepositCommon")),"<LockTransaction",">")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"LockAddress")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"string")," ","|"," { ",Object(i.mdx)("inlineCode",{parentName:"td"},"address"),": ",Object(i.mdx)("em",{parentName:"td"},"string"),"  }"),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"any"))),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"MintTransaction")),Object(i.mdx)("td",{parentName:"tr",align:"left"},"-"),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"any"))),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"MintAddress")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"string")," ","|"," { ",Object(i.mdx)("inlineCode",{parentName:"td"},"address"),": ",Object(i.mdx)("em",{parentName:"td"},"string"),"  }"),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"any"))))),Object(i.mdx)("h2",{id:"properties"},"Properties"),Object(i.mdx)("h3",{id:"_state"},"_","state"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"_","state"),": MintState & MintStatePartial & DepositState"),Object(i.mdx)("p",null,"Internal state of the mint object, including the ",Object(i.mdx)("inlineCode",{parentName:"p"},"gHash")," and ",Object(i.mdx)("inlineCode",{parentName:"p"},"pHash"),".\nInterface may change across minor and patch releases."),Object(i.mdx)("p",null,"Defined in: ",Object(i.mdx)("a",{parentName:"p",href:"https://github.com/renproject/ren-js/blob/c6712eb8/packages/lib/ren/src/lockAndMint.ts#L631"},"ren-js/packages/lib/ren/src/lockAndMint.ts:631")),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"depositdetails"},"depositDetails"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"depositDetails"),": LockDeposit"),Object(i.mdx)("p",null,"The details, including amount, of the deposit."),Object(i.mdx)("p",null,"Defined in: ",Object(i.mdx)("a",{parentName:"p",href:"https://github.com/renproject/ren-js/blob/c6712eb8/packages/lib/ren/src/lockAndMint.ts#L599"},"ren-js/packages/lib/ren/src/lockAndMint.ts:599")),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"minttransaction"},"mintTransaction"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("inlineCode",{parentName:"p"},"Optional")," ",Object(i.mdx)("strong",{parentName:"p"},"mintTransaction"),": MintTransaction"),Object(i.mdx)("p",null,"Defined in: ",Object(i.mdx)("a",{parentName:"p",href:"https://github.com/renproject/ren-js/blob/c6712eb8/packages/lib/ren/src/lockAndMint.ts#L624"},"ren-js/packages/lib/ren/src/lockAndMint.ts:624")),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"params"},"params"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"params"),": ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_parameters.lockandmintparams"},Object(i.mdx)("em",{parentName:"a"},"LockAndMintParams")),"<LockTransaction, LockDeposit, LockAddress, MintTransaction, MintAddress",">"),Object(i.mdx)("p",null,"The parameters passed in when calling [","[RenJS.lockAndMint]","]."),Object(i.mdx)("p",null,"Defined in: ",Object(i.mdx)("a",{parentName:"p",href:"https://github.com/renproject/ren-js/blob/c6712eb8/packages/lib/ren/src/lockAndMint.ts#L602"},"ren-js/packages/lib/ren/src/lockAndMint.ts:602")),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"renvm"},"renVM"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"renVM"),": ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_rpc_build_main_abstract.abstractrenvmprovider"},Object(i.mdx)("em",{parentName:"a"},"AbstractRenVMProvider")),"<{}, {}",">"),Object(i.mdx)("p",null,"See [","[RenJS.renVM]","]."),Object(i.mdx)("p",null,"Defined in: ",Object(i.mdx)("a",{parentName:"p",href:"https://github.com/renproject/ren-js/blob/c6712eb8/packages/lib/ren/src/lockAndMint.ts#L622"},"ren-js/packages/lib/ren/src/lockAndMint.ts:622")),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"revertreason"},"revertReason"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("inlineCode",{parentName:"p"},"Optional")," ",Object(i.mdx)("strong",{parentName:"p"},"revertReason"),": ",Object(i.mdx)("em",{parentName:"p"},"string")),Object(i.mdx)("p",null,"Defined in: ",Object(i.mdx)("a",{parentName:"p",href:"https://github.com/renproject/ren-js/blob/c6712eb8/packages/lib/ren/src/lockAndMint.ts#L625"},"ren-js/packages/lib/ren/src/lockAndMint.ts:625")),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"status"},"status"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"status"),": ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/enums/lib_ren_src_lockandmint.depositstatus"},Object(i.mdx)("em",{parentName:"a"},"DepositStatus"))),Object(i.mdx)("p",null,"The status of the deposit, updated automatically. You can also call\n",Object(i.mdx)("inlineCode",{parentName:"p"},"refreshStatus")," to re-fetch this."),Object(i.mdx)("pre",null,Object(i.mdx)("code",{parentName:"pre",className:"language-ts"},'deposit.status;\n// > "signed"\n')),Object(i.mdx)("p",null,"Defined in: ",Object(i.mdx)("a",{parentName:"p",href:"https://github.com/renproject/ren-js/blob/c6712eb8/packages/lib/ren/src/lockAndMint.ts#L619"},"ren-js/packages/lib/ren/src/lockAndMint.ts:619")),Object(i.mdx)("h2",{id:"main-methods"},"Main Methods"),Object(i.mdx)("h3",{id:"confirmed"},"confirmed"),Object(i.mdx)("p",null,"\u25b8 ",Object(i.mdx)("strong",{parentName:"p"},"confirmed"),"(): ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_promievent#promievent"},Object(i.mdx)("em",{parentName:"a"},"PromiEvent")),"<",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/classes/lib_ren_src_lockandmint.lockandmintdeposit"},Object(i.mdx)("em",{parentName:"a"},"LockAndMintDeposit")),"<LockTransaction, LockDeposit, LockAddress, MintTransaction, MintAddress",">",", { ",Object(i.mdx)("inlineCode",{parentName:"p"},"confirmation"),": ","[",Object(i.mdx)("em",{parentName:"p"},"number"),", ",Object(i.mdx)("em",{parentName:"p"},"number"),"]"," ; ",Object(i.mdx)("inlineCode",{parentName:"p"},"target"),": ","[",Object(i.mdx)("em",{parentName:"p"},"number"),"]","  }",">"),Object(i.mdx)("p",null,Object(i.mdx)("inlineCode",{parentName:"p"},"confirmed")," will return once the deposit has reached the target number of\nconfirmations."),Object(i.mdx)("p",null,"It returns a PromiEvent which emits a ",Object(i.mdx)("inlineCode",{parentName:"p"},'"confirmation"')," event with the\ncurrent and target number of confirmations as the event parameters."),Object(i.mdx)("p",null,"The events emitted by the PromiEvent are:"),Object(i.mdx)("ol",null,Object(i.mdx)("li",{parentName:"ol"},Object(i.mdx)("inlineCode",{parentName:"li"},'"confirmation"')," - called when a new confirmation is seen"),Object(i.mdx)("li",{parentName:"ol"},Object(i.mdx)("inlineCode",{parentName:"li"},'"target"')," - called immediately to make the target confirmations\navailable.")),Object(i.mdx)("pre",null,Object(i.mdx)("code",{parentName:"pre",className:"language-ts"},'await deposit\n .confirmed()\n .on("target", (target) => console.log(`Waiting for ${target} confirmations`))\n .on("confirmation", (confs, target) => console.log(`${confs}/${target}`))\n')),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_promievent#promievent"},Object(i.mdx)("em",{parentName:"a"},"PromiEvent")),"<",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/classes/lib_ren_src_lockandmint.lockandmintdeposit"},Object(i.mdx)("em",{parentName:"a"},"LockAndMintDeposit")),"<LockTransaction, LockDeposit, LockAddress, MintTransaction, MintAddress",">",", { ",Object(i.mdx)("inlineCode",{parentName:"p"},"confirmation"),": ","[",Object(i.mdx)("em",{parentName:"p"},"number"),", ",Object(i.mdx)("em",{parentName:"p"},"number"),"]"," ; ",Object(i.mdx)("inlineCode",{parentName:"p"},"target"),": ","[",Object(i.mdx)("em",{parentName:"p"},"number"),"]","  }",">"),Object(i.mdx)("p",null,"Defined in: ",Object(i.mdx)("a",{parentName:"p",href:"https://github.com/renproject/ren-js/blob/c6712eb8/packages/lib/ren/src/lockAndMint.ts#L1023"},"ren-js/packages/lib/ren/src/lockAndMint.ts:1023")),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"mint"},"mint"),Object(i.mdx)("p",null,"\u25b8 ",Object(i.mdx)("strong",{parentName:"p"},"mint"),"(",Object(i.mdx)("inlineCode",{parentName:"p"},"override?"),": { ","[name: string]",": ",Object(i.mdx)("em",{parentName:"p"},"unknown"),";  }): ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_promievent#promievent"},Object(i.mdx)("em",{parentName:"a"},"PromiEvent")),"<any, { ","[key: string]",": ",Object(i.mdx)("em",{parentName:"p"},"any"),";  }",">"),Object(i.mdx)("p",null,Object(i.mdx)("inlineCode",{parentName:"p"},"mint")," submits the RenVM signature to the mint chain."),Object(i.mdx)("p",null,"It returns a PromiEvent and the events emitted depend on the mint chain."),Object(i.mdx)("p",null,"The PromiEvent's events are defined by the mint-chain implementation. For\nEthereum, it emits the same events as a Web3 PromiEvent."),Object(i.mdx)("h4",{id:"parameters"},"Parameters"),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"override?")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"object"))))),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_promievent#promievent"},Object(i.mdx)("em",{parentName:"a"},"PromiEvent")),"<any, { ","[key: string]",": ",Object(i.mdx)("em",{parentName:"p"},"any"),";  }",">"),Object(i.mdx)("p",null,"Defined in: ",Object(i.mdx)("a",{parentName:"p",href:"https://github.com/renproject/ren-js/blob/c6712eb8/packages/lib/ren/src/lockAndMint.ts#L1321"},"ren-js/packages/lib/ren/src/lockAndMint.ts:1321")),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"signed"},"signed"),Object(i.mdx)("p",null,"\u25b8 ",Object(i.mdx)("strong",{parentName:"p"},"signed"),"(): ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_promievent#promievent"},Object(i.mdx)("em",{parentName:"a"},"PromiEvent")),"<",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/classes/lib_ren_src_lockandmint.lockandmintdeposit"},Object(i.mdx)("em",{parentName:"a"},"LockAndMintDeposit")),"<LockTransaction, LockDeposit, LockAddress, MintTransaction, MintAddress",">",", { ",Object(i.mdx)("inlineCode",{parentName:"p"},"status"),": [",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/enums/lib_interfaces_build_main_types.txstatus"},Object(i.mdx)("em",{parentName:"a"},"TxStatus")),"] ; ",Object(i.mdx)("inlineCode",{parentName:"p"},"txHash"),": ","[",Object(i.mdx)("em",{parentName:"p"},"string"),"]","  }",">"),Object(i.mdx)("p",null,Object(i.mdx)("inlineCode",{parentName:"p"},"signed")," waits for RenVM's signature to be available."),Object(i.mdx)("p",null,"It returns a PromiEvent which emits a ",Object(i.mdx)("inlineCode",{parentName:"p"},'"txHash"')," event with the deposit's\nRenVM txHash (aka Transaction ID)."),Object(i.mdx)("pre",null,Object(i.mdx)("code",{parentName:"pre",className:"language-ts"},'await deposit\n .signed()\n .on("txHash", (txHash) => console.log(txHash))\n')),Object(i.mdx)("p",null,"The events emitted by the PromiEvent are:"),Object(i.mdx)("ol",null,Object(i.mdx)("li",{parentName:"ol"},Object(i.mdx)("inlineCode",{parentName:"li"},"txHash")," - the RenVM transaction hash of the deposit."),Object(i.mdx)("li",{parentName:"ol"},Object(i.mdx)("inlineCode",{parentName:"li"},"status")," - the RenVM status of the transaction, of type ",Object(i.mdx)("a",{parentName:"li",href:"/ren-client-docs/ren-js/api/enums/lib_interfaces_build_main_types.txstatus"},"TxStatus"),".")),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_promievent#promievent"},Object(i.mdx)("em",{parentName:"a"},"PromiEvent")),"<",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/classes/lib_ren_src_lockandmint.lockandmintdeposit"},Object(i.mdx)("em",{parentName:"a"},"LockAndMintDeposit")),"<LockTransaction, LockDeposit, LockAddress, MintTransaction, MintAddress",">",", { ",Object(i.mdx)("inlineCode",{parentName:"p"},"status"),": [",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/enums/lib_interfaces_build_main_types.txstatus"},Object(i.mdx)("em",{parentName:"a"},"TxStatus")),"] ; ",Object(i.mdx)("inlineCode",{parentName:"p"},"txHash"),": ","[",Object(i.mdx)("em",{parentName:"p"},"string"),"]","  }",">"),Object(i.mdx)("p",null,"Defined in: ",Object(i.mdx)("a",{parentName:"p",href:"https://github.com/renproject/ren-js/blob/c6712eb8/packages/lib/ren/src/lockAndMint.ts#L1145"},"ren-js/packages/lib/ren/src/lockAndMint.ts:1145")),Object(i.mdx)("hr",null),Object(i.mdx)("h2",{id:"other-methods"},"Other Methods"),Object(i.mdx)("h3",{id:"confirmationtarget"},"confirmationTarget"),Object(i.mdx)("p",null,"\u25b8 ",Object(i.mdx)("strong",{parentName:"p"},"confirmationTarget"),"(): ",Object(i.mdx)("em",{parentName:"p"},"Promise"),"<number",">"),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("em",{parentName:"p"},"Promise"),"<number",">"),Object(i.mdx)("p",null,"Defined in: ",Object(i.mdx)("a",{parentName:"p",href:"https://github.com/renproject/ren-js/blob/c6712eb8/packages/lib/ren/src/lockAndMint.ts#L978"},"ren-js/packages/lib/ren/src/lockAndMint.ts:978")),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"confirmations"},"confirmations"),Object(i.mdx)("p",null,"\u25b8 ",Object(i.mdx)("strong",{parentName:"p"},"confirmations"),"(): ",Object(i.mdx)("em",{parentName:"p"},"Promise"),"<{ ",Object(i.mdx)("inlineCode",{parentName:"p"},"current"),": ",Object(i.mdx)("em",{parentName:"p"},"number")," ; ",Object(i.mdx)("inlineCode",{parentName:"p"},"target"),": ",Object(i.mdx)("em",{parentName:"p"},"number"),"  }",">"),Object(i.mdx)("p",null,Object(i.mdx)("inlineCode",{parentName:"p"},"confirmations")," returns the deposit's current and target number of\nconfirmations on the lock-chain."),Object(i.mdx)("pre",null,Object(i.mdx)("code",{parentName:"pre",className:"language-ts"},"await deposit\n .confirmations();\n// > { current: 4, target: 6 }\n")),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("em",{parentName:"p"},"Promise"),"<{ ",Object(i.mdx)("inlineCode",{parentName:"p"},"current"),": ",Object(i.mdx)("em",{parentName:"p"},"number")," ; ",Object(i.mdx)("inlineCode",{parentName:"p"},"target"),": ",Object(i.mdx)("em",{parentName:"p"},"number"),"  }",">"),Object(i.mdx)("p",null,"Defined in: ",Object(i.mdx)("a",{parentName:"p",href:"https://github.com/renproject/ren-js/blob/c6712eb8/packages/lib/ren/src/lockAndMint.ts#L960"},"ren-js/packages/lib/ren/src/lockAndMint.ts:960")),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"findtransaction"},"findTransaction"),Object(i.mdx)("p",null,"\u25b8 ",Object(i.mdx)("strong",{parentName:"p"},"findTransaction"),"(): ",Object(i.mdx)("em",{parentName:"p"},"Promise"),"<undefined ","|"," MintTransaction",">"),Object(i.mdx)("p",null,Object(i.mdx)("inlineCode",{parentName:"p"},"findTransaction")," checks if the deposit signature has already been\nsubmitted to the mint chain."),Object(i.mdx)("pre",null,Object(i.mdx)("code",{parentName:"pre",className:"language-ts"},'await deposit.findTransaction();\n// > "0x1234" // (or undefined)\n')),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("em",{parentName:"p"},"Promise"),"<undefined ","|"," MintTransaction",">"),Object(i.mdx)("p",null,"Defined in: ",Object(i.mdx)("a",{parentName:"p",href:"https://github.com/renproject/ren-js/blob/c6712eb8/packages/lib/ren/src/lockAndMint.ts#L1294"},"ren-js/packages/lib/ren/src/lockAndMint.ts:1294")),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"querytx"},"queryTx"),Object(i.mdx)("p",null,"\u25b8 ",Object(i.mdx)("strong",{parentName:"p"},"queryTx"),"(): ",Object(i.mdx)("em",{parentName:"p"},"Promise"),"<",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_transaction#lockandminttransaction"},Object(i.mdx)("em",{parentName:"a"},"LockAndMintTransaction")),">"),Object(i.mdx)("p",null,Object(i.mdx)("inlineCode",{parentName:"p"},"queryTx")," fetches the RenVM transaction details of the deposit."),Object(i.mdx)("pre",null,Object(i.mdx)("code",{parentName:"pre",className:"language-ts"},'await deposit.queryTx();\n// > { to: "...", hash: "...", status: "done", in: {...}, out: {...} }\n\n**Returns:** *Promise*<[*LockAndMintTransaction*](../modules/lib_interfaces_build_main_transaction.md#lockandminttransaction)\\>\n\nDefined in: [ren-js/packages/lib/ren/src/lockAndMint.ts:849](https://github.com/renproject/ren-js/blob/c6712eb8/packages/lib/ren/src/lockAndMint.ts#L849)\n\n___\n\n### refreshStatus\n\n\u25b8 **refreshStatus**(): *Promise*<[*DepositStatus*](../enums/lib_ren_src_lockandmint.depositstatus.md)\\>\n\n`refreshStatus` fetches the deposit\'s status on the mint-chain, RenVM\nand lock-chain to calculate it\'s [DepositStatus](../enums/lib_ren_src_lockandmint.depositstatus.md).\n\n```ts\nawait deposit.refreshStatus();\n// > "signed"\n')),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("em",{parentName:"p"},"Promise"),"<",Object(i.mdx)("a",{parentName:"p",href:"../enums/lib_ren_src_lockandmint.depositstatus.md"},Object(i.mdx)("em",{parentName:"a"},"DepositStatus")),">"),Object(i.mdx)("p",null,"Defined in: ",Object(i.mdx)("a",{parentName:"p",href:"https://github.com/renproject/ren-js/blob/c6712eb8/packages/lib/ren/src/lockAndMint.ts#L889"},"ren-js/packages/lib/ren/src/lockAndMint.ts:889")),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"txhash"},"txHash"),Object(i.mdx)("p",null,"\u25b8 ",Object(i.mdx)("strong",{parentName:"p"},"txHash"),"(): ",Object(i.mdx)("em",{parentName:"p"},"string")),Object(i.mdx)("p",null,Object(i.mdx)("inlineCode",{parentName:"p"},"txHash")," returns the RenVM transaction hash, which is distinct from the\nlock or mint chain transaction hashes. It can be used to query the\nlock-and-mint details from RenVM  once they've been submitted to it."),Object(i.mdx)("p",null,"The RenVM txHash is a URL-base64 string."),Object(i.mdx)("pre",null,Object(i.mdx)("code",{parentName:"pre",className:"language-ts"},'deposit.txHash();\n// > "QNM87rNDuxx54H7VK7D_NAU0u_mjk09-G25IJZL1QrI"\n')),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("em",{parentName:"p"},"string")),Object(i.mdx)("p",null,"Defined in: ",Object(i.mdx)("a",{parentName:"p",href:"https://github.com/renproject/ren-js/blob/c6712eb8/packages/lib/ren/src/lockAndMint.ts#L836"},"ren-js/packages/lib/ren/src/lockAndMint.ts:836")))}o.isMDXComponent=!0},414:function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return o})),n.d(t,"MDXProvider",(function(){return b})),n.d(t,"mdx",(function(){return x})),n.d(t,"useMDXComponents",(function(){return l})),n.d(t,"withMDXComponents",(function(){return p}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function m(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?m(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):m(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),p=function(e){return function(t){var n=l(t.components);return r.a.createElement(e,c({},t,{components:n}))}},l=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},b=function(e){var t=l(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},j={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),o=l(n),p=a,b=o["".concat(c,".").concat(p)]||o[p]||j[p]||i;return n?r.a.createElement(b,d(d({ref:t},m),{},{components:n})):r.a.createElement(b,d({ref:t},m))}));function x(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=u;var m={};for(var d in t)hasOwnProperty.call(t,d)&&(m[d]=t[d]);m.originalType=e,m.mdxType="string"==typeof e?e:a,c[1]=m;for(var s=2;s<i;s++)c[s]=n[s];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);