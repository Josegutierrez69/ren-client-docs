(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{488:function(e,n,r){"use strict";r.r(n),r.d(n,"MDXContext",(function(){return s})),r.d(n,"MDXProvider",(function(){return f})),r.d(n,"mdx",(function(){return y})),r.d(n,"useMDXComponents",(function(){return d})),r.d(n,"withMDXComponents",(function(){return l}));var t=r(0),a=r.n(t);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function c(){return(c=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e}).apply(this,arguments)}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function u(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function p(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),l=function(e){return function(n){var r=d(n.components);return a.a.createElement(e,c({},n,{components:r}))}},d=function(e){var n=a.a.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):u(u({},n),e)),r},f=function(e){var n=d(e.components);return a.a.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},b=a.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,o=e.originalType,c=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),s=d(r),l=t,f=s["".concat(c,".").concat(l)]||s[l]||m[l]||o;return r?a.a.createElement(f,u(u({ref:n},i),{},{components:r})):a.a.createElement(f,u({ref:n},i))}));function y(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=r.length,c=new Array(o);c[0]=b;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:t,c[1]=i;for(var p=2;p<o;p++)c[p]=r[p];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},489:function(e,n,r){"use strict";var t=r(4).default;Object.defineProperty(n,"__esModule",{value:!0}),n.DocTag=n.DocType=void 0;var a=t(r(0));let o;n.DocType=o,function(e){e.Tutorial="Tutorial",e.HowTo="How To",e.Reference="Reference",e.Explanation="Explanation"}(o||(n.DocType=o={}));const c={[o.Tutorial]:"#b16bfc",[o.HowTo]:"#EC0088",[o.Reference]:"#ff823a",[o.Explanation]:"#29C0AF"};n.DocTag=({type:e,marginBottom:n})=>a.default.createElement(a.default.Fragment,null,a.default.createElement("span",{style:{border:"2px solid "+c[e]||!1,borderRadius:"5px",color:c[e]||"orange",padding:"0.1rem 0.4rem",marginBottom:void 0!==n?n:30,display:"inline-block"}},String(e)))},55:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return i})),r.d(n,"metadata",(function(){return u})),r.d(n,"toc",(function(){return p})),r.d(n,"Tag",(function(){return s})),r.d(n,"default",(function(){return d}));var t=r(3),a=r(8),o=(r(0),r(488)),c=r(489),i={id:"id",title:"ID"},u={unversionedId:"subgraph/scalars/id",id:"subgraph/scalars/id",isDocsHomePage:!1,title:"ID",description:"<span",source:"@site/subgraph/subgraph/scalars/id.mdx",slug:"/subgraph/scalars/id",permalink:"/ren-client-docs/subgraph/subgraph/scalars/id",version:"current",sidebar:"subgraph",previous:{title:"Bytes",permalink:"/ren-client-docs/subgraph/subgraph/scalars/bytes"},next:{title:"Int",permalink:"/ren-client-docs/subgraph/subgraph/scalars/int"}},p=[],s=function(e){var n=e.children,r=e.color;return Object(o.mdx)("span",{style:{backgroundColor:r,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},n)},l={toc:p,Tag:s};function d(e){var n=e.components,r=Object(a.a)(e,["components"]);return Object(o.mdx)("wrapper",Object(t.default)({},l,r,{components:n,mdxType:"MDXLayout"}),Object(o.mdx)(c.DocTag,{type:c.DocType.Reference,mdxType:"DocTag"}),Object(o.mdx)("p",null,"The ",Object(o.mdx)("inlineCode",{parentName:"p"},"ID")," scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as ",Object(o.mdx)("inlineCode",{parentName:"p"},'"4"'),") or integer (such as ",Object(o.mdx)("inlineCode",{parentName:"p"},"4"),") input value will be accepted as an ID."),Object(o.mdx)("pre",null,Object(o.mdx)("code",{parentName:"pre",className:"language-graphql"},"scalar ID\n")))}d.isMDXComponent=!0}}]);