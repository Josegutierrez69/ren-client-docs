(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{168:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return m})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return s}));var a=n(3),r=(n(0),n(486));const i={id:"interfaces_build_main_parameters.lockandmintparams",title:"Interface: LockAndMintParams<LockTransaction, LockDeposit, LockAddress, MintTransaction, MintAddress>",sidebar_label:"LockAndMintParams",custom_edit_url:null,hide_title:!0},m={unversionedId:"api/interfaces/interfaces_build_main_parameters.lockandmintparams",id:"api/interfaces/interfaces_build_main_parameters.lockandmintparams",isDocsHomePage:!1,title:"Interface: LockAndMintParams<LockTransaction, LockDeposit, LockAddress, MintTransaction, MintAddress>",description:"Interface: LockAndMintParams",source:"@site/ren-js/api/interfaces/interfaces_build_main_parameters.lockandmintparams.md",slug:"/api/interfaces/interfaces_build_main_parameters.lockandmintparams",permalink:"/ren-client-docs/ren-js/api/interfaces/interfaces_build_main_parameters.lockandmintparams",editUrl:null,version:"current",sidebar_label:"LockAndMintParams",sidebar:"docs",previous:{title:"Interface: ContractCall",permalink:"/ren-client-docs/ren-js/api/interfaces/interfaces_build_main_parameters.contractcall"},next:{title:"Interface: TransferParamsCommon",permalink:"/ren-client-docs/ren-js/api/interfaces/interfaces_build_main_parameters.transferparamscommon"}},c=[{value:"Type parameters",id:"type-parameters",children:[]},{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Properties",id:"properties",children:[{value:"asset",id:"asset",children:[]},{value:"contractCalls",id:"contractcalls",children:[]},{value:"from",id:"from",children:[]},{value:"nonce",id:"nonce",children:[]},{value:"tags",id:"tags",children:[]},{value:"to",id:"to",children:[]},{value:"txHash",id:"txhash",children:[]}]}],d={toc:c};function s({components:e,...t}){return Object(r.mdx)("wrapper",Object(a.default)({},d,t,{components:e,mdxType:"MDXLayout"}),Object(r.mdx)("h1",{id:"interface-lockandmintparamslocktransaction-lockdeposit-lockaddress-minttransaction-mintaddress"},"Interface: LockAndMintParams<LockTransaction, LockDeposit, LockAddress, MintTransaction, MintAddress",">"),Object(r.mdx)("p",null,Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/interfaces_build_main_parameters"},"interfaces/build/main/parameters"),".LockAndMintParams"),Object(r.mdx)("p",null,"The parameters for a cross-chain transfer onto Ethereum."),Object(r.mdx)("h2",{id:"type-parameters"},"Type parameters"),Object(r.mdx)("table",null,Object(r.mdx)("thead",{parentName:"table"},Object(r.mdx)("tr",{parentName:"thead"},Object(r.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Type"),Object(r.mdx)("th",{parentName:"tr",align:"left"},"Default"))),Object(r.mdx)("tbody",{parentName:"table"},Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"LockTransaction")),Object(r.mdx)("td",{parentName:"tr",align:"left"},"-"),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"any"))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"LockDeposit")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/modules/interfaces_build_main_chain#depositcommon"},Object(r.mdx)("em",{parentName:"a"},"DepositCommon")),"<LockTransaction",">"),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/modules/interfaces_build_main_chain#depositcommon"},Object(r.mdx)("em",{parentName:"a"},"DepositCommon")),"<LockTransaction",">")),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"LockAddress")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string")," ","|"," { ",Object(r.mdx)("inlineCode",{parentName:"td"},"address"),": ",Object(r.mdx)("em",{parentName:"td"},"string"),"  }"),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"any"))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"MintTransaction")),Object(r.mdx)("td",{parentName:"tr",align:"left"},"-"),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"any"))),Object(r.mdx)("tr",{parentName:"tbody"},Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("inlineCode",{parentName:"td"},"MintAddress")),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"string")," ","|"," { ",Object(r.mdx)("inlineCode",{parentName:"td"},"address"),": ",Object(r.mdx)("em",{parentName:"td"},"string"),"  }"),Object(r.mdx)("td",{parentName:"tr",align:"left"},Object(r.mdx)("em",{parentName:"td"},"any"))))),Object(r.mdx)("h2",{id:"hierarchy"},"Hierarchy"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("p",{parentName:"li"},Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/interfaces_build_main_parameters.transferparamscommon"},Object(r.mdx)("em",{parentName:"a"},"TransferParamsCommon"))),Object(r.mdx)("p",{parentName:"li"},"\u21b3 ",Object(r.mdx)("strong",{parentName:"p"},"LockAndMintParams")))),Object(r.mdx)("h2",{id:"properties"},"Properties"),Object(r.mdx)("h3",{id:"asset"},"asset"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("strong",{parentName:"p"},"asset"),": ",Object(r.mdx)("em",{parentName:"p"},"string")),Object(r.mdx)("p",null,"The asset being minted or burned - e.g. ",Object(r.mdx)("inlineCode",{parentName:"p"},'"BTC"'),"."),Object(r.mdx)("p",null,"Inherited from: ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/interfaces_build_main_parameters.transferparamscommon"},"TransferParamsCommon"),".",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/interfaces_build_main_parameters.transferparamscommon#asset"},"asset")),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/parameters.d.ts:39"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"contractcalls"},"contractCalls"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("inlineCode",{parentName:"p"},"Optional")," ",Object(r.mdx)("strong",{parentName:"p"},"contractCalls"),": ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/interfaces_build_main_parameters.contractcall"},Object(r.mdx)("em",{parentName:"a"},"ContractCall")),"[]"),Object(r.mdx)("p",null,"Details for submitting one or more transactions. The last one will be\nused by the lockAndMint or burnAndRelease.\nFor minting, the last call's parameters will be augmented with the three\nrequired parameters for minting - the amount, nHash and RenVM signature.\nFor burning, the last call must involve ren-assets being burnt."),Object(r.mdx)("p",null,"Inherited from: ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/interfaces_build_main_parameters.transferparamscommon"},"TransferParamsCommon"),".",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/interfaces_build_main_parameters.transferparamscommon#contractcalls"},"contractCalls")),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/parameters.d.ts:91"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"from"},"from"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("strong",{parentName:"p"},"from"),": ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/interfaces_build_main_chain.lockchain"},Object(r.mdx)("em",{parentName:"a"},"LockChain")),"<LockTransaction, LockDeposit, LockAddress, any, any",">"),Object(r.mdx)("p",null,"The chain that the asset is native to - e.g. ",Object(r.mdx)("inlineCode",{parentName:"p"},"Bitcoin()")," for bridging the\nasset ",Object(r.mdx)("inlineCode",{parentName:"p"},'"BTC"'),"."),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/parameters.d.ts:105"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"nonce"},"nonce"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("inlineCode",{parentName:"p"},"Optional")," ",Object(r.mdx)("strong",{parentName:"p"},"nonce"),": ",Object(r.mdx)("em",{parentName:"p"},"string")," ","|"," ",Object(r.mdx)("em",{parentName:"p"},"Buffer")),Object(r.mdx)("p",null,"A LockAndMint's gateway address can be forced to be unique by providing a\n32-byte nonce."),Object(r.mdx)("p",null,'The nonce should be passed is as a 32-byte Buffer or a 32-byte hex\nstring, with or without a "0x" prefix.'),Object(r.mdx)("p",null,"It defaults to 0 (32 empty bytes)."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},Object(r.mdx)("inlineCode",{parentName:"strong"},"warning"))," If the nonce is lost between detecting a deposit and\nsubmitting it to RenVM, the deposit's funds can't be recovered.\nA nonce should only be provided if it's guaranteed to be stored in\npersistent storage before a deposit address is shown to the user."),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},Object(r.mdx)("inlineCode",{parentName:"strong"},"example"))," "),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre"},"nonce: Buffer.from(new Array(32)),\n")),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},Object(r.mdx)("inlineCode",{parentName:"strong"},"example"))," "),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre"},'// Use a nonce based on the number of days since epoch, in order to\n// generate a new deposit address each day.\nnonce: new BN(Math.floor(Date.now() / 8.64e7))\n         .toArrayLike(Buffer, "be", 32),\n')),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},Object(r.mdx)("inlineCode",{parentName:"strong"},"example"))," "),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre"},"// Provide a random 32-byte Buffer. It's important that this isn't lost.\nnonce: RenJS.utils.randomNonce(),\n")),Object(r.mdx)("p",null,"Inherited from: ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/interfaces_build_main_parameters.transferparamscommon"},"TransferParamsCommon"),".",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/interfaces_build_main_parameters.transferparamscommon#nonce"},"nonce")),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/parameters.d.ts:78"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"tags"},"tags"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("inlineCode",{parentName:"p"},"Optional")," ",Object(r.mdx)("strong",{parentName:"p"},"tags"),": ","[",Object(r.mdx)("em",{parentName:"p"},"string"),"]"),Object(r.mdx)("p",null,"Provide optional tags which can be used to look up transfers in the\nlightnodes."),Object(r.mdx)("p",null,"Inherited from: ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/interfaces_build_main_parameters.transferparamscommon"},"TransferParamsCommon"),".",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/interfaces_build_main_parameters.transferparamscommon#tags"},"tags")),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/parameters.d.ts:83"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"to"},"to"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("strong",{parentName:"p"},"to"),": ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/interfaces_build_main_chain.mintchain"},Object(r.mdx)("em",{parentName:"a"},"MintChain")),"<MintTransaction, MintAddress, any",">"),Object(r.mdx)("p",null,"The chain that the asset is being bridged to - e.g. ",Object(r.mdx)("inlineCode",{parentName:"p"},"Ethereum(provider)"),"."),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/parameters.d.ts:109"),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"txhash"},"txHash"),Object(r.mdx)("p",null,"\u2022 ",Object(r.mdx)("inlineCode",{parentName:"p"},"Optional")," ",Object(r.mdx)("strong",{parentName:"p"},"txHash"),": ",Object(r.mdx)("em",{parentName:"p"},"string")),Object(r.mdx)("p",null,"A RenVM transaction hash, which can be used to resume an existing mint\nor burn."),Object(r.mdx)("p",null,"Inherited from: ",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/interfaces_build_main_parameters.transferparamscommon"},"TransferParamsCommon"),".",Object(r.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/interfaces_build_main_parameters.transferparamscommon#txhash"},"txHash")),Object(r.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/parameters.d.ts:44"))}s.isMDXComponent=!0},486:function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return o})),n.d(t,"MDXProvider",(function(){return b})),n.d(t,"mdx",(function(){return j})),n.d(t,"useMDXComponents",(function(){return l})),n.d(t,"withMDXComponents",(function(){return p}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function m(){return(m=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),p=function(e){return function(t){var n=l(t.components);return r.a.createElement(e,m({},t,{components:n}))}},l=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},b=function(e){var t=l(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,m=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),o=l(n),p=a,b=o["".concat(m,".").concat(p)]||o[p]||f[p]||i;return n?r.a.createElement(b,d(d({ref:t},c),{},{components:n})):r.a.createElement(b,d({ref:t},c))}));function j(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,m=new Array(i);m[0]=u;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c.mdxType="string"==typeof e?e:a,m[1]=c;for(var s=2;s<i;s++)m[s]=n[s];return r.a.createElement.apply(null,m)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);