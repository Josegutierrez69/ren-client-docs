"use strict";(self.webpackChunkren_client_docs=self.webpackChunkren_client_docs||[]).push([[5961],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return h}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(t),h=o,_=m["".concat(s,".").concat(h)]||m[h]||u[h]||a;return t?r.createElement(_,i(i({ref:n},p),{},{components:t})):r.createElement(_,i({ref:n},p))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},23054:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return p},metadata:function(){return m},toc:function(){return h}});var r=t(87462),o=t(63366),a=(t(67294),t(3905)),i=t(69324),c=t(93454),s=t(1773),l=["components"],p={title:"RenJS Class"},u=void 0,m={unversionedId:"v3/reference/renJS",id:"v3/reference/renJS",title:"RenJS Class",description:"RenJS (TypeDoc)",source:"@site/ren-js/v3/reference/renJS.mdx",sourceDirName:"v3/reference",slug:"/v3/reference/renJS",permalink:"/ren-client-docs/ren-js/v3/reference/renJS",editUrl:"https://github.com/renproject/ren-client-docs/edit/master/ren-js/v3/reference/renJS.mdx",tags:[],version:"current",frontMatter:{title:"RenJS Class"},sidebar:"docs",previous:{title:"6. App",permalink:"/ren-client-docs/ren-js/v3/tutorial/app"},next:{title:"Gateway Class",permalink:"/ren-client-docs/ren-js/v3/reference/gateway"}},h=[{value:'RenJS <TypeDoc name="RenJS">(TypeDoc)</TypeDoc>',id:"renjs-typedoc",children:[],level:3}],_={toc:h};function f(e){var n=e.components,t=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},_,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(c.G,{type:c.e.Reference,mdxType:"DocTag"}),(0,a.kt)("h3",{id:"renjs-typedoc"},"RenJS ",(0,a.kt)(i.L,{name:"RenJS",mdxType:"TypeDoc"},"(TypeDoc)")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"RenJS")," class provides methods for creating and configuring gateways."),(0,a.kt)("p",null,"It's initialized by providing a network or a RenVM provider. Generally, your program or website should only have one RenJS instance per network."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import RenJS from "@renproject/ren";\nimport { RenNetwork } from "@renproject/utils";\nimport { RenVMProvider } from "@renproject/provider";\nimport { JsonRpcProvider } from "@renproject/provider/build/main/rpc/jsonRpc";\n\n// Mainnet - the following are equivalent:\nnew RenJS();\nnew RenJS("mainnet");\nnew RenJS(RenNetwork.Mainnet);\nnew RenJS("https://rpc.renproject.io");\nnew RenJS(new RenVMProvider("mainnet"));\nnew RenJS(new RenVMProvider("https://rpc.renproject.io"));\nnew RenJS(new RenVMProvider(new JsonRpcProvider("https://rpc.renproject.io")));\n\n// Testnet\nnew RenJS("testnet");\n')),(0,a.kt)("p",null,"The second parameter for ",(0,a.kt)("inlineCode",{parentName:"p"},"RenJS")," allows you to pass in some additional configuration:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import RenJS from "@renproject/ren";\nimport { LogLevel } from "@renproject/ren";\n\nnew RenJS("mainnet", {\n    // Configure a logger:\n    logLevel: LogLevel.Debug,\n    logger: console,\n\n    // Configure network delay for monitoring gateway addresses:\n    networkDelay: 15000, // 15 seconds\n});\n')),(0,a.kt)("p",null,"Before creating a gateway or fetching fees, you'll need to connect the chain classes to RenJS:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import RenJS from "@renproject/ren";\nimport { Bitcoin, Ethereum } from "@renproject/chains";\n\nconst bitcoin = new Bitcoin({ network: "testnet" });\nconst ethereum = new Ethereum({ network: "testnet", signer: ... });\n\nconst renJS = new RenJS("testnet")\n    .withChains(bitcoin, ethereum);\n\n// Equivalently:\nrenJS.withChains([bitcoin, ethereum]);\nrenJS.withChain(bitcoin).withChain(ethereum);\n')),(0,a.kt)("p",null,"You can now use the various fields and methods available on RenJS:"),(0,a.kt)(s.P,{title:"Methods",mdxType:"Enumerate"},(0,a.kt)("p",null,(0,a.kt)(i.L,{name:"RenJS.getChain",mdxType:"TypeDoc"},"getChain")," - for getting the chain instances added with ",(0,a.kt)("code",null,"withChains")),(0,a.kt)("p",null,(0,a.kt)(i.L,{name:"RenJS.getFees",mdxType:"TypeDoc"},"getFees")," - for estimating gateway fees (see ",(0,a.kt)("a",{href:"./fees"},"fees"),")"),(0,a.kt)("p",null,(0,a.kt)(i.L,{name:"RenJS.gateway",mdxType:"TypeDoc"},"gateway")," - for creating Gateways"),(0,a.kt)("p",null,(0,a.kt)(i.L,{name:"RenJS.gatewayTransaction",mdxType:"TypeDoc"},"gatewayTransaction")," - for re-creating Gateway Transactions created by a Gateway"),(0,a.kt)("p",null,(0,a.kt)(i.L,{name:"RenJS.selectShard",mdxType:"TypeDoc"},"selectShard")," - for fetching an asset's associated RenVM shard (currently there's only one shard)"),(0,a.kt)("p",null,(0,a.kt)(i.L,{name:"RenJS.defaultTransactionHandler",mdxType:"TypeDoc"},"defaultTransactionHandler")," - a static method that you can pass to a ",(0,a.kt)("code",null,'gateway.on("transaction")'))),(0,a.kt)("br",null),(0,a.kt)(s.P,{title:"Properties",mdxType:"Enumerate"},(0,a.kt)("p",null,(0,a.kt)(i.L,{name:"RenJS.provider",mdxType:"TypeDoc"},"provider")," - the connected RenVM provider")))}f.isMDXComponent=!0},93454:function(e,n,t){t.d(n,{G:function(){return c},e:function(){return o}});var r,o,a=t(67294);!function(e){e.Tutorial="Tutorial",e.HowTo="How To",e.Reference="Reference",e.Explanation="Explanation"}(o||(o={}));var i=((r={})[o.Tutorial]="#b48ead",r[o.HowTo]="#69a8b9",r[o.Reference]="#bf616a",r[o.Explanation]="#d2b06c",r),c=function(e){var n=e.type,t=e.marginBottom;return a.createElement(a.Fragment,null,a.createElement("span",{style:{border:"2px solid "+i[n]||0,borderRadius:"5px",color:i[n]||"orange",padding:"0.1rem 0.4rem",marginBottom:void 0!==t?t:30,display:"inline-block"}},String(n)))}},1773:function(e,n,t){t.d(n,{P:function(){return o}});var r=t(67294),o=function(e){var n=e.title,t=e.children;return r.createElement("div",{className:"enumerate"},r.createElement("h3",null,n),t)}},69324:function(e,n,t){t.d(n,{L:function(){return a}});var r=t(67294),o={Asset:"enums/_renproject_chains.Asset.html",Chain:"enums/_renproject_chains.Chain.html",RPCMethod:"enums/_renproject_provider.RPCMethod.html",ChainTransactionStatus:"enums/_renproject_utils.ChainTransactionStatus.html",InputType:"enums/_renproject_utils.InputType.html",LogLevel:"enums/_renproject_utils.LogLevel.html",OutputType:"enums/_renproject_utils.OutputType.html",PackPrimitive:"enums/_renproject_utils.PackPrimitive.html",RenJSError:"enums/_renproject_utils.RenJSError.html",RenNetwork:"enums/_renproject_utils.RenNetwork.html",TxStatus:"enums/_renproject_utils.TxStatus.html",EVMParam:"enums/_renproject_chains_ethereum.EVMParam.html",Bitcoin:"classes/_renproject_chains_bitcoin.Bitcoin.html",BitcoinBaseChain:"classes/_renproject_chains_bitcoin.BitcoinBaseChain.html",BitcoinCash:"classes/_renproject_chains_bitcoin.BitcoinCash.html",DigiByte:"classes/_renproject_chains_bitcoin.DigiByte.html",Dogecoin:"classes/_renproject_chains_bitcoin.Dogecoin.html",Zcash:"classes/_renproject_chains_bitcoin.Zcash.html",Arbitrum:"classes/_renproject_chains_ethereum.Arbitrum.html",Avalanche:"classes/_renproject_chains_ethereum.Avalanche.html",BinanceSmartChain:"classes/_renproject_chains_ethereum.BinanceSmartChain.html",Ethereum:"classes/_renproject_chains_ethereum.Ethereum.html",Fantom:"classes/_renproject_chains_ethereum.Fantom.html",Goerli:"classes/_renproject_chains_ethereum.Goerli.html",Polygon:"classes/_renproject_chains_ethereum.Polygon.html",Filecoin:"classes/_renproject_chains_filecoin.Filecoin.html",Solana:"classes/_renproject_chains_solana.Solana.html",Terra:"classes/_renproject_chains_terra.Terra.html",MockChain:"classes/_renproject_mock_provider.MockChain.html",MockProvider:"classes/_renproject_mock_provider.MockProvider.html",RenVMProvider:"classes/_renproject_provider.RenVMProvider.html",Gateway:"classes/_renproject_ren.Gateway.html",GatewayTransaction:"classes/_renproject_ren.GatewayTransaction.html",RenJS:"classes/_renproject_ren.RenJS.html",RenVMTxSubmitter:"classes/_renproject_ren.RenVMTxSubmitter.html",DefaultTxWaiter:"classes/_renproject_utils.DefaultTxWaiter.html",ErrorWithCode:"classes/_renproject_utils.ErrorWithCode.html",EventEmitterTyped:"classes/_renproject_utils.EventEmitterTyped.html",TxWaiterProxy:"classes/_renproject_utils.TxWaiterProxy.html",BitcoinNetworkConfig:"interfaces/_renproject_chains_bitcoin.BitcoinNetworkConfig.html",BitcoinOutputPayload:"interfaces/_renproject_chains_bitcoin.BitcoinOutputPayload.html",EthereumClassConfig:"interfaces/_renproject_chains_ethereum.EthereumClassConfig.html",EvmNetworkConfig:"interfaces/_renproject_chains_ethereum.EvmNetworkConfig.html",FilecoinNetworkConfig:"interfaces/_renproject_chains_filecoin.FilecoinNetworkConfig.html",FilecoinOutputPayload:"interfaces/_renproject_chains_filecoin.FilecoinOutputPayload.html",SolanaPayloadInterface:"interfaces/_renproject_chains_solana.SolanaPayloadInterface.html",TerraOutputPayload:"interfaces/_renproject_chains_terra.TerraOutputPayload.html",BlockState:"interfaces/_renproject_provider.BlockState.html",MarshalledRenVMBlock:"interfaces/_renproject_provider.MarshalledRenVMBlock.html",ParamsQueryBlock:"interfaces/_renproject_provider.ParamsQueryBlock.html",ParamsQueryBlockState:"interfaces/_renproject_provider.ParamsQueryBlockState.html",ParamsQueryBlocks:"interfaces/_renproject_provider.ParamsQueryBlocks.html",ParamsQueryConfig:"interfaces/_renproject_provider.ParamsQueryConfig.html",ParamsQueryTx:"interfaces/_renproject_provider.ParamsQueryTx.html",ParamsQueryTxs:"interfaces/_renproject_provider.ParamsQueryTxs.html",ParamsSubmitTx:"interfaces/_renproject_provider.ParamsSubmitTx.html",RenVMBlock:"interfaces/_renproject_provider.RenVMBlock.html",RenVMProviderInterface:"interfaces/_renproject_provider.RenVMProviderInterface.html",RenVMTransaction:"interfaces/_renproject_provider.RenVMTransaction.html",RenVMTransactionWithStatus:"interfaces/_renproject_provider.RenVMTransactionWithStatus.html",ResponseQueryBlock:"interfaces/_renproject_provider.ResponseQueryBlock.html",ResponseQueryBlockState:"interfaces/_renproject_provider.ResponseQueryBlockState.html",ResponseQueryBlocks:"interfaces/_renproject_provider.ResponseQueryBlocks.html",ResponseQueryConfig:"interfaces/_renproject_provider.ResponseQueryConfig.html",ResponseQueryTx:"interfaces/_renproject_provider.ResponseQueryTx.html",ResponseQueryTxs:"interfaces/_renproject_provider.ResponseQueryTxs.html",ResponseSubmitGateway:"interfaces/_renproject_provider.ResponseSubmitGateway.html",ResponseSubmitTx:"interfaces/_renproject_provider.ResponseSubmitTx.html",SubmitGatewayInput:"interfaces/_renproject_provider.SubmitGatewayInput.html",TransactionInput:"interfaces/_renproject_provider.TransactionInput.html",TransactionOutput:"interfaces/_renproject_provider.TransactionOutput.html",GatewayFees:"interfaces/_renproject_ren.GatewayFees.html",ChainCommon:"interfaces/_renproject_utils.ChainCommon.html",ChainTransaction:"interfaces/_renproject_utils.ChainTransaction.html",ChainTransactionProgress:"interfaces/_renproject_utils.ChainTransactionProgress.html",ContractChain:"interfaces/_renproject_utils.ContractChain.html",DepositChain:"interfaces/_renproject_utils.DepositChain.html",InputChainTransaction:"interfaces/_renproject_utils.InputChainTransaction.html",Logger:"interfaces/_renproject_utils.Logger.html",PackListType:"interfaces/_renproject_utils.PackListType.html",PackStructType:"interfaces/_renproject_utils.PackStructType.html",RenVMShard:"interfaces/_renproject_utils.RenVMShard.html",TxSubmitter:"interfaces/_renproject_utils.TxSubmitter.html",TxWaiter:"interfaces/_renproject_utils.TxWaiter.html",TypedPackValue:"interfaces/_renproject_utils.TypedPackValue.html"},a=function(e){var n=e.name,t=e.children,a=n.split("."),i=a[0],c=a[1];return r.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://renproject.github.io/ren-js-v3-docs/"+o[i]+(c?"#"+c:"")},t||n,o[i]?null:r.createElement("span",{style:{color:"#bf616a"}}," (Link not found)"))}}}]);