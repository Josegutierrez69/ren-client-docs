(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{410:function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return c})),n.d(t,"MDXProvider",(function(){return p})),n.d(t,"mdx",(function(){return O})),n.d(t,"useMDXComponents",(function(){return s})),n.d(t,"withMDXComponents",(function(){return u}));var r=n(0),a=n.n(r);function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function m(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?m(Object(n),!0).forEach((function(t){d(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):m(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},d=Object.keys(e);for(r=0;r<d.length;r++)n=d[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(e);for(r=0;r<d.length;r++)n=d[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),u=function(e){return function(t){var n=s(t.components);return a.a.createElement(e,o({},t,{components:n}))}},s=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},x=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,d=e.originalType,o=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(n),u=r,p=c["".concat(o,".").concat(u)]||c[u]||b[u]||d;return n?a.a.createElement(p,i(i({ref:t},m),{},{components:n})):a.a.createElement(p,i({ref:t},m))}));function O(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var d=n.length,o=new Array(d);o[0]=x;var m={};for(var i in t)hasOwnProperty.call(t,i)&&(m[i]=t[i]);m.originalType=e,m.mdxType="string"==typeof e?e:r,o[1]=m;for(var l=2;l<d;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}x.displayName="MDXCreateElement"},411:function(e,t,n){"use strict";var r=n(4).default;Object.defineProperty(t,"__esModule",{value:!0}),t.DocTag=t.DocType=void 0;var a=r(n(0));let d;t.DocType=d,function(e){e.Tutorial="Tutorial",e.HowTo="How To",e.Reference="Reference",e.Explanation="Explanation"}(d||(t.DocType=d={}));const o={[d.Tutorial]:"#b16bfc",[d.HowTo]:"#EC0088",[d.Reference]:"#ff823a",[d.Explanation]:"#29C0AF"};t.DocTag=({type:e,marginBottom:t})=>a.default.createElement(a.default.Fragment,null,a.default.createElement("span",{style:{border:"2px solid "+o[e]||!1,borderRadius:"5px",color:o[e]||"orange",padding:"0.1rem 0.4rem",marginBottom:void 0!==t?t:30,display:"inline-block"}},String(e)))},66:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return m})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(9),d=(n(0),n(410)),o=n(411),m={title:"ClaimlessRewardsAdminHandler"},i={unversionedId:"darknode-sol/DarknodePayment/ClaimlessRewardsAdminHandler",id:"darknode-sol/DarknodePayment/ClaimlessRewardsAdminHandler",isDocsHomePage:!1,title:"ClaimlessRewardsAdminHandler",description:"Contract: ClaimlessRewardsAdminHandler",source:"@site/contracts/darknode-sol/DarknodePayment/ClaimlessRewardsAdminHandler.mdx",slug:"/darknode-sol/DarknodePayment/ClaimlessRewardsAdminHandler",permalink:"/ren-client-docs/contracts/darknode-sol/DarknodePayment/ClaimlessRewardsAdminHandler",editUrl:"https://github.com/renproject/ren-client-docs/edit/master/contracts/darknode-sol/DarknodePayment/ClaimlessRewardsAdminHandler.mdx",version:"current",sidebar:"contracts",previous:{title:"ClaimlessRewardsState",permalink:"/ren-client-docs/contracts/darknode-sol/DarknodePayment/ClaimlessRewardsState"},next:{title:"ClaimlessRewardsEvents",permalink:"/ren-client-docs/contracts/darknode-sol/DarknodePayment/ClaimlessRewardsEvents"}},l=[{value:"Contract: <code>ClaimlessRewardsAdminHandler</code>",id:"contract-claimlessrewardsadminhandler",children:[]},{value:"Functions",id:"functions",children:[{value:"<strong><code>updateDarknodeRegistry</code></strong> <em><code>(contract DarknodeRegistryLogicV1 _darknodeRegistry)</code></em> (external)",id:"updatedarknoderegistry-contract-darknoderegistrylogicv1-_darknoderegistry-external",children:[]},{value:"<strong><code>updateCommunityFund</code></strong> <em><code>(address _communityFund)</code></em> (external)",id:"updatecommunityfund-address-_communityfund-external",children:[]},{value:"<strong><code>updateHourlyPayoutWithheld</code></strong> <em><code>(uint256 _numerator)</code></em> (external)",id:"updatehourlypayoutwithheld-uint256-_numerator-external",children:[]},{value:"<strong><code>updateCommunityFundNumerator</code></strong> <em><code>(uint256 _numerator)</code></em> (external)",id:"updatecommunityfundnumerator-uint256-_numerator-external",children:[]},{value:"<strong><code>transferStoreOwnership</code></strong> <em><code>(contract ClaimlessRewardsAdminHandler _newOwner)</code></em> (external)",id:"transferstoreownership-contract-claimlessrewardsadminhandler-_newowner-external",children:[]},{value:"<strong><code>claimStoreOwnership</code></strong> <em><code>()</code></em> (external)",id:"claimstoreownership--external",children:[]},{value:"<strong><code>_updateDarknodeRegistry</code></strong> <em><code>(contract DarknodeRegistryLogicV1 _darknodeRegistry)</code></em> (internal)",id:"_updatedarknoderegistry-contract-darknoderegistrylogicv1-_darknoderegistry-internal",children:[]},{value:"<strong><code>_updateCommunityFund</code></strong> <em><code>(address _communityFund)</code></em> (internal)",id:"_updatecommunityfund-address-_communityfund-internal",children:[]},{value:"<strong><code>_updateCommunityFundNumerator</code></strong> <em><code>(uint256 _numerator)</code></em> (internal)",id:"_updatecommunityfundnumerator-uint256-_numerator-internal",children:[]}]}],c={toc:l};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(d.mdx)("wrapper",Object(r.default)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(d.mdx)(o.DocTag,{type:o.DocType.Reference,mdxType:"DocTag"}),Object(d.mdx)("h2",{id:"contract-claimlessrewardsadminhandler"},"Contract: ",Object(d.mdx)("inlineCode",{parentName:"h2"},"ClaimlessRewardsAdminHandler")),Object(d.mdx)("p",null,"Inherits from:"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"ClaimlessRewardsState")),Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"ClaimlessRewardsEvents")),Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"Ownable")),Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"Context")),Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"Initializable"))),Object(d.mdx)("hr",null),Object(d.mdx)("br",null),Object(d.mdx)("h2",{id:"functions"},"Functions"),Object(d.mdx)("h3",{id:"updatedarknoderegistry-contract-darknoderegistrylogicv1-_darknoderegistry-external"},Object(d.mdx)("strong",{parentName:"h3"},Object(d.mdx)("inlineCode",{parentName:"strong"},"updateDarknodeRegistry"))," ",Object(d.mdx)("em",{parentName:"h3"},Object(d.mdx)("inlineCode",{parentName:"em"},"(contract DarknodeRegistryLogicV1 _darknodeRegistry)"))," (external)"),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Params")),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"_darknodeRegistry"),": The address of the new Darknode Registry\ncontract.")),Object(d.mdx)("p",null,"Allows the contract owner to update the address of the\nDarknode Registry contract."),Object(d.mdx)("hr",null),Object(d.mdx)("h3",{id:"updatecommunityfund-address-_communityfund-external"},Object(d.mdx)("strong",{parentName:"h3"},Object(d.mdx)("inlineCode",{parentName:"strong"},"updateCommunityFund"))," ",Object(d.mdx)("em",{parentName:"h3"},Object(d.mdx)("inlineCode",{parentName:"em"},"(address _communityFund)"))," (external)"),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Params")),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"_communityFund"),": The address of new community fund address.")),Object(d.mdx)("p",null,"Allows the contract owner to update the address of the new dev\nfund."),Object(d.mdx)("hr",null),Object(d.mdx)("h3",{id:"updatehourlypayoutwithheld-uint256-_numerator-external"},Object(d.mdx)("strong",{parentName:"h3"},Object(d.mdx)("inlineCode",{parentName:"strong"},"updateHourlyPayoutWithheld"))," ",Object(d.mdx)("em",{parentName:"h3"},Object(d.mdx)("inlineCode",{parentName:"em"},"(uint256 _numerator)"))," (external)"),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Params")),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"_numerator"),": The numerator of payout for darknodes.")),Object(d.mdx)("p",null,"Updates the proportion of the rewards that are withheld to be\npaid out over future cycles."),Object(d.mdx)("hr",null),Object(d.mdx)("h3",{id:"updatecommunityfundnumerator-uint256-_numerator-external"},Object(d.mdx)("strong",{parentName:"h3"},Object(d.mdx)("inlineCode",{parentName:"strong"},"updateCommunityFundNumerator"))," ",Object(d.mdx)("em",{parentName:"h3"},Object(d.mdx)("inlineCode",{parentName:"em"},"(uint256 _numerator)"))," (external)"),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Params")),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"_numerator"),": The numerator of payout for darknodes.")),Object(d.mdx)("p",null,"Updates the proportion of the rewards that are withheld to be\nsent to the community fund."),Object(d.mdx)("hr",null),Object(d.mdx)("h3",{id:"transferstoreownership-contract-claimlessrewardsadminhandler-_newowner-external"},Object(d.mdx)("strong",{parentName:"h3"},Object(d.mdx)("inlineCode",{parentName:"strong"},"transferStoreOwnership"))," ",Object(d.mdx)("em",{parentName:"h3"},Object(d.mdx)("inlineCode",{parentName:"em"},"(contract ClaimlessRewardsAdminHandler _newOwner)"))," (external)"),Object(d.mdx)("p",null,Object(d.mdx)("strong",{parentName:"p"},"Params")),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"_newOwner"),": The address to transfer the ownership to.")),Object(d.mdx)("p",null,"Allows the contract owner to initiate an ownership transfer of\nthe DarknodePaymentStore."),Object(d.mdx)("hr",null),Object(d.mdx)("h3",{id:"claimstoreownership--external"},Object(d.mdx)("strong",{parentName:"h3"},Object(d.mdx)("inlineCode",{parentName:"strong"},"claimStoreOwnership"))," ",Object(d.mdx)("em",{parentName:"h3"},Object(d.mdx)("inlineCode",{parentName:"em"},"()"))," (external)"),Object(d.mdx)("p",null,"Claims ownership of the store passed in to the constructor.\n",Object(d.mdx)("inlineCode",{parentName:"p"},"transferStoreOwnership")," must have previously been called when\ntransferring from another DarknodePaymentStore."),Object(d.mdx)("hr",null),Object(d.mdx)("h3",{id:"_updatedarknoderegistry-contract-darknoderegistrylogicv1-_darknoderegistry-internal"},Object(d.mdx)("strong",{parentName:"h3"},Object(d.mdx)("inlineCode",{parentName:"strong"},"_updateDarknodeRegistry"))," ",Object(d.mdx)("em",{parentName:"h3"},Object(d.mdx)("inlineCode",{parentName:"em"},"(contract DarknodeRegistryLogicV1 _darknodeRegistry)"))," (internal)"),Object(d.mdx)("p",null,"See ",Object(d.mdx)("inlineCode",{parentName:"p"},"updateDarknodeRegistry"),"."),Object(d.mdx)("hr",null),Object(d.mdx)("h3",{id:"_updatecommunityfund-address-_communityfund-internal"},Object(d.mdx)("strong",{parentName:"h3"},Object(d.mdx)("inlineCode",{parentName:"strong"},"_updateCommunityFund"))," ",Object(d.mdx)("em",{parentName:"h3"},Object(d.mdx)("inlineCode",{parentName:"em"},"(address _communityFund)"))," (internal)"),Object(d.mdx)("p",null,"See ",Object(d.mdx)("inlineCode",{parentName:"p"},"updateCommunityFund"),"."),Object(d.mdx)("hr",null),Object(d.mdx)("h3",{id:"_updatecommunityfundnumerator-uint256-_numerator-internal"},Object(d.mdx)("strong",{parentName:"h3"},Object(d.mdx)("inlineCode",{parentName:"strong"},"_updateCommunityFundNumerator"))," ",Object(d.mdx)("em",{parentName:"h3"},Object(d.mdx)("inlineCode",{parentName:"em"},"(uint256 _numerator)"))," (internal)"),Object(d.mdx)("p",null,"See ",Object(d.mdx)("inlineCode",{parentName:"p"},"_updateCommunityFundNumerator"),"."),Object(d.mdx)("hr",null))}u.isMDXComponent=!0}}]);