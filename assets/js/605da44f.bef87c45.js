(window.webpackJsonp=window.webpackJsonp||[]).push([[148],{180:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return m})),n.d(t,"metadata",(function(){return d})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(8),i=(n(0),n(489)),m={id:"lib_interfaces_build_main_chain.lockchain",title:"Interface: LockChain<Transaction, LockDeposit, Address, Network, GetDepositProgress>",sidebar_label:"LockChain",custom_edit_url:null},d={unversionedId:"api/interfaces/lib_interfaces_build_main_chain.lockchain",id:"api/interfaces/lib_interfaces_build_main_chain.lockchain",isDocsHomePage:!1,title:"Interface: LockChain<Transaction, LockDeposit, Address, Network, GetDepositProgress>",description:"Interface: LockChain",source:"@site/ren-js/api/interfaces/lib_interfaces_build_main_chain.lockchain.md",slug:"/api/interfaces/lib_interfaces_build_main_chain.lockchain",permalink:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.lockchain",editUrl:null,version:"current",sidebar_label:"LockChain"},c=[{value:"Type parameters",id:"type-parameters",children:[]},{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Properties",id:"properties",children:[{value:"addressStringToBytes",id:"addressstringtobytes",children:[]},{value:"assetDecimals",id:"assetdecimals",children:[]},{value:"assetIsNative",id:"assetisnative",children:[]},{value:"assetIsSupported",id:"assetissupported",children:[]},{value:"burnPayload",id:"burnpayload",children:[]},{value:"depositV1HashString",id:"depositv1hashstring",children:[]},{value:"getDeposits",id:"getdeposits",children:[]},{value:"getGatewayAddress",id:"getgatewayaddress",children:[]},{value:"initialize",id:"initialize",children:[]},{value:"legacyName",id:"legacyname",children:[]},{value:"name",id:"name",children:[]},{value:"renNetwork",id:"rennetwork",children:[]},{value:"transactionConfidence",id:"transactionconfidence",children:[]},{value:"transactionFromID",id:"transactionfromid",children:[]},{value:"transactionID",id:"transactionid",children:[]},{value:"transactionRPCFormat",id:"transactionrpcformat",children:[]},{value:"utils",id:"utils",children:[]},{value:"withProvider",id:"withprovider",children:[]}]}],p={toc:c};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.mdx)("wrapper",Object(a.default)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.mdx)("h1",{id:"interface-lockchaintransaction-lockdeposit-address-network-getdepositprogress"},"Interface: LockChain<Transaction, LockDeposit, Address, Network, GetDepositProgress",">"),Object(i.mdx)("p",null,Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain"},"lib/interfaces/build/main/chain"),".LockChain"),Object(i.mdx)("p",null,"LockChain is a chain with one or more native assets that can be locked in a\nkey controlled by RenVM to be moved onto a MintChain, and then released when\nthey are burnt from the MintChain."),Object(i.mdx)("p",null,"LockChains can extend other chain implementations using JavaScript's class\ninheritance. For example, if a LockChain is a Bitcoin fork, it can extend the\nBitcoin LockChain and overwrite methods as necessary. See the ZCash and\nBitcoinCash implementations for examples of this."),Object(i.mdx)("h2",{id:"type-parameters"},"Type parameters"),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Type"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Default"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"Transaction")),Object(i.mdx)("td",{parentName:"tr",align:"left"},"-"),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"any"))),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"LockDeposit")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#depositcommon"},Object(i.mdx)("em",{parentName:"a"},"DepositCommon")),"<Transaction",">"),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#depositcommon"},Object(i.mdx)("em",{parentName:"a"},"DepositCommon")),"<Transaction",">")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"Address")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"string")," ","|"," { ",Object(i.mdx)("inlineCode",{parentName:"td"},"address"),": ",Object(i.mdx)("em",{parentName:"td"},"string"),"  }"),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"any"))),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"Network")),Object(i.mdx)("td",{parentName:"tr",align:"left"},"-"),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"any"))),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"GetDepositProgress")),Object(i.mdx)("td",{parentName:"tr",align:"left"},"-"),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"any"))))),Object(i.mdx)("h2",{id:"hierarchy"},"Hierarchy"),Object(i.mdx)("ul",null,Object(i.mdx)("li",{parentName:"ul"},Object(i.mdx)("p",{parentName:"li"},Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},Object(i.mdx)("em",{parentName:"a"},"ChainCommon")),"<Transaction, Address, Network",">"),Object(i.mdx)("p",{parentName:"li"},"\u21b3 ",Object(i.mdx)("strong",{parentName:"p"},"LockChain")))),Object(i.mdx)("h2",{id:"properties"},"Properties"),Object(i.mdx)("h3",{id:"addressstringtobytes"},"addressStringToBytes"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"addressStringToBytes"),": (",Object(i.mdx)("inlineCode",{parentName:"p"},"address"),": ",Object(i.mdx)("em",{parentName:"p"},"string"),") => ",Object(i.mdx)("em",{parentName:"p"},"Buffer")),Object(i.mdx)("p",null,Object(i.mdx)("inlineCode",{parentName:"p"},"addressBytes")," should return the bytes representation of the address."),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},Object(i.mdx)("inlineCode",{parentName:"strong"},"dev"))," Must be compatible with the matching RenVM multichain LockChain's\n",Object(i.mdx)("inlineCode",{parentName:"p"},"decodeAddress")," method."),Object(i.mdx)("h4",{id:"type-declaration"},"Type declaration"),Object(i.mdx)("p",null,"\u25b8 (",Object(i.mdx)("inlineCode",{parentName:"p"},"address"),": ",Object(i.mdx)("em",{parentName:"p"},"string"),"): ",Object(i.mdx)("em",{parentName:"p"},"Buffer")),Object(i.mdx)("h4",{id:"parameters"},"Parameters"),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"address")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"string"))))),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("em",{parentName:"p"},"Buffer")),Object(i.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:169"),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"assetdecimals"},"assetDecimals"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"assetDecimals"),": (",Object(i.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(i.mdx)("em",{parentName:"p"},"string"),") => ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<number",">"),Object(i.mdx)("p",null,Object(i.mdx)("inlineCode",{parentName:"p"},"assetDecimals")," should return the number of decimals of the asset."),Object(i.mdx)("p",null,"If the asset is not supported, an error should be thrown."),Object(i.mdx)("pre",null,Object(i.mdx)("code",{parentName:"pre",className:"language-ts"},'bitcoin.assetDecimals = asset => {\n    if (asset === "BTC") { return 8; }\n    throw new Error(`Unsupported asset ${asset}.`);\n}\n')),Object(i.mdx)("h4",{id:"type-declaration-1"},"Type declaration"),Object(i.mdx)("p",null,"\u25b8 (",Object(i.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(i.mdx)("em",{parentName:"p"},"string"),"): ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<number",">"),Object(i.mdx)("h4",{id:"parameters-1"},"Parameters"),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"asset")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"string"))))),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<number",">"),Object(i.mdx)("p",null,"Inherited from: ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#assetdecimals"},"assetDecimals")),Object(i.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:93"),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"assetisnative"},"assetIsNative"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"assetIsNative"),": (",Object(i.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(i.mdx)("em",{parentName:"p"},"string"),") => ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<boolean",">"),Object(i.mdx)("p",null,Object(i.mdx)("inlineCode",{parentName:"p"},"assetIsNative")," should return true if the asset is native to the Chain.\nMint-chains should return ",Object(i.mdx)("inlineCode",{parentName:"p"},"false")," for assets that have been bridged to\nit."),Object(i.mdx)("pre",null,Object(i.mdx)("code",{parentName:"pre",className:"language-ts"},'ethereum.assetIsNative = asset => asset === "ETH" ||;\n')),Object(i.mdx)("h4",{id:"type-declaration-2"},"Type declaration"),Object(i.mdx)("p",null,"\u25b8 (",Object(i.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(i.mdx)("em",{parentName:"p"},"string"),"): ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<boolean",">"),Object(i.mdx)("h4",{id:"parameters-2"},"Parameters"),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"asset")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"string"))))),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<boolean",">"),Object(i.mdx)("p",null,"Inherited from: ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#assetisnative"},"assetIsNative")),Object(i.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:71"),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"assetissupported"},"assetIsSupported"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"assetIsSupported"),": (",Object(i.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(i.mdx)("em",{parentName:"p"},"string"),") => ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<boolean",">"),Object(i.mdx)("p",null,Object(i.mdx)("inlineCode",{parentName:"p"},"assetIsSupported")," should return true if the the asset is native to the\nchain or if the asset can be minted onto the chain."),Object(i.mdx)("pre",null,Object(i.mdx)("code",{parentName:"pre",className:"language-ts"},'ethereum.assetIsSupported = asset => asset === "ETH" || asset === "BTC" || ...;\n')),Object(i.mdx)("h4",{id:"type-declaration-3"},"Type declaration"),Object(i.mdx)("p",null,"\u25b8 (",Object(i.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(i.mdx)("em",{parentName:"p"},"string"),"): ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<boolean",">"),Object(i.mdx)("h4",{id:"parameters-3"},"Parameters"),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"asset")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"string"))))),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<boolean",">"),Object(i.mdx)("p",null,"Inherited from: ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#assetissupported"},"assetIsSupported")),Object(i.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:80"),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"burnpayload"},"burnPayload"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("inlineCode",{parentName:"p"},"Optional")," ",Object(i.mdx)("strong",{parentName:"p"},"burnPayload"),": () => ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<undefined ","|"," string",">"),Object(i.mdx)("h4",{id:"type-declaration-4"},"Type declaration"),Object(i.mdx)("p",null,"\u25b8 (): ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<undefined ","|"," string",">"),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<undefined ","|"," string",">"),Object(i.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:179"),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"depositv1hashstring"},"depositV1HashString"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"depositV1HashString"),": (",Object(i.mdx)("inlineCode",{parentName:"p"},"deposit"),": LockDeposit) => ",Object(i.mdx)("em",{parentName:"p"},"string")),Object(i.mdx)("h4",{id:"type-declaration-5"},"Type declaration"),Object(i.mdx)("p",null,"\u25b8 (",Object(i.mdx)("inlineCode",{parentName:"p"},"deposit"),": LockDeposit): ",Object(i.mdx)("em",{parentName:"p"},"string")),Object(i.mdx)("h4",{id:"parameters-4"},"Parameters"),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"deposit")),Object(i.mdx)("td",{parentName:"tr",align:"left"},"LockDeposit")))),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("em",{parentName:"p"},"string")),Object(i.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:178"),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"getdeposits"},"getDeposits"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"getDeposits"),": (",Object(i.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(i.mdx)("em",{parentName:"p"},"string"),", ",Object(i.mdx)("inlineCode",{parentName:"p"},"address"),": Address, ",Object(i.mdx)("inlineCode",{parentName:"p"},"progress"),": ",Object(i.mdx)("em",{parentName:"p"},"undefined")," ","|"," GetDepositProgress, ",Object(i.mdx)("inlineCode",{parentName:"p"},"onDeposit"),": (",Object(i.mdx)("inlineCode",{parentName:"p"},"deposit"),": LockDeposit) => ",Object(i.mdx)("em",{parentName:"p"},"Promise"),"<void",">",", ",Object(i.mdx)("inlineCode",{parentName:"p"},"cancelDeposit"),": (",Object(i.mdx)("inlineCode",{parentName:"p"},"deposit"),": LockDeposit) => ",Object(i.mdx)("em",{parentName:"p"},"Promise"),"<void",">",", ",Object(i.mdx)("inlineCode",{parentName:"p"},"listenerCancelled"),": () => ",Object(i.mdx)("em",{parentName:"p"},"boolean"),") => ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<GetDepositProgress",">"),Object(i.mdx)("p",null,Object(i.mdx)("inlineCode",{parentName:"p"},"getDeposits")," should return all deposits that have been made to the\nprovided address, confirmed or unconfirmed.\n",Object(i.mdx)("inlineCode",{parentName:"p"},"getDeposits")," will get called in a loop by LockAndMintObjects, but a\nLockChain has the option of instead handling this itself by not\nreturning, and streaming deposits using the onDeposit method."),Object(i.mdx)("h4",{id:"type-declaration-6"},"Type declaration"),Object(i.mdx)("p",null,"\u25b8 (",Object(i.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(i.mdx)("em",{parentName:"p"},"string"),", ",Object(i.mdx)("inlineCode",{parentName:"p"},"address"),": Address, ",Object(i.mdx)("inlineCode",{parentName:"p"},"progress"),": ",Object(i.mdx)("em",{parentName:"p"},"undefined")," ","|"," GetDepositProgress, ",Object(i.mdx)("inlineCode",{parentName:"p"},"onDeposit"),": (",Object(i.mdx)("inlineCode",{parentName:"p"},"deposit"),": LockDeposit) => ",Object(i.mdx)("em",{parentName:"p"},"Promise"),"<void",">",", ",Object(i.mdx)("inlineCode",{parentName:"p"},"cancelDeposit"),": (",Object(i.mdx)("inlineCode",{parentName:"p"},"deposit"),": LockDeposit) => ",Object(i.mdx)("em",{parentName:"p"},"Promise"),"<void",">",", ",Object(i.mdx)("inlineCode",{parentName:"p"},"listenerCancelled"),": () => ",Object(i.mdx)("em",{parentName:"p"},"boolean"),"): ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<GetDepositProgress",">"),Object(i.mdx)("h4",{id:"parameters-5"},"Parameters"),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"asset")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"string"))),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"address")),Object(i.mdx)("td",{parentName:"tr",align:"left"},"Address")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"progress")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"undefined")," ","|"," GetDepositProgress")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"onDeposit")),Object(i.mdx)("td",{parentName:"tr",align:"left"},"(",Object(i.mdx)("inlineCode",{parentName:"td"},"deposit"),": LockDeposit) => ",Object(i.mdx)("em",{parentName:"td"},"Promise"),"<void",">")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"cancelDeposit")),Object(i.mdx)("td",{parentName:"tr",align:"left"},"(",Object(i.mdx)("inlineCode",{parentName:"td"},"deposit"),": LockDeposit) => ",Object(i.mdx)("em",{parentName:"td"},"Promise"),"<void",">")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"listenerCancelled")),Object(i.mdx)("td",{parentName:"tr",align:"left"},"() => ",Object(i.mdx)("em",{parentName:"td"},"boolean"))))),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<GetDepositProgress",">"),Object(i.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:162"),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"getgatewayaddress"},"getGatewayAddress"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"getGatewayAddress"),": (",Object(i.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(i.mdx)("em",{parentName:"p"},"string"),", ",Object(i.mdx)("inlineCode",{parentName:"p"},"publicKey"),": ",Object(i.mdx)("em",{parentName:"p"},"Buffer"),", ",Object(i.mdx)("inlineCode",{parentName:"p"},"gHash"),": ",Object(i.mdx)("em",{parentName:"p"},"Buffer"),") => ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<Address",">"),Object(i.mdx)("p",null,Object(i.mdx)("inlineCode",{parentName:"p"},"getGatewayAddress")," should return the deposit address expected by RenVM\nfor the given asset and gateway hash (",Object(i.mdx)("inlineCode",{parentName:"p"},"gHash"),"). The public key is that of\nthe shard selected to handle the deposits."),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},Object(i.mdx)("inlineCode",{parentName:"strong"},"dev"))," Must be compatible with the matching RenVM multichain LockChain."),Object(i.mdx)("h4",{id:"type-declaration-7"},"Type declaration"),Object(i.mdx)("p",null,"\u25b8 (",Object(i.mdx)("inlineCode",{parentName:"p"},"asset"),": ",Object(i.mdx)("em",{parentName:"p"},"string"),", ",Object(i.mdx)("inlineCode",{parentName:"p"},"publicKey"),": ",Object(i.mdx)("em",{parentName:"p"},"Buffer"),", ",Object(i.mdx)("inlineCode",{parentName:"p"},"gHash"),": ",Object(i.mdx)("em",{parentName:"p"},"Buffer"),"): ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<Address",">"),Object(i.mdx)("h4",{id:"parameters-6"},"Parameters"),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"asset")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"string"))),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"publicKey")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"Buffer"))),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"gHash")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"Buffer"))))),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<Address",">"),Object(i.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:177"),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"initialize"},"initialize"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"initialize"),": (",Object(i.mdx)("inlineCode",{parentName:"p"},"network"),": ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_networks.rennetworkdetails"},Object(i.mdx)("em",{parentName:"a"},"RenNetworkDetails"))," ","|"," ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/enums/lib_interfaces_build_main_networks.rennetwork"},Object(i.mdx)("em",{parentName:"a"},"RenNetwork"))," ","|"," ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_networks#rennetworkstring"},Object(i.mdx)("em",{parentName:"a"},"RenNetworkString")),") => ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.lockchain"},Object(i.mdx)("em",{parentName:"a"},"LockChain")),"<Transaction, LockDeposit, Address, Network, GetDepositProgress",">",">"),Object(i.mdx)("p",null,Object(i.mdx)("inlineCode",{parentName:"p"},"initialize")," allows RenJS to pass in parameters after the user has\ninitialized the Chain. This allows the user to pass in network\nparameters such as the network only once."),Object(i.mdx)("p",null,"If the Chain's constructor has an optional network parameter and the\nuser has explicitly initialized it, the Chain should ignore the\nnetwork passed in to ",Object(i.mdx)("inlineCode",{parentName:"p"},"initialize"),". This is to allow different network\ncombinations, such as working with testnet Bitcoin and a local Ethereum\nchain - whereas the default ",Object(i.mdx)("inlineCode",{parentName:"p"},"testnet")," configuration would use testnet\nBitcoin and Ethereum's Kovan testnet."),Object(i.mdx)("h4",{id:"type-declaration-8"},"Type declaration"),Object(i.mdx)("p",null,"\u25b8 (",Object(i.mdx)("inlineCode",{parentName:"p"},"network"),": ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_networks.rennetworkdetails"},Object(i.mdx)("em",{parentName:"a"},"RenNetworkDetails"))," ","|"," ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/enums/lib_interfaces_build_main_networks.rennetwork"},Object(i.mdx)("em",{parentName:"a"},"RenNetwork"))," ","|"," ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_networks#rennetworkstring"},Object(i.mdx)("em",{parentName:"a"},"RenNetworkString")),"): ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.lockchain"},Object(i.mdx)("em",{parentName:"a"},"LockChain")),"<Transaction, LockDeposit, Address, Network, GetDepositProgress",">",">"),Object(i.mdx)("h4",{id:"parameters-7"},"Parameters"),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"network")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_networks.rennetworkdetails"},Object(i.mdx)("em",{parentName:"a"},"RenNetworkDetails"))," ","|"," ",Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/enums/lib_interfaces_build_main_networks.rennetwork"},Object(i.mdx)("em",{parentName:"a"},"RenNetwork"))," ","|"," ",Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_networks#rennetworkstring"},Object(i.mdx)("em",{parentName:"a"},"RenNetworkString")))))),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.lockchain"},Object(i.mdx)("em",{parentName:"a"},"LockChain")),"<Transaction, LockDeposit, Address, Network, GetDepositProgress",">",">"),Object(i.mdx)("p",null,"Inherited from: ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#initialize"},"initialize")),Object(i.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:60"),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"legacyname"},"legacyName"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("inlineCode",{parentName:"p"},"Optional")," ",Object(i.mdx)("strong",{parentName:"p"},"legacyName"),": ",Object(i.mdx)("em",{parentName:"p"},"string")),Object(i.mdx)("p",null,"The name of the Chain used the v0.2 RenVM nodes."),Object(i.mdx)("pre",null,Object(i.mdx)("code",{parentName:"pre",className:"language-ts"},'bitcoin.legacyName = "Btc";\n')),Object(i.mdx)("p",null,"Inherited from: ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#legacyname"},"legacyName")),Object(i.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:43"),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"name"},"name"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"name"),": ",Object(i.mdx)("em",{parentName:"p"},"string")),Object(i.mdx)("p",null,"The name of the Chain."),Object(i.mdx)("pre",null,Object(i.mdx)("code",{parentName:"pre",className:"language-ts"},'bitcoin.name = "Bitcoin";\n')),Object(i.mdx)("p",null,"Inherited from: ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#name"},"name")),Object(i.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:35"),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"rennetwork"},"renNetwork"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("inlineCode",{parentName:"p"},"Optional")," ",Object(i.mdx)("strong",{parentName:"p"},"renNetwork"),": ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_networks.rennetworkdetails"},Object(i.mdx)("em",{parentName:"a"},"RenNetworkDetails"))),Object(i.mdx)("p",null,"Should be set by ",Object(i.mdx)("inlineCode",{parentName:"p"},"constructor")," or ",Object(i.mdx)("inlineCode",{parentName:"p"},"initialize"),"."),Object(i.mdx)("p",null,"Inherited from: ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#rennetwork"},"renNetwork")),Object(i.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:47"),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"transactionconfidence"},"transactionConfidence"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"transactionConfidence"),": (",Object(i.mdx)("inlineCode",{parentName:"p"},"transaction"),": Transaction) => ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<{ ",Object(i.mdx)("inlineCode",{parentName:"p"},"current"),": ",Object(i.mdx)("em",{parentName:"p"},"number")," ; ",Object(i.mdx)("inlineCode",{parentName:"p"},"target"),": ",Object(i.mdx)("em",{parentName:"p"},"number"),"  }",">"),Object(i.mdx)("p",null,Object(i.mdx)("inlineCode",{parentName:"p"},"transactionConfidence")," should return a target and a current\nconfidence that the deposit is irreversible. For most chains, this will\nbe represented by the number of blocks that have passed."),Object(i.mdx)("p",null,"For example, a Bitcoin transaction with 2 confirmations will return\n",Object(i.mdx)("inlineCode",{parentName:"p"},"{ current: 2, target: 6 }")," on mainnet, where the target is currently 6\nconfirmations."),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},Object(i.mdx)("inlineCode",{parentName:"strong"},"dev"))," Must be compatible with the matching RenVM multichain LockChain."),Object(i.mdx)("h4",{id:"type-declaration-9"},"Type declaration"),Object(i.mdx)("p",null,"\u25b8 (",Object(i.mdx)("inlineCode",{parentName:"p"},"transaction"),": Transaction): ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<{ ",Object(i.mdx)("inlineCode",{parentName:"p"},"current"),": ",Object(i.mdx)("em",{parentName:"p"},"number")," ; ",Object(i.mdx)("inlineCode",{parentName:"p"},"target"),": ",Object(i.mdx)("em",{parentName:"p"},"number"),"  }",">"),Object(i.mdx)("h4",{id:"parameters-8"},"Parameters"),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"transaction")),Object(i.mdx)("td",{parentName:"tr",align:"left"},"Transaction")))),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<{ ",Object(i.mdx)("inlineCode",{parentName:"p"},"current"),": ",Object(i.mdx)("em",{parentName:"p"},"number")," ; ",Object(i.mdx)("inlineCode",{parentName:"p"},"target"),": ",Object(i.mdx)("em",{parentName:"p"},"number"),"  }",">"),Object(i.mdx)("p",null,"Inherited from: ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#transactionconfidence"},"transactionConfidence")),Object(i.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:110"),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"transactionfromid"},"transactionFromID"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"transactionFromID"),": (",Object(i.mdx)("inlineCode",{parentName:"p"},"txid"),": ",Object(i.mdx)("em",{parentName:"p"},"string")," ","|"," ",Object(i.mdx)("em",{parentName:"p"},"Buffer"),", ",Object(i.mdx)("inlineCode",{parentName:"p"},"txindex"),": ",Object(i.mdx)("em",{parentName:"p"},"string"),", ",Object(i.mdx)("inlineCode",{parentName:"p"},"reversed?"),": ",Object(i.mdx)("em",{parentName:"p"},"boolean"),") => ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<Transaction",">"),Object(i.mdx)("h4",{id:"type-declaration-10"},"Type declaration"),Object(i.mdx)("p",null,"\u25b8 (",Object(i.mdx)("inlineCode",{parentName:"p"},"txid"),": ",Object(i.mdx)("em",{parentName:"p"},"string")," ","|"," ",Object(i.mdx)("em",{parentName:"p"},"Buffer"),", ",Object(i.mdx)("inlineCode",{parentName:"p"},"txindex"),": ",Object(i.mdx)("em",{parentName:"p"},"string"),", ",Object(i.mdx)("inlineCode",{parentName:"p"},"reversed?"),": ",Object(i.mdx)("em",{parentName:"p"},"boolean"),"): ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<Transaction",">"),Object(i.mdx)("h4",{id:"parameters-9"},"Parameters"),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"txid")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"string")," ","|"," ",Object(i.mdx)("em",{parentName:"td"},"Buffer"))),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"txindex")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"string"))),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"reversed?")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"boolean"))))),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<Transaction",">"),Object(i.mdx)("p",null,"Inherited from: ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#transactionfromid"},"transactionFromID")),Object(i.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:118"),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"transactionid"},"transactionID"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"transactionID"),": (",Object(i.mdx)("inlineCode",{parentName:"p"},"transaction"),": Transaction) => ",Object(i.mdx)("em",{parentName:"p"},"string")),Object(i.mdx)("p",null,Object(i.mdx)("inlineCode",{parentName:"p"},"transactionID")," should return a string that uniquely represents the\ntransaction."),Object(i.mdx)("h4",{id:"type-declaration-11"},"Type declaration"),Object(i.mdx)("p",null,"\u25b8 (",Object(i.mdx)("inlineCode",{parentName:"p"},"transaction"),": Transaction): ",Object(i.mdx)("em",{parentName:"p"},"string")),Object(i.mdx)("h4",{id:"parameters-10"},"Parameters"),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"transaction")),Object(i.mdx)("td",{parentName:"tr",align:"left"},"Transaction")))),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("em",{parentName:"p"},"string")),Object(i.mdx)("p",null,"Inherited from: ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#transactionid"},"transactionID")),Object(i.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:98"),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"transactionrpcformat"},"transactionRPCFormat"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"transactionRPCFormat"),": (",Object(i.mdx)("inlineCode",{parentName:"p"},"transaction"),": Transaction, ",Object(i.mdx)("inlineCode",{parentName:"p"},"v2?"),": ",Object(i.mdx)("em",{parentName:"p"},"boolean"),") => { ",Object(i.mdx)("inlineCode",{parentName:"p"},"txid"),": ",Object(i.mdx)("em",{parentName:"p"},"Buffer")," ; ",Object(i.mdx)("inlineCode",{parentName:"p"},"txindex"),": ",Object(i.mdx)("em",{parentName:"p"},"string"),"  }"),Object(i.mdx)("h4",{id:"type-declaration-12"},"Type declaration"),Object(i.mdx)("p",null,"\u25b8 (",Object(i.mdx)("inlineCode",{parentName:"p"},"transaction"),": Transaction, ",Object(i.mdx)("inlineCode",{parentName:"p"},"v2?"),": ",Object(i.mdx)("em",{parentName:"p"},"boolean"),"): ",Object(i.mdx)("em",{parentName:"p"},"object")),Object(i.mdx)("h4",{id:"parameters-11"},"Parameters"),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"transaction")),Object(i.mdx)("td",{parentName:"tr",align:"left"},"Transaction")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"v2?")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"boolean"))))),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("em",{parentName:"p"},"object")),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"txid")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"Buffer"))),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"txindex")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"string"))))),Object(i.mdx)("p",null,"Inherited from: ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#transactionrpcformat"},"transactionRPCFormat")),Object(i.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:114"),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"utils"},"utils"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("strong",{parentName:"p"},"utils"),": ",Object(i.mdx)("em",{parentName:"p"},"object")),Object(i.mdx)("h4",{id:"type-declaration-13"},"Type declaration"),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Type"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Description"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"addressExplorerLink?")),Object(i.mdx)("td",{parentName:"tr",align:"left"},"(",Object(i.mdx)("inlineCode",{parentName:"td"},"address"),": ",Object(i.mdx)("em",{parentName:"td"},"string")," ","|"," Address, ",Object(i.mdx)("inlineCode",{parentName:"td"},"network?"),": ",Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_networks.rennetworkdetails"},Object(i.mdx)("em",{parentName:"a"},"RenNetworkDetails"))," ","|"," ",Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/enums/lib_interfaces_build_main_networks.rennetwork"},Object(i.mdx)("em",{parentName:"a"},"RenNetwork"))," ","|"," ",Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_networks#rennetworkstring"},Object(i.mdx)("em",{parentName:"a"},"RenNetworkString"))," ","|"," Network, ",Object(i.mdx)("inlineCode",{parentName:"td"},"explorer?"),": ",Object(i.mdx)("em",{parentName:"td"},"string"),") => ",Object(i.mdx)("em",{parentName:"td"},"undefined")," ","|"," ",Object(i.mdx)("em",{parentName:"td"},"string")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"addressExplorerLink")," should return a URL that can be shown to a user to access more information about an address.  ",Object(i.mdx)("inlineCode",{parentName:"td"},"explorer")," can be provided to request a link to a different explorer. It's up to the chain implementation to choose how to interpret this.")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"transactionExplorerLink?")),Object(i.mdx)("td",{parentName:"tr",align:"left"},"(",Object(i.mdx)("inlineCode",{parentName:"td"},"transaction"),": ",Object(i.mdx)("em",{parentName:"td"},"string")," ","|"," Transaction, ",Object(i.mdx)("inlineCode",{parentName:"td"},"network?"),": ",Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_networks.rennetworkdetails"},Object(i.mdx)("em",{parentName:"a"},"RenNetworkDetails"))," ","|"," ",Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/enums/lib_interfaces_build_main_networks.rennetwork"},Object(i.mdx)("em",{parentName:"a"},"RenNetwork"))," ","|"," ",Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_networks#rennetworkstring"},Object(i.mdx)("em",{parentName:"a"},"RenNetworkString"))," ","|"," Network, ",Object(i.mdx)("inlineCode",{parentName:"td"},"explorer?"),": ",Object(i.mdx)("em",{parentName:"td"},"string"),") => ",Object(i.mdx)("em",{parentName:"td"},"undefined")," ","|"," ",Object(i.mdx)("em",{parentName:"td"},"string")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"transactionExplorerLink")," should return a URL that can be shown to a user to access more information about a transaction.  ",Object(i.mdx)("inlineCode",{parentName:"td"},"explorer")," can be provided to request a link to a different explorer. It's up to the chain implementation to choose how to interpret this.")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"addressIsValid")),Object(i.mdx)("td",{parentName:"tr",align:"left"},"(",Object(i.mdx)("inlineCode",{parentName:"td"},"address"),": ",Object(i.mdx)("em",{parentName:"td"},"string")," ","|"," Address, ",Object(i.mdx)("inlineCode",{parentName:"td"},"network?"),": ",Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_networks.rennetworkdetails"},Object(i.mdx)("em",{parentName:"a"},"RenNetworkDetails"))," ","|"," ",Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/enums/lib_interfaces_build_main_networks.rennetwork"},Object(i.mdx)("em",{parentName:"a"},"RenNetwork"))," ","|"," ",Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_networks#rennetworkstring"},Object(i.mdx)("em",{parentName:"a"},"RenNetworkString"))," ","|"," Network) => ",Object(i.mdx)("em",{parentName:"td"},"boolean")),Object(i.mdx)("td",{parentName:"tr",align:"left"},"-")),Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"resolveChainNetwork")),Object(i.mdx)("td",{parentName:"tr",align:"left"},"(",Object(i.mdx)("inlineCode",{parentName:"td"},"network"),": ",Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_networks.rennetworkdetails"},Object(i.mdx)("em",{parentName:"a"},"RenNetworkDetails"))," ","|"," ",Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/enums/lib_interfaces_build_main_networks.rennetwork"},Object(i.mdx)("em",{parentName:"a"},"RenNetwork"))," ","|"," ",Object(i.mdx)("a",{parentName:"td",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_networks#rennetworkstring"},Object(i.mdx)("em",{parentName:"a"},"RenNetworkString"))," ","|"," Network) => Network"),Object(i.mdx)("td",{parentName:"tr",align:"left"},"-")))),Object(i.mdx)("p",null,"Inherited from: ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#utils"},"utils")),Object(i.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:228"),Object(i.mdx)("hr",null),Object(i.mdx)("h3",{id:"withprovider"},"withProvider"),Object(i.mdx)("p",null,"\u2022 ",Object(i.mdx)("inlineCode",{parentName:"p"},"Optional")," ",Object(i.mdx)("strong",{parentName:"p"},"withProvider"),": (...",Object(i.mdx)("inlineCode",{parentName:"p"},"args"),": ",Object(i.mdx)("em",{parentName:"p"},"any"),"[]) => ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.lockchain"},Object(i.mdx)("em",{parentName:"a"},"LockChain")),"<Transaction, LockDeposit, Address, Network, GetDepositProgress",">",">"),Object(i.mdx)("h4",{id:"type-declaration-14"},"Type declaration"),Object(i.mdx)("p",null,"\u25b8 (...",Object(i.mdx)("inlineCode",{parentName:"p"},"args"),": ",Object(i.mdx)("em",{parentName:"p"},"any"),"[]): ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.lockchain"},Object(i.mdx)("em",{parentName:"a"},"LockChain")),"<Transaction, LockDeposit, Address, Network, GetDepositProgress",">",">"),Object(i.mdx)("h4",{id:"parameters-12"},"Parameters"),Object(i.mdx)("table",null,Object(i.mdx)("thead",{parentName:"table"},Object(i.mdx)("tr",{parentName:"thead"},Object(i.mdx)("th",{parentName:"tr",align:"left"},"Name"),Object(i.mdx)("th",{parentName:"tr",align:"left"},"Type"))),Object(i.mdx)("tbody",{parentName:"table"},Object(i.mdx)("tr",{parentName:"tbody"},Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("inlineCode",{parentName:"td"},"...args")),Object(i.mdx)("td",{parentName:"tr",align:"left"},Object(i.mdx)("em",{parentName:"td"},"any"),"[]")))),Object(i.mdx)("p",null,Object(i.mdx)("strong",{parentName:"p"},"Returns:")," ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/modules/lib_interfaces_build_main_chain#syncorpromise"},Object(i.mdx)("em",{parentName:"a"},"SyncOrPromise")),"<",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.lockchain"},Object(i.mdx)("em",{parentName:"a"},"LockChain")),"<Transaction, LockDeposit, Address, Network, GetDepositProgress",">",">"),Object(i.mdx)("p",null,"Inherited from: ",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon"},"ChainCommon"),".",Object(i.mdx)("a",{parentName:"p",href:"/ren-client-docs/ren-js/api/interfaces/lib_interfaces_build_main_chain.chaincommon#withprovider"},"withProvider")),Object(i.mdx)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/chain.d.ts:61"))}s.isMDXComponent=!0},489:function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return s})),n.d(t,"MDXProvider",(function(){return b})),n.d(t,"mdx",(function(){return x})),n.d(t,"useMDXComponents",(function(){return o})),n.d(t,"withMDXComponents",(function(){return l}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function m(){return(m=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function d(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?d(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),l=function(e){return function(t){var n=o(t.components);return r.a.createElement(e,m({},t,{components:n}))}},o=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=o(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},j={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,m=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),s=o(n),l=a,b=s["".concat(m,".").concat(l)]||s[l]||j[l]||i;return n?r.a.createElement(b,c(c({ref:t},d),{},{components:n})):r.a.createElement(b,c({ref:t},d))}));function x(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,m=new Array(i);m[0]=O;var d={};for(var c in t)hasOwnProperty.call(t,c)&&(d[c]=t[c]);d.originalType=e,d.mdxType="string"==typeof e?e:a,m[1]=d;for(var p=2;p<i;p++)m[p]=n[p];return r.a.createElement.apply(null,m)}return r.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"}}]);