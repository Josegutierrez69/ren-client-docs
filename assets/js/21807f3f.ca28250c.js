(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{413:function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return l})),n.d(t,"MDXProvider",(function(){return g})),n.d(t,"mdx",(function(){return p})),n.d(t,"useMDXComponents",(function(){return b})),n.d(t,"withMDXComponents",(function(){return i}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function d(){return(d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),i=function(e){return function(t){var n=b(t.components);return r.a.createElement(e,d({},t,{components:n}))}},b=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},g=function(e){var t=b(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,c=m(e,["components","mdxType","originalType","parentName"]),l=b(n),i=a,g=l["".concat(d,".").concat(i)]||l[i]||y[i]||o;return n?r.a.createElement(g,s(s({ref:t},c),{},{components:n})):r.a.createElement(g,s({ref:t},c))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,d=new Array(o);d[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,d[1]=c;for(var m=2;m<o;m++)d[m]=n[m];return r.a.createElement.apply(null,d)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},414:function(e,t,n){"use strict";var a=n(4).default;Object.defineProperty(t,"__esModule",{value:!0}),t.DocTag=t.DocType=void 0;var r,o,d=a(n(0));t.DocType=o,function(e){e.Tutorial="Tutorial",e.HowTo="How To",e.Reference="Reference",e.Explanation="Explanation"}(o||(t.DocType=o={}));var c=((r={})[o.Tutorial]="#b16bfc",r[o.HowTo]="#EC0088",r[o.Reference]="#ff823a",r[o.Explanation]="#29C0AF",r);t.DocTag=function(e){var t=e.type,n=e.marginBottom;return d.default.createElement(d.default.Fragment,null,d.default.createElement("span",{style:{border:"2px solid "+c[t]||!1,borderRadius:"5px",color:c[t]||"orange",padding:"0.1rem 0.4rem",marginBottom:void 0!==n?n:30,display:"inline-block"}},String(t)))}},81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return d})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return l}));var a=n(3),r=(n(0),n(413)),o=n(414);const d={title:"GatewayRegistry"},c={unversionedId:"darknode-sol/Gateway/GatewayRegistry",id:"darknode-sol/Gateway/GatewayRegistry",isDocsHomePage:!1,title:"GatewayRegistry",description:"Contract: GatewayRegistry",source:"@site/contracts/darknode-sol/Gateway/GatewayRegistry.mdx",slug:"/darknode-sol/Gateway/GatewayRegistry",permalink:"/ren-client-docs/contracts/darknode-sol/Gateway/GatewayRegistry",editUrl:"https://github.com/renproject/ren-client-docs/edit/master/contracts/darknode-sol/Gateway/GatewayRegistry.mdx",version:"current"},s=[{value:"Contract: <code>GatewayRegistry</code>",id:"contract-gatewayregistry",children:[]},{value:"Variables",id:"variables",children:[{value:"<strong><code>numGatewayContracts</code></strong>: <em><code>uint256</code></em>",id:"numgatewaycontracts-uint256",children:[]}]},{value:"Functions",id:"functions",children:[{value:"<strong><code>setGateway</code></strong> <em><code>(string _symbol, address _token, address _gatewayContract)</code></em> (external)",id:"setgateway-string-_symbol-address-_token-address-_gatewaycontract-external",children:[]},{value:"<strong><code>updateGateway</code></strong> <em><code>(address _token, address _newGatewayContract)</code></em> (external)",id:"updategateway-address-_token-address-_newgatewaycontract-external",children:[]},{value:"<strong><code>removeGateway</code></strong> <em><code>(string _symbol)</code></em> (external)",id:"removegateway-string-_symbol-external",children:[]},{value:"<strong><code>getGateways</code></strong> <em><code>(address _start, uint256 _count) \u2192 address[]</code></em> (external)",id:"getgateways-address-_start-uint256-_count-\u2192-address-external",children:[]},{value:"<strong><code>getRenTokens</code></strong> <em><code>(address _start, uint256 _count) \u2192 address[]</code></em> (external)",id:"getrentokens-address-_start-uint256-_count-\u2192-address-external",children:[]},{value:"<strong><code>getGatewayByToken</code></strong> <em><code>(address _token) \u2192 contract IGateway</code></em> (external)",id:"getgatewaybytoken-address-_token-\u2192-contract-igateway-external",children:[]},{value:"<strong><code>getGatewayBySymbol</code></strong> <em><code>(string _tokenSymbol) \u2192 contract IGateway</code></em> (external)",id:"getgatewaybysymbol-string-_tokensymbol-\u2192-contract-igateway-external",children:[]},{value:"<strong><code>getTokenBySymbol</code></strong> <em><code>(string _tokenSymbol) \u2192 contract IERC20</code></em> (external)",id:"gettokenbysymbol-string-_tokensymbol-\u2192-contract-ierc20-external",children:[]},{value:"<strong><code>symbolIsValid</code></strong> <em><code>(string _tokenSymbol) \u2192 bool</code></em> (public)",id:"symbolisvalid-string-_tokensymbol-\u2192-bool-public",children:[]}]},{value:"Events",id:"events",children:[{value:"<strong><code>LogGatewayRegistered</code></strong> <em><code>(string _symbol, string _indexedSymbol, address _token, address _gatewayContract)</code></em>",id:"loggatewayregistered-string-_symbol-string-_indexedsymbol-address-_token-address-_gatewaycontract",children:[]},{value:"<strong><code>LogGatewayDeregistered</code></strong> <em><code>(string _symbol, string _indexedSymbol, address _token, address _gatewayContract)</code></em>",id:"loggatewayderegistered-string-_symbol-string-_indexedsymbol-address-_token-address-_gatewaycontract",children:[]},{value:"<strong><code>LogGatewayUpdated</code></strong> <em><code>(address _token, address _currentGatewayContract, address _newGatewayContract)</code></em>",id:"loggatewayupdated-address-_token-address-_currentgatewaycontract-address-_newgatewaycontract",children:[]}]}],m={toc:s};function l({components:e,...t}){return Object(r.mdx)("wrapper",Object(a.default)({},m,t,{components:e,mdxType:"MDXLayout"}),Object(r.mdx)(o.DocTag,{type:o.DocType.Reference,mdxType:"DocTag"}),Object(r.mdx)("h2",{id:"contract-gatewayregistry"},"Contract: ",Object(r.mdx)("inlineCode",{parentName:"h2"},"GatewayRegistry")),Object(r.mdx)("p",null,"GatewayRegistry is a mapping from assets to their associated\nRenERC20 and Gateway contracts."),Object(r.mdx)("p",null,"Inherits from:"),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"CanReclaimTokens")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"Claimable")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"Ownable")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"Context")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"Initializable"))),Object(r.mdx)("hr",null),Object(r.mdx)("br",null),Object(r.mdx)("h2",{id:"variables"},"Variables"),Object(r.mdx)("h3",{id:"numgatewaycontracts-uint256"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"numGatewayContracts")),": ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"uint256"))),Object(r.mdx)("hr",null),Object(r.mdx)("br",null),Object(r.mdx)("h2",{id:"functions"},"Functions"),Object(r.mdx)("h3",{id:"setgateway-string-_symbol-address-_token-address-_gatewaycontract-external"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"setGateway"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(string _symbol, address _token, address _gatewayContract)"))," (external)"),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Params")),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("p",{parentName:"li"},Object(r.mdx)("inlineCode",{parentName:"p"},"_token"),": The address of the RenERC20 token contract.")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("p",{parentName:"li"},Object(r.mdx)("inlineCode",{parentName:"p"},"_gatewayContract"),": The address of the Gateway contract."))),Object(r.mdx)("p",null,"Allow the owner to set the Gateway contract for a given\nRenERC20 token contract."),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"updategateway-address-_token-address-_newgatewaycontract-external"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"updateGateway"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(address _token, address _newGatewayContract)"))," (external)"),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Params")),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("p",{parentName:"li"},Object(r.mdx)("inlineCode",{parentName:"p"},"_token"),": The address of the RenERC20 contract.")),Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("p",{parentName:"li"},Object(r.mdx)("inlineCode",{parentName:"p"},"_newGatewayContract"),": The updated address of the Gateway contract."))),Object(r.mdx)("p",null,"Allow the owner to update the Gateway contract for a given\nRenERC20 contract."),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"removegateway-string-_symbol-external"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"removeGateway"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(string _symbol)"))," (external)"),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Params")),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"_symbol"),": The symbol of the token to deregister.")),Object(r.mdx)("p",null,"Allows the owner to remove the Gateway contract for a given\nRenERC20 contract."),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"getgateways-address-_start-uint256-_count-\u2192-address-external"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"getGateways"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(address _start, uint256 _count) \u2192 address[]"))," (external)"),Object(r.mdx)("p",null,"To get all the registered Gateway contracts use count = 0."),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"getrentokens-address-_start-uint256-_count-\u2192-address-external"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"getRenTokens"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(address _start, uint256 _count) \u2192 address[]"))," (external)"),Object(r.mdx)("p",null,"To get all the registered RenERC20 tokens use count = 0."),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"getgatewaybytoken-address-_token-\u2192-contract-igateway-external"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"getGatewayByToken"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(address _token) \u2192 contract IGateway"))," (external)"),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Params")),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"_token"),": The address of the RenERC20 token contract.")),Object(r.mdx)("p",null,"Returns the Gateway contract for the given RenERC20 token\naddress."),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"getgatewaybysymbol-string-_tokensymbol-\u2192-contract-igateway-external"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"getGatewayBySymbol"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(string _tokenSymbol) \u2192 contract IGateway"))," (external)"),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Params")),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"_tokenSymbol"),": The symbol of the RenERC20 token contract.")),Object(r.mdx)("p",null,"Returns the Gateway contract for the given RenERC20 token\nsymbol."),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"gettokenbysymbol-string-_tokensymbol-\u2192-contract-ierc20-external"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"getTokenBySymbol"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(string _tokenSymbol) \u2192 contract IERC20"))," (external)"),Object(r.mdx)("p",null,Object(r.mdx)("strong",{parentName:"p"},"Params")),Object(r.mdx)("ul",null,Object(r.mdx)("li",{parentName:"ul"},Object(r.mdx)("inlineCode",{parentName:"li"},"_tokenSymbol"),": The symbol of the RenERC20 token contract to\nlookup.")),Object(r.mdx)("p",null,"Returns the RenERC20 address for the given token symbol."),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"symbolisvalid-string-_tokensymbol-\u2192-bool-public"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"symbolIsValid"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(string _tokenSymbol) \u2192 bool"))," (public)"),Object(r.mdx)("hr",null),Object(r.mdx)("br",null),Object(r.mdx)("h2",{id:"events"},"Events"),Object(r.mdx)("h3",{id:"loggatewayregistered-string-_symbol-string-_indexedsymbol-address-_token-address-_gatewaycontract"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"LogGatewayRegistered"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(string _symbol, string _indexedSymbol, address _token, address _gatewayContract)"))),Object(r.mdx)("p",null,Object(r.mdx)("em",{parentName:"p"},"The symbol is included twice because strings have to be hashed\nfirst in order to be used as a log index/topic.")),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"loggatewayderegistered-string-_symbol-string-_indexedsymbol-address-_token-address-_gatewaycontract"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"LogGatewayDeregistered"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(string _symbol, string _indexedSymbol, address _token, address _gatewayContract)"))),Object(r.mdx)("hr",null),Object(r.mdx)("h3",{id:"loggatewayupdated-address-_token-address-_currentgatewaycontract-address-_newgatewaycontract"},Object(r.mdx)("strong",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"strong"},"LogGatewayUpdated"))," ",Object(r.mdx)("em",{parentName:"h3"},Object(r.mdx)("inlineCode",{parentName:"em"},"(address _token, address _currentGatewayContract, address _newGatewayContract)"))),Object(r.mdx)("hr",null))}l.isMDXComponent=!0}}]);