(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{159:function(e){e.exports=JSON.parse('{"operationId":"ren_submitTx","deprecated":false,"summary":"ren_submitTx","description":"ren_submitTx returns the transaction state of the provided RenVM transaction hash.","tags":["JSONRPC"],"parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["method","id","jsonrpc","params"],"properties":{"method":{"type":"string","default":"ren_submitTx","description":"Method name"},"id":{"type":"integer","default":1,"format":"int32","description":"Request ID"},"jsonrpc":{"type":"string","default":"2.0","description":"JSON-RPC Version (2.0)"},"params":{"title":"Parameters","type":"object","required":["tx"],"properties":{"tx":{"properties":{"hash":{"example":"eKT2CEAd3ZuzIsQ5mrqKO9Yv24e7ql9fSi-ltOUXfBM","type":"string"},"in":{"properties":{"t":{"properties":{"struct":{"items":{"oneOf":[{"properties":{"txid":{"const":"bytes","type":"string"}},"required":["txid"],"additionalProperties":false,"type":"object"},{"properties":{"txindex":{"const":"u32","type":"string"}},"required":["txindex"],"additionalProperties":false,"type":"object"},{"properties":{"amount":{"const":"u256","type":"string"}},"required":["amount"],"additionalProperties":false,"type":"object"},{"properties":{"payload":{"const":"bytes","type":"string"}},"required":["payload"],"additionalProperties":false,"type":"object"},{"properties":{"phash":{"const":"bytes32","type":"string"}},"required":["phash"],"additionalProperties":false,"type":"object"},{"properties":{"to":{"const":"string","type":"string"}},"required":["to"],"additionalProperties":false,"type":"object"},{"properties":{"nonce":{"const":"bytes32","type":"string"}},"required":["nonce"],"additionalProperties":false,"type":"object"},{"properties":{"nhash":{"const":"bytes32","type":"string"}},"required":["nhash"],"additionalProperties":false,"type":"object"},{"properties":{"gpubkey":{"const":"bytes","type":"string"}},"required":["gpubkey"],"additionalProperties":false,"type":"object"},{"properties":{"ghash":{"const":"bytes32","type":"string"}},"required":["ghash"],"additionalProperties":false,"type":"object"}]},"additionalItems":false,"minItems":10,"type":"array"}},"required":["struct"],"additionalProperties":false,"type":"object"},"v":{"properties":{"amount":{"const":"401480","type":"string"},"ghash":{"const":"9VxewtRVSJmKnc2jhplArqWeSOxE50msbMJd1hx2X7U","type":"string"},"gpubkey":{"const":"A4knRXgAkxx9RNyUywAhtOiB-ZNcEjTckvRW4y7AGdXX","type":"string"},"nhash":{"const":"MUdOHf1As-OXFjQMI0PogV6Lx5PKbSPN7fpvZu21okM","type":"string"},"nonce":{"const":"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACs","type":"string"},"payload":{"const":"","type":"string"},"phash":{"const":"xdJGAYb3IzySfn2y3McDwOUAtlPKgic7e_rYBF2FpHA","type":"string"},"to":{"const":"bc1qj4cj3406k5pe4m0m7ngth35w73aghljghpykqf","type":"string"},"txid":{"const":"aCjatCwWSIALMAzSsTGPgSadDgZT8Nsc2iAqn413ewY","type":"string"},"txindex":{"const":"0","type":"string"}},"required":["amount","ghash","gpubkey","nhash","nonce","payload","phash","to","txid","txindex"],"additionalProperties":false,"type":"object"}},"required":["t","v"],"additionalProperties":false,"type":"object"},"selector":{"example":"BTC/fromBinanceSmartChain","type":"string"},"version":{"default":"1","type":"string"}},"required":["hash","in","selector","version"],"additionalProperties":false,"type":"object"}}}}}}}},"responses":{"200":{"description":"Successful response","content":{"application/json":{"schema":{"properties":{"jsonrpc":{"default":"2.0","type":"string"},"id":{"default":1,"type":"number"},"result":{"properties":{},"additionalProperties":false,"type":"object"}},"required":["jsonrpc","id","result"],"additionalProperties":false,"type":"object"}}}}},"postman":{"name":"ren_submitTx","description":{"content":"ren_submitTx returns the transaction state of the provided RenVM transaction hash.","type":"text/plain"},"url":{"path":["ren_submitTx"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","body":{"mode":"raw","raw":"{\\n    \\"method\\": \\"ren_submitTx\\",\\n    \\"id\\": 1,\\n    \\"jsonrpc\\": \\"2.0\\",\\n    \\"params\\": {\\n        \\"tx\\": {\\n            \\"hash\\": \\"<string>\\",\\n            \\"in\\": {\\n                \\"t\\": {\\n                    \\"struct\\": [\\n                        {\\n                            \\"txid\\": {\\n                                \\"value\\": \\"<Error: Too many levels of nesting to fake this schema>\\"\\n                            }\\n                        },\\n                        {\\n                            \\"txid\\": {\\n                                \\"value\\": \\"<Error: Too many levels of nesting to fake this schema>\\"\\n                            }\\n                        },\\n                        {\\n                            \\"txid\\": {\\n                                \\"value\\": \\"<Error: Too many levels of nesting to fake this schema>\\"\\n                            }\\n                        },\\n                        {\\n                            \\"txid\\": {\\n                                \\"value\\": \\"<Error: Too many levels of nesting to fake this schema>\\"\\n                            }\\n                        },\\n                        {\\n                            \\"txid\\": {\\n                                \\"value\\": \\"<Error: Too many levels of nesting to fake this schema>\\"\\n                            }\\n                        },\\n                        {\\n                            \\"txid\\": {\\n                                \\"value\\": \\"<Error: Too many levels of nesting to fake this schema>\\"\\n                            }\\n                        },\\n                        {\\n                            \\"txid\\": {\\n                                \\"value\\": \\"<Error: Too many levels of nesting to fake this schema>\\"\\n                            }\\n                        },\\n                        {\\n                            \\"txid\\": {\\n                                \\"value\\": \\"<Error: Too many levels of nesting to fake this schema>\\"\\n                            }\\n                        },\\n                        {\\n                            \\"txid\\": {\\n                                \\"value\\": \\"<Error: Too many levels of nesting to fake this schema>\\"\\n                            }\\n                        },\\n                        {\\n                            \\"txid\\": {\\n                                \\"value\\": \\"<Error: Too many levels of nesting to fake this schema>\\"\\n                            }\\n                        }\\n                    ]\\n                },\\n                \\"v\\": {\\n                    \\"amount\\": \\"laboris ex tempor\\",\\n                    \\"ghash\\": \\"culpa\\",\\n                    \\"gpubkey\\": \\"ad commodo dolor\\",\\n                    \\"nhash\\": \\"velit minim incididunt\\",\\n                    \\"nonce\\": \\"esse\\",\\n                    \\"payload\\": \\"Excepteur ex Ut amet\\",\\n                    \\"phash\\": \\"id non esse dolor\\",\\n                    \\"to\\": \\"dolore laboris\\",\\n                    \\"txid\\": \\"minim magna\\",\\n                    \\"txindex\\": \\"ipsum nostrud reprehenderit veniam sunt\\"\\n                }\\n            },\\n            \\"selector\\": \\"<string>\\",\\n            \\"version\\": \\"1\\"\\n        }\\n    }\\n}"}},"method":"post","path":"/ren_submitTx","hashId":"ren-submit-tx","servers":[{"url":"https://{network}.renproject.io","variables":{"network":{"default":"rpc","enum":["rpc","rpc-testnet"]}}}],"permalink":"/ren-client-docs/api/ren-submit-tx","previous":{"title":"ren_queryTx","permalink":"/ren-client-docs/api/"},"next":{"title":"ren_queryTxs","permalink":"/ren-client-docs/api/ren-query-txs"},"jsonRequestBodyExample":{"method":"ren_submitTx","id":1,"jsonrpc":"2.0","params":{"tx":{"hash":"eKT2CEAd3ZuzIsQ5mrqKO9Yv24e7ql9fSi-ltOUXfBM","in":{"t":{"struct":[{"txid":"bytes"},{"txindex":"u32"},{"amount":"u256"},{"payload":"bytes"},{"phash":"bytes32"},{"to":"string"},{"nonce":"bytes32"},{"nhash":"bytes32"},{"gpubkey":"bytes"},{"ghash":"bytes32"}]},"v":{"amount":"401480","ghash":"9VxewtRVSJmKnc2jhplArqWeSOxE50msbMJd1hx2X7U","gpubkey":"A4knRXgAkxx9RNyUywAhtOiB-ZNcEjTckvRW4y7AGdXX","nhash":"MUdOHf1As-OXFjQMI0PogV6Lx5PKbSPN7fpvZu21okM","nonce":"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACs","payload":"","phash":"xdJGAYb3IzySfn2y3McDwOUAtlPKgic7e_rYBF2FpHA","to":"bc1qj4cj3406k5pe4m0m7ngth35w73aghljghpykqf","txid":"aCjatCwWSIALMAzSsTGPgSadDgZT8Nsc2iAqn413ewY","txindex":"0"}},"selector":"BTC/fromBinanceSmartChain","version":"1"}}}}')}}]);