(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{486:function(e,t,n){"use strict";var a=n(4).default;Object.defineProperty(t,"__esModule",{value:!0}),t.DocTag=t.DocType=void 0;var o=a(n(0));let r;t.DocType=r,function(e){e.Tutorial="Tutorial",e.HowTo="How To",e.Reference="Reference",e.Explanation="Explanation"}(r||(t.DocType=r={}));const c={[r.Tutorial]:"#b16bfc",[r.HowTo]:"#EC0088",[r.Reference]:"#ff823a",[r.Explanation]:"#29C0AF"};t.DocTag=({type:e,marginBottom:t})=>o.default.createElement(o.default.Fragment,null,o.default.createElement("span",{style:{border:"2px solid "+c[e]||!1,borderRadius:"5px",color:c[e]||"orange",padding:"0.1rem 0.4rem",marginBottom:void 0!==t?t:30,display:"inline-block"}},String(e)))},542:function(e,t,n){"use strict";var a=n(4).default,o=n(19).default;Object.defineProperty(t,"__esModule",{value:!0}),t.GraphQL=void 0;var r=o(n(0)),c=a(n(590));n(447);const l=({url:e,defaultQuery:t,docExplorerOpen:a,minHeight:o})=>{if("undefined"==typeof window)return null;const{createGraphiQLFetcher:c}=n(644),l=n(645).default,s=c({url:e});return r.default.createElement("div",{style:{height:o||500}},r.default.createElement(r.Suspense,{fallback:r.default.createElement("div",null,"Loading...")},r.default.createElement(l,{docExplorerOpen:a,query:t,fetcher:s})))};t.GraphQL=e=>"undefined"==typeof window?null:r.default.createElement(c.default,null,(()=>r.default.createElement(l,e)))},61:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return u})),n.d(t,"toc",(function(){return d})),n.d(t,"default",(function(){return p}));var a=n(3),o=n(8),r=(n(0),n(485)),c=n(486),l=n(542),s={title:"Query 24h fees",tag:"test"},u={unversionedId:"examples/24h-fees",id:"examples/24h-fees",isDocsHomePage:!1,title:"Query 24h fees",description:"The RenVM subgraphs expose historic data by passing in a block parameter to the query.",source:"@site/subgraph/examples/24h-fees.mdx",slug:"/examples/24h-fees",permalink:"/ren-client-docs/subgraph/examples/24h-fees",version:"current",sidebar:"subgraph",previous:{title:"Epochs",permalink:"/ren-client-docs/subgraph/examples/epochs"},next:{title:"Asset",permalink:"/ren-client-docs/subgraph/subgraph/objects/asset"}},d=[],i={toc:d};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.mdx)("wrapper",Object(a.default)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(r.mdx)(c.DocTag,{type:c.DocType.HowTo,mdxType:"DocTag"}),Object(r.mdx)("p",null,"The RenVM subgraphs expose historic data by passing in a block parameter to the query."),Object(r.mdx)("p",null,"In order to fetch the network fees for the past 24 hours, you first need to calculate the block number from 24 hours ago."),Object(r.mdx)("p",null,"Here's a quick way to calculate it, if accuracy isn't critical:"),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-js"},"// ... set up Web3\n\nconst current = await web3.eth.getBlockNumber();\n\n// Average block time from https://etherscan.io/chart/blocktime\nconst averageBlockTime = 13;\n\nconst dayAgo = current - Math.floor((24 * 60 * 60) / averageBlockTime);\n")),Object(r.mdx)("p",null,"The current block can also be fetched from the subgraph with the following query:"),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-graphql"},"{\n  _meta {\n    block {\n      number\n    }\n  }\n}\n")),Object(r.mdx)("p",null,"After fetching the latest block and calculating the block 24 hours ago, you an fetch the volumes for each block with the following query,\nreplacing the logs with the calculated amounts."),Object(r.mdx)(l.GraphQL,{url:"https://api.thegraph.com/subgraphs/name/renproject/renvm",defaultQuery:"{\n  current: renVM(id: 1, block: {number: 12137999}) {\n    fees {\n      symbol\n      amountInUsd\n    }\n  }\n  dayAgo: renVM(id: 1, block: {number: 12131352}) {\n    fees {\n      symbol\n      amountInUsd\n    }\n  }\n}",mdxType:"GraphQL"}),Object(r.mdx)("br",null),Object(r.mdx)("p",null,"You can then loop each asset to get the difference:"),Object(r.mdx)("pre",null,Object(r.mdx)("code",{parentName:"pre",className:"language-js"},"const dayAgo = response.data.dayAgo.fees.reduce(\n  (acc, token) => ({ ...acc, [token.symbol]: token }),\n  {}\n);\n\nresponse.data.current.fees.reduce(\n  (acc, { symbol, amountInUsd }) => ({\n    ...acc,\n    [symbol]: amountInUsd - dayAgo[symbol].amountInUsd,\n  }),\n  {}\n);\n")))}p.isMDXComponent=!0}}]);