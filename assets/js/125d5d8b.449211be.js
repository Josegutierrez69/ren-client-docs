"use strict";(self.webpackChunkren_client_docs=self.webpackChunkren_client_docs||[]).push([[3717],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),h=a,d=u["".concat(c,".").concat(h)]||u[h]||m[h]||o;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},28677:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return m},default:function(){return y},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return h}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=n(69324),s=n(93454),c=n(1773),l=["components"],p={title:"Gateway Class"},m=void 0,u={unversionedId:"v3/reference/gateway",id:"v3/reference/gateway",title:"Gateway Class",description:"Gateway (TypeDoc)",source:"@site/ren-js/v3/reference/gateway.mdx",sourceDirName:"v3/reference",slug:"/v3/reference/gateway",permalink:"/ren-client-docs/ren-js/v3/reference/gateway",editUrl:"https://github.com/renproject/ren-client-docs/edit/master/ren-js/v3/reference/gateway.mdx",tags:[],version:"current",frontMatter:{title:"Gateway Class"},sidebar:"docs",previous:{title:"RenJS Class",permalink:"/ren-client-docs/ren-js/v3/reference/renJS"},next:{title:"GatewayTransaction Class",permalink:"/ren-client-docs/ren-js/v3/reference/gatewayTransaction"}},h=[{value:'Gateway <TypeDoc name="Gateway">(TypeDoc)</TypeDoc>',id:"gateway-typedoc",children:[],level:3}],d={toc:h};function y(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(s.G,{type:s.e.Reference,mdxType:"DocTag"}),(0,o.kt)("h3",{id:"gateway-typedoc"},"Gateway ",(0,o.kt)(i.L,{name:"Gateway",mdxType:"TypeDoc"},"(TypeDoc)")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"renJS.gateway")," is used to initialize ",(0,o.kt)("inlineCode",{parentName:"p"},"Gateway")," instances. The parameters are as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'interface GatewayParams<\n    FromPayload extends { chain: string },\n    ToPayload extends { chain: string }\n> {\n    /* Required */\n\n    // The asset being minted or burned - e.g. "BTC".\n    asset: string;\n\n    // The payload provided by the from-chain.\n    from: FromPayload;\n\n    // The payload provided by the to-chain.\n    to: ToPayload;\n\n    /* Optional */\n\n    // See section on nonces. A URL-base64 string or a number.\n    nonce?: string | number;\n\n    // Provide a specific RenVM shard - this will come in handy when RenVM shards rotate daily.\n    shard?: RenVMShard;\n\n    // A tag for tracking the volume of a particular bridge (still being implemented)\n    tag?: string;\n}\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"from")," and the ",(0,o.kt)("inlineCode",{parentName:"p"},"to")," parameters will usually be created using a chain class (e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"ethereum.Accont()")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"bitcoin.GatewayAddres()"),")."),(0,o.kt)("p",null,"After creating the gateway, any missing parameters are filled in and available from ",(0,o.kt)("inlineCode",{parentName:"p"},"gateway.params"),". If you are persisting the gateway details, then you should save ",(0,o.kt)("inlineCode",{parentName:"p"},"gateway.params")," instead of the parameters being passed into ",(0,o.kt)("inlineCode",{parentName:"p"},"renJS.gateway"),". ",(0,o.kt)("inlineCode",{parentName:"p"},"gateway.params")," can be serialized and deserialized using ",(0,o.kt)("inlineCode",{parentName:"p"},"JSON.stringify")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"JSON.parse"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// User creates new gateway\nlet gateway = await renJS.gateway({...});\nconst paramsToSave: string = JSON.stringify(gateway.params);\n\n// User resumes gateway\ngateway = await renJS.gateway(JSON.parse(paramsToSave));\n")),(0,o.kt)("p",null,"The methods and properties on a ",(0,o.kt)("inlineCode",{parentName:"p"},"Gateway")," instance are:"),(0,o.kt)(c.P,{title:"Methods",mdxType:"Enumerate"},(0,o.kt)("p",null,(0,o.kt)(i.L,{name:"RenJS.processDeposit",mdxType:"TypeDoc"},"processDeposit")," - manually pass in a the details of a transaction represented by an",(0,o.kt)("code",null,"InputChainTransaction")),(0,o.kt)("p",null,(0,o.kt)(i.L,{name:"RenJS.on",mdxType:"TypeDoc"},"on")," - register listeners for",(0,o.kt)("code",null,'"transaction"')," events - see ",(0,o.kt)("code",null,"eventEmitter")," below for accessing other",(0,o.kt)("code",null,"EventEmitter")," methods")),(0,o.kt)("br",null),(0,o.kt)(c.P,{title:"Properties",mdxType:"Enumerate"},(0,o.kt)("p",null,(0,o.kt)(i.L,{name:"Gateway.params",mdxType:"TypeDoc"},"params")," - the parameters that can be used to recreate the ",(0,o.kt)("code",null,"Gateway")),(0,o.kt)("p",null,(0,o.kt)(i.L,{name:"Gateway.provider",mdxType:"TypeDoc"},"provider")," - the connected RenVM provider"),(0,o.kt)("p",null,(0,o.kt)(i.L,{name:"Gateway.fromChain",mdxType:"TypeDoc"},"fromChain")," - access the from-payload's chain instance that was passed into ",(0,o.kt)("code",null,"renJS.withChains")),(0,o.kt)("p",null,(0,o.kt)(i.L,{name:"Gateway.fromChain",mdxType:"TypeDoc"},"toChain")," - access the to-payload's chain instance that was passed into ",(0,o.kt)("code",null,"renJS.withChains")),(0,o.kt)("p",null,(0,o.kt)(i.L,{name:"Gateway.provider",mdxType:"TypeDoc"},"provider")," - the same provider as ",(0,o.kt)("code",null,"renJS.provider")),(0,o.kt)("p",null,(0,o.kt)(i.L,{name:"Gateway.fees",mdxType:"TypeDoc"},"fees")," - for calculating the expected fees (see ",(0,o.kt)("a",{href:"./fees"},"fees"),")"),(0,o.kt)("p",null,(0,o.kt)(i.L,{name:"Gateway.gatewayAddress",mdxType:"TypeDoc"},"gatewayAddress")," - for deposit gateways"),(0,o.kt)("p",null,(0,o.kt)(i.L,{name:"Gateway.inSetup",mdxType:"TypeDoc"},"inSetup")," - transactions required before submitting the ",(0,o.kt)("code",null,"in")," transaction"),(0,o.kt)("p",null,(0,o.kt)(i.L,{name:"Gateway.in",mdxType:"TypeDoc"},"in")," - for contract gateways, the input transaction submitter or waiter"),(0,o.kt)("p",null,(0,o.kt)(i.L,{name:"Gateway.eventEmitter",mdxType:"TypeDoc"},"eventEmitter")," - the event emitter that ",(0,o.kt)("code",null,"gateway.on")," calls - see"," "," ",(0,o.kt)(i.L,{name:"EventEmitterTyped.once",mdxType:"TypeDoc"},"eventEmitter.once"),","," "," ",(0,o.kt)(i.L,{name:"EventEmitterTyped.removeListener",mdxType:"TypeDoc"},"     eventEmitter.removeListener ")," , ",(0,o.kt)(i.L,{name:"EventEmitterTyped.removeAllListeners",mdxType:"TypeDoc"},"     eventEmitter.removeAllListeners ")," and ",(0,o.kt)(i.L,{name:"EventEmitterTyped.listenerCount",mdxType:"TypeDoc"},"eventEmitter.listenerCount"))))}y.isMDXComponent=!0},93454:function(e,t,n){n.d(t,{G:function(){return s},e:function(){return a}});var r,a,o=n(67294);!function(e){e.Tutorial="Tutorial",e.HowTo="How To",e.Reference="Reference",e.Explanation="Explanation"}(a||(a={}));var i=((r={})[a.Tutorial]="#b48ead",r[a.HowTo]="#69a8b9",r[a.Reference]="#bf616a",r[a.Explanation]="#d2b06c",r),s=function(e){var t=e.type,n=e.marginBottom;return o.createElement(o.Fragment,null,o.createElement("span",{style:{border:"2px solid "+i[t]||0,borderRadius:"5px",color:i[t]||"orange",padding:"0.1rem 0.4rem",marginBottom:void 0!==n?n:30,display:"inline-block"}},String(t)))}},1773:function(e,t,n){n.d(t,{P:function(){return a}});var r=n(67294),a=function(e){var t=e.title,n=e.children;return r.createElement("div",{className:"enumerate"},r.createElement("h3",null,t),n)}},69324:function(e,t,n){n.d(t,{L:function(){return o}});var r=n(67294),a={Asset:"enums/_renproject_chains.Asset.html",Chain:"enums/_renproject_chains.Chain.html",RPCMethod:"enums/_renproject_provider.RPCMethod.html",ChainTransactionStatus:"enums/_renproject_utils.ChainTransactionStatus.html",InputType:"enums/_renproject_utils.InputType.html",LogLevel:"enums/_renproject_utils.LogLevel.html",OutputType:"enums/_renproject_utils.OutputType.html",PackPrimitive:"enums/_renproject_utils.PackPrimitive.html",RenJSError:"enums/_renproject_utils.RenJSError.html",RenNetwork:"enums/_renproject_utils.RenNetwork.html",TxStatus:"enums/_renproject_utils.TxStatus.html",EVMParam:"enums/_renproject_chains_ethereum.EVMParam.html",Bitcoin:"classes/_renproject_chains_bitcoin.Bitcoin.html",BitcoinBaseChain:"classes/_renproject_chains_bitcoin.BitcoinBaseChain.html",BitcoinCash:"classes/_renproject_chains_bitcoin.BitcoinCash.html",DigiByte:"classes/_renproject_chains_bitcoin.DigiByte.html",Dogecoin:"classes/_renproject_chains_bitcoin.Dogecoin.html",Zcash:"classes/_renproject_chains_bitcoin.Zcash.html",Arbitrum:"classes/_renproject_chains_ethereum.Arbitrum.html",Avalanche:"classes/_renproject_chains_ethereum.Avalanche.html",BinanceSmartChain:"classes/_renproject_chains_ethereum.BinanceSmartChain.html",Ethereum:"classes/_renproject_chains_ethereum.Ethereum.html",Fantom:"classes/_renproject_chains_ethereum.Fantom.html",Goerli:"classes/_renproject_chains_ethereum.Goerli.html",Polygon:"classes/_renproject_chains_ethereum.Polygon.html",Filecoin:"classes/_renproject_chains_filecoin.Filecoin.html",Solana:"classes/_renproject_chains_solana.Solana.html",Terra:"classes/_renproject_chains_terra.Terra.html",MockChain:"classes/_renproject_mock_provider.MockChain.html",MockProvider:"classes/_renproject_mock_provider.MockProvider.html",RenVMProvider:"classes/_renproject_provider.RenVMProvider.html",Gateway:"classes/_renproject_ren.Gateway.html",GatewayTransaction:"classes/_renproject_ren.GatewayTransaction.html",RenJS:"classes/_renproject_ren.RenJS.html",RenVMTxSubmitter:"classes/_renproject_ren.RenVMTxSubmitter.html",DefaultTxWaiter:"classes/_renproject_utils.DefaultTxWaiter.html",ErrorWithCode:"classes/_renproject_utils.ErrorWithCode.html",EventEmitterTyped:"classes/_renproject_utils.EventEmitterTyped.html",TxWaiterProxy:"classes/_renproject_utils.TxWaiterProxy.html",BitcoinNetworkConfig:"interfaces/_renproject_chains_bitcoin.BitcoinNetworkConfig.html",BitcoinOutputPayload:"interfaces/_renproject_chains_bitcoin.BitcoinOutputPayload.html",EthereumClassConfig:"interfaces/_renproject_chains_ethereum.EthereumClassConfig.html",EvmNetworkConfig:"interfaces/_renproject_chains_ethereum.EvmNetworkConfig.html",FilecoinNetworkConfig:"interfaces/_renproject_chains_filecoin.FilecoinNetworkConfig.html",FilecoinOutputPayload:"interfaces/_renproject_chains_filecoin.FilecoinOutputPayload.html",SolanaPayloadInterface:"interfaces/_renproject_chains_solana.SolanaPayloadInterface.html",TerraOutputPayload:"interfaces/_renproject_chains_terra.TerraOutputPayload.html",BlockState:"interfaces/_renproject_provider.BlockState.html",MarshalledRenVMBlock:"interfaces/_renproject_provider.MarshalledRenVMBlock.html",ParamsQueryBlock:"interfaces/_renproject_provider.ParamsQueryBlock.html",ParamsQueryBlockState:"interfaces/_renproject_provider.ParamsQueryBlockState.html",ParamsQueryBlocks:"interfaces/_renproject_provider.ParamsQueryBlocks.html",ParamsQueryConfig:"interfaces/_renproject_provider.ParamsQueryConfig.html",ParamsQueryTx:"interfaces/_renproject_provider.ParamsQueryTx.html",ParamsQueryTxs:"interfaces/_renproject_provider.ParamsQueryTxs.html",ParamsSubmitTx:"interfaces/_renproject_provider.ParamsSubmitTx.html",RenVMBlock:"interfaces/_renproject_provider.RenVMBlock.html",RenVMProviderInterface:"interfaces/_renproject_provider.RenVMProviderInterface.html",RenVMTransaction:"interfaces/_renproject_provider.RenVMTransaction.html",RenVMTransactionWithStatus:"interfaces/_renproject_provider.RenVMTransactionWithStatus.html",ResponseQueryBlock:"interfaces/_renproject_provider.ResponseQueryBlock.html",ResponseQueryBlockState:"interfaces/_renproject_provider.ResponseQueryBlockState.html",ResponseQueryBlocks:"interfaces/_renproject_provider.ResponseQueryBlocks.html",ResponseQueryConfig:"interfaces/_renproject_provider.ResponseQueryConfig.html",ResponseQueryTx:"interfaces/_renproject_provider.ResponseQueryTx.html",ResponseQueryTxs:"interfaces/_renproject_provider.ResponseQueryTxs.html",ResponseSubmitGateway:"interfaces/_renproject_provider.ResponseSubmitGateway.html",ResponseSubmitTx:"interfaces/_renproject_provider.ResponseSubmitTx.html",SubmitGatewayInput:"interfaces/_renproject_provider.SubmitGatewayInput.html",TransactionInput:"interfaces/_renproject_provider.TransactionInput.html",TransactionOutput:"interfaces/_renproject_provider.TransactionOutput.html",GatewayFees:"interfaces/_renproject_ren.GatewayFees.html",ChainCommon:"interfaces/_renproject_utils.ChainCommon.html",ChainTransaction:"interfaces/_renproject_utils.ChainTransaction.html",ChainTransactionProgress:"interfaces/_renproject_utils.ChainTransactionProgress.html",ContractChain:"interfaces/_renproject_utils.ContractChain.html",DepositChain:"interfaces/_renproject_utils.DepositChain.html",InputChainTransaction:"interfaces/_renproject_utils.InputChainTransaction.html",Logger:"interfaces/_renproject_utils.Logger.html",PackListType:"interfaces/_renproject_utils.PackListType.html",PackStructType:"interfaces/_renproject_utils.PackStructType.html",RenVMShard:"interfaces/_renproject_utils.RenVMShard.html",TxSubmitter:"interfaces/_renproject_utils.TxSubmitter.html",TxWaiter:"interfaces/_renproject_utils.TxWaiter.html",TypedPackValue:"interfaces/_renproject_utils.TypedPackValue.html"},o=function(e){var t=e.name,n=e.children,o=t.split("."),i=o[0],s=o[1];return r.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://renproject.github.io/ren-js-v3-docs/"+a[i]+(s?"#"+s:"")},n||t,a[i]?null:r.createElement("span",{style:{color:"#bf616a"}}," (Link not found)"))}}}]);