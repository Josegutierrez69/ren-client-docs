{
    "x-send-defaults": true,
    "openapi": "3.0.0",
    "x-api-id": "json-rpc-example",
    "info": {
        "title": "RenVM JSON-RPC Specification",
        "version": "0.3.0",
        "description": "If you are interacting with RenVM in a language other than JavaScript/TypeScript, you can send requests directly to RenVM using its JSON-RPC endpoint.\nExpand the **JSONRPC dropdown in the sidebar** to see the endpoints available from the JSON-RPC endpoint.\n\nThe available endpoints for sending JSON-RPC requests are:\n\n* Mainnet: [rpc.renproject.io](https://rpc.renproject.io)\n* Testnet: [rpc-testnet.renproject.io](https://rpc-testnet.renproject.io)\n\n\n### Pack Encoding\n\nSome requests and responses use the [pack](https://github.com/renproject/pack) JSON encoding."
    },
    "servers": [
        {
            "url": "https://{network}.renproject.io",
            "variables": {
                "network": {
                    "default": "rpc",
                    "example": "rpc",
                    "enum": ["rpc", "rpc-testnet"]
                }
            }
        }
    ],
    "paths": {
        "/ren_queryTx": {
            "post": {
                "operationId": "ren_queryTx",
                "deprecated": false,
                "summary": "ren_queryTx",
                "description": "ren_queryTx returns the transaction state of the provided RenVM transaction hash.",
                "tags": ["JSONRPC"],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["method", "jsonrpc", "params"],
                                "properties": {
                                    "method": {
                                        "type": "string",
                                        "default": "ren_queryTx",
                                        "example": "ren_queryTx",
                                        "description": "Make a call to the `\"ren_queryTx\"` method."
                                    },
                                    "id": {
                                        "type": "integer",
                                        "default": 1,
                                        "example": 1,
                                        "format": "int32",
                                        "description": "This value will be passed back in the response, used to match the response with the request that it is replying to."
                                    },
                                    "jsonrpc": {
                                        "type": "string",
                                        "default": "2.0",
                                        "example": "2.0",
                                        "description": "JSON-RPC Version (`\"2.0\"`)"
                                    },
                                    "params": {
                                        "title": "Parameters",
                                        "type": "object",
                                        "required": ["txHash"],
                                        "properties": {
                                            "txHash": {
                                                "type": "string",
                                                "default": "Tv-KivJbAynFKbGX0VIBFOXjR-w1gyXZVz49YL0SM2E",
                                                "example": "Tv-KivJbAynFKbGX0VIBFOXjR-w1gyXZVz49YL0SM2E",
                                                "description": "The RenVM hash of the transaction that will be returned."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "jsonrpc": {
                                            "default": "2.0",
                                            "example": "2.0",
                                            "type": "string"
                                        },
                                        "id": {
                                            "default": 1,
                                            "example": 1,
                                            "type": "number"
                                        },
                                        "result": {
                                            "properties": {
                                                "tx": {
                                                    "$ref": "#/components/schemas/txWithOut"
                                                },
                                                "txStatus": {
                                                    "$ref": "#/components/schemas/txStatus"
                                                }
                                            },
                                            "required": ["tx", "txStatus"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        }
                                    },
                                    "required": ["jsonrpc", "id", "result"],
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ren_submitTx": {
            "post": {
                "operationId": "ren_submitTx",
                "deprecated": false,
                "summary": "ren_submitTx",
                "description": "ren_submitTx returns the transaction state of the provided RenVM transaction hash.",
                "tags": ["JSONRPC"],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["method", "jsonrpc", "params"],
                                "properties": {
                                    "method": {
                                        "type": "string",
                                        "default": "ren_submitTx",
                                        "example": "ren_submitTx",
                                        "description": "Make a call to the `\"ren_submitTx\"` method."
                                    },
                                    "id": {
                                        "type": "integer",
                                        "default": 1,
                                        "example": 1,
                                        "format": "int32",
                                        "description": "This value will be passed back in the response, used to match the response with the request that it is replying to."
                                    },
                                    "jsonrpc": {
                                        "type": "string",
                                        "default": "2.0",
                                        "example": "2.0",
                                        "description": "JSON-RPC Version (`\"2.0\"`)"
                                    },
                                    "params": {
                                        "title": "Parameters",
                                        "type": "object",
                                        "required": ["tx"],
                                        "properties": {
                                            "tx": {
                                                "$ref": "#/components/schemas/tx"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "jsonrpc": {
                                            "default": "2.0",
                                            "example": "2.0",
                                            "type": "string"
                                        },
                                        "id": {
                                            "default": 1,
                                            "example": 1,
                                            "type": "number"
                                        },
                                        "result": {
                                            "properties": {},
                                            "additionalProperties": false,
                                            "type": "object"
                                        }
                                    },
                                    "required": ["jsonrpc", "id", "result"],
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ren_queryTxs": {
            "post": {
                "operationId": "ren_queryTxs",
                "deprecated": false,
                "summary": "ren_queryTxs",
                "description": "ren_queryTxs provides a way of enumerating all transactions.",
                "tags": ["JSONRPC"],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["method", "jsonrpc", "params"],
                                "properties": {
                                    "method": {
                                        "type": "string",
                                        "default": "ren_queryTxs",
                                        "example": "ren_queryTxs",
                                        "description": "Make a call to the `\"ren_queryTxs\"` method."
                                    },
                                    "id": {
                                        "type": "integer",
                                        "default": 1,
                                        "example": 1,
                                        "format": "int32",
                                        "description": "This value will be passed back in the response, used to match the response with the request that it is replying to."
                                    },
                                    "jsonrpc": {
                                        "type": "string",
                                        "default": "2.0",
                                        "example": "2.0",
                                        "description": "JSON-RPC Version (`\"2.0\"`)"
                                    },
                                    "params": {
                                        "title": "Parameters",
                                        "type": "object",
                                        "required": [],
                                        "properties": {
                                            "txStatus": {
                                                "description": "The status of transactions that will be returned.",
                                                "$ref": "#/components/schemas/txStatus"
                                            },
                                            "offset": {
                                                "description": "The number of transactions that should be skipped.",
                                                "type": "string",
                                                "example": "10"
                                            },
                                            "limit": {
                                                "description": "the number of transactions that should be returned",
                                                "type": "string",
                                                "example": "2"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "jsonrpc": {
                                            "default": "2.0",
                                            "example": "2.0",
                                            "type": "string"
                                        },
                                        "id": {
                                            "default": 1,
                                            "example": 1,
                                            "type": "number"
                                        },
                                        "result": {
                                            "properties": {
                                                "txs": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/txWithOut"
                                                    }
                                                }
                                            },
                                            "required": ["txs"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        }
                                    },
                                    "required": ["jsonrpc", "id", "result"],
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ren_queryBlockState": {
            "post": {
                "operationId": "ren_queryBlockState",
                "deprecated": false,
                "summary": "ren_queryBlockState",
                "description": "ren_queryBlockState returns the current RenVM state, including information about fees and gas prices for each chain.",
                "tags": ["JSONRPC"],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["method", "jsonrpc", "params"],
                                "properties": {
                                    "method": {
                                        "type": "string",
                                        "default": "ren_queryBlockState",
                                        "example": "ren_queryBlockState",
                                        "description": "Make a call to the `\"ren_queryBlockState\"` method."
                                    },
                                    "id": {
                                        "type": "integer",
                                        "default": 1,
                                        "example": 1,
                                        "format": "int32",
                                        "description": "This value will be passed back in the response, used to match the response with the request that it is replying to."
                                    },
                                    "jsonrpc": {
                                        "type": "string",
                                        "default": "2.0",
                                        "example": "2.0",
                                        "description": "JSON-RPC Version (`\"2.0\"`)"
                                    },
                                    "params": {
                                        "title": "Parameters",
                                        "type": "object",
                                        "properties": {}
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "jsonrpc": {
                                            "const": "2.0",
                                            "example": "2.0",
                                            "type": "string"
                                        },
                                        "id": {
                                            "const": 1,
                                            "example": 1,
                                            "type": "number"
                                        },
                                        "result": {
                                            "properties": {
                                                "state": {
                                                    "$ref": "#/components/schemas/blockState"
                                                }
                                            }
                                        },
                                        "required": ["jsonrpc", "id", "result"],
                                        "additionalProperties": false,
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ren_queryConfig": {
            "post": {
                "operationId": "ren_queryConfig",
                "deprecated": false,
                "summary": "ren_queryConfig",
                "description": "ren_queryConfig returns the current RenVM state, including information about gas prices for each chain.",
                "tags": ["JSONRPC"],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["method", "jsonrpc", "params"],
                                "properties": {
                                    "method": {
                                        "type": "string",
                                        "default": "ren_queryConfig",
                                        "example": "ren_queryConfig",
                                        "description": "Make a call to the `\"ren_queryConfig\"` method."
                                    },
                                    "id": {
                                        "type": "integer",
                                        "default": 1,
                                        "example": 1,
                                        "format": "int32",
                                        "description": "This value will be passed back in the response, used to match the response with the request that it is replying to."
                                    },
                                    "jsonrpc": {
                                        "type": "string",
                                        "default": "2.0",
                                        "example": "2.0",
                                        "description": "JSON-RPC Version (`\"2.0\"`)"
                                    },
                                    "params": {
                                        "title": "Parameters",
                                        "type": "object",
                                        "properties": {}
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "jsonrpc": {
                                            "const": "2.0",
                                            "example": "2.0",
                                            "type": "string"
                                        },
                                        "id": {
                                            "const": 1,
                                            "example": 1,
                                            "type": "number"
                                        },
                                        "result": {
                                            "properties": {
                                                "confirmations": {
                                                    "properties": {
                                                        "BinanceSmartChain": {
                                                            "const": "6",
                                                            "example": "6",
                                                            "type": "string"
                                                        },
                                                        "Bitcoin": {
                                                            "const": "0",
                                                            "example": "0",
                                                            "type": "string"
                                                        },
                                                        "BitcoinCash": {
                                                            "const": "0",
                                                            "example": "0",
                                                            "type": "string"
                                                        },
                                                        "DigiByte": {
                                                            "const": "0",
                                                            "example": "0",
                                                            "type": "string"
                                                        },
                                                        "Dogecoin": {
                                                            "const": "0",
                                                            "example": "0",
                                                            "type": "string"
                                                        },
                                                        "Ethereum": {
                                                            "const": "6",
                                                            "example": "6",
                                                            "type": "string"
                                                        },
                                                        "Filecoin": {
                                                            "const": "0",
                                                            "example": "0",
                                                            "type": "string"
                                                        },
                                                        "Terra": {
                                                            "const": "0",
                                                            "example": "0",
                                                            "type": "string"
                                                        },
                                                        "Zcash": {
                                                            "const": "0",
                                                            "example": "0",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "BinanceSmartChain",
                                                        "Bitcoin",
                                                        "BitcoinCash",
                                                        "DigiByte",
                                                        "Dogecoin",
                                                        "Ethereum",
                                                        "Filecoin",
                                                        "Terra",
                                                        "Zcash"
                                                    ],
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                "whitelist": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "additionalItems": false,
                                                    "minItems": 22,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "confirmations",
                                                "whitelist"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object"
                                        }
                                    },
                                    "required": ["jsonrpc", "id", "result"],
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ren_queryBlock": {
            "post": {
                "operationId": "ren_queryBlock",
                "deprecated": false,
                "summary": "ren_queryBlock",
                "description": "ren_queryBlock returns the details of the latest block, or of a block at the height specified",
                "tags": ["JSONRPC"],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["method", "jsonrpc", "params"],
                                "properties": {
                                    "method": {
                                        "type": "string",
                                        "default": "ren_queryBlock",
                                        "example": "ren_queryBlock",
                                        "description": "Make a call to the `\"ren_queryBlock\"` method."
                                    },
                                    "id": {
                                        "type": "integer",
                                        "default": 1,
                                        "example": 1,
                                        "format": "int32",
                                        "description": "This value will be passed back in the response, used to match the response with the request that it is replying to."
                                    },
                                    "jsonrpc": {
                                        "type": "string",
                                        "default": "2.0",
                                        "example": "2.0",
                                        "description": "JSON-RPC Version (`\"2.0\"`)"
                                    },
                                    "params": {
                                        "title": "Parameters",
                                        "type": "object",
                                        "properties": {
                                            "blockHeight": {
                                                "type": "string",
                                                "example": "100",
                                                "description": "The height of the block to fetch. If unset, the latest block is returned."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "jsonrpc": {
                                            "const": "2.0",
                                            "example": "2.0",
                                            "type": "string"
                                        },
                                        "id": {
                                            "const": 1,
                                            "example": 1,
                                            "type": "number"
                                        },
                                        "result": {
                                            "properties": {
                                                "block": {
                                                    "$ref": "#/components/schemas/block"
                                                }
                                            },
                                            "required": ["block"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        }
                                    },
                                    "required": ["jsonrpc", "id", "result"],
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ren_queryBlocks": {
            "post": {
                "operationId": "ren_queryBlocks",
                "deprecated": false,
                "summary": "ren_queryBlocks",
                "description": "ren_queryBlocks returns the details of the latest block, or of a block at the height specified",
                "tags": ["JSONRPC"],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["method", "jsonrpc", "params"],
                                "properties": {
                                    "method": {
                                        "type": "string",
                                        "default": "ren_queryBlocks",
                                        "example": "ren_queryBlocks",
                                        "description": "Make a call to the `\"ren_queryBlocks\"` method."
                                    },
                                    "id": {
                                        "type": "integer",
                                        "default": 1,
                                        "example": 1,
                                        "format": "int32",
                                        "description": "This value will be passed back in the response, used to match the response with the request that it is replying to."
                                    },
                                    "jsonrpc": {
                                        "type": "string",
                                        "default": "2.0",
                                        "example": "2.0",
                                        "description": "JSON-RPC Version (`\"2.0\"`)"
                                    },
                                    "params": {
                                        "title": "Parameters",
                                        "type": "object",
                                        "properties": {
                                            "blockHeight": {
                                                "type": "string",
                                                "example": "100",
                                                "description": "The height of the first block to fetch. If unset, the latest blocks [n] blocks are returned."
                                            },
                                            "n": {
                                                "type": "string",
                                                "example": "2",
                                                "description": "The number blocks to fetch."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "jsonrpc": {
                                            "const": "2.0",
                                            "example": "2.0",
                                            "type": "string"
                                        },
                                        "id": {
                                            "const": 1,
                                            "example": 1,
                                            "type": "number"
                                        },
                                        "result": {
                                            "properties": {
                                                "blocks": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/block"
                                                    }
                                                }
                                            },
                                            "required": ["blocks"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        }
                                    },
                                    "required": ["jsonrpc", "id", "result"],
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "txIn": {
                "properties": {
                    "t": {
                        "properties": {
                            "struct": {
                                "items": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "txid": {
                                                    "const": "bytes",
                                                    "example": "bytes",
                                                    "type": "string"
                                                }
                                            },
                                            "required": ["txid"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "txindex": {
                                                    "const": "u32",
                                                    "example": "u32",
                                                    "type": "string"
                                                }
                                            },
                                            "required": ["txindex"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "amount": {
                                                    "const": "u256",
                                                    "example": "u256",
                                                    "type": "string"
                                                }
                                            },
                                            "required": ["amount"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "payload": {
                                                    "const": "bytes",
                                                    "example": "bytes",
                                                    "type": "string"
                                                }
                                            },
                                            "required": ["payload"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "phash": {
                                                    "const": "bytes32",
                                                    "example": "bytes32",
                                                    "type": "string"
                                                }
                                            },
                                            "required": ["phash"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "to": {
                                                    "const": "string",
                                                    "example": "string",
                                                    "type": "string"
                                                }
                                            },
                                            "required": ["to"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "nonce": {
                                                    "const": "bytes32",
                                                    "example": "bytes32",
                                                    "type": "string"
                                                }
                                            },
                                            "required": ["nonce"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "nhash": {
                                                    "const": "bytes32",
                                                    "example": "bytes32",
                                                    "type": "string"
                                                }
                                            },
                                            "required": ["nhash"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "gpubkey": {
                                                    "const": "bytes",
                                                    "example": "bytes",
                                                    "type": "string"
                                                }
                                            },
                                            "required": ["gpubkey"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "ghash": {
                                                    "const": "bytes32",
                                                    "example": "bytes32",
                                                    "type": "string"
                                                }
                                            },
                                            "required": ["ghash"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        }
                                    ]
                                },
                                "additionalItems": false,
                                "minItems": 10,
                                "type": "array"
                            }
                        },
                        "required": ["struct"],
                        "additionalProperties": false,
                        "type": "object"
                    },
                    "v": {
                        "properties": {
                            "amount": {
                                "const": "401480",
                                "example": "401480",
                                "type": "string"
                            },
                            "ghash": {
                                "const": "9VxewtRVSJmKnc2jhplArqWeSOxE50msbMJd1hx2X7U",
                                "example": "9VxewtRVSJmKnc2jhplArqWeSOxE50msbMJd1hx2X7U",
                                "type": "string"
                            },
                            "gpubkey": {
                                "const": "A4knRXgAkxx9RNyUywAhtOiB-ZNcEjTckvRW4y7AGdXX",
                                "example": "A4knRXgAkxx9RNyUywAhtOiB-ZNcEjTckvRW4y7AGdXX",
                                "type": "string"
                            },
                            "nhash": {
                                "const": "MUdOHf1As-OXFjQMI0PogV6Lx5PKbSPN7fpvZu21okM",
                                "example": "MUdOHf1As-OXFjQMI0PogV6Lx5PKbSPN7fpvZu21okM",
                                "type": "string"
                            },
                            "nonce": {
                                "const": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACs",
                                "example": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACs",
                                "type": "string"
                            },
                            "payload": {
                                "const": "",
                                "example": "",
                                "type": "string"
                            },
                            "phash": {
                                "const": "xdJGAYb3IzySfn2y3McDwOUAtlPKgic7e_rYBF2FpHA",
                                "example": "xdJGAYb3IzySfn2y3McDwOUAtlPKgic7e_rYBF2FpHA",
                                "type": "string"
                            },
                            "to": {
                                "const": "bc1qj4cj3406k5pe4m0m7ngth35w73aghljghpykqf",
                                "example": "bc1qj4cj3406k5pe4m0m7ngth35w73aghljghpykqf",
                                "type": "string"
                            },
                            "txid": {
                                "const": "aCjatCwWSIALMAzSsTGPgSadDgZT8Nsc2iAqn413ewY",
                                "example": "aCjatCwWSIALMAzSsTGPgSadDgZT8Nsc2iAqn413ewY",
                                "type": "string"
                            },
                            "txindex": {
                                "const": "0",
                                "example": "0",
                                "type": "string"
                            }
                        },
                        "required": [
                            "amount",
                            "ghash",
                            "gpubkey",
                            "nhash",
                            "nonce",
                            "payload",
                            "phash",
                            "to",
                            "txid",
                            "txindex"
                        ],
                        "additionalProperties": false,
                        "type": "object"
                    }
                },
                "required": ["t", "v"],
                "additionalProperties": false,
                "type": "object"
            },
            "txOut": {
                "properties": {
                    "t": {
                        "properties": {
                            "struct": {
                                "items": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "amount": {
                                                    "const": "u256",
                                                    "example": "u256",
                                                    "type": "string"
                                                }
                                            },
                                            "required": ["amount"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "outpoint": {
                                                    "properties": {
                                                        "struct": {
                                                            "items": {
                                                                "oneOf": [
                                                                    {
                                                                        "properties": {
                                                                            "hash": {
                                                                                "const": "bytes",
                                                                                "example": "bytes",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "hash"
                                                                        ],
                                                                        "additionalProperties": false,
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "properties": {
                                                                            "index": {
                                                                                "const": "u32",
                                                                                "example": "u32",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "index"
                                                                        ],
                                                                        "additionalProperties": false,
                                                                        "type": "object"
                                                                    }
                                                                ]
                                                            },
                                                            "additionalItems": false,
                                                            "minItems": 2,
                                                            "type": "array"
                                                        }
                                                    },
                                                    "required": ["struct"],
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                }
                                            },
                                            "required": ["outpoint"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        }
                                    ]
                                },
                                "additionalItems": false,
                                "minItems": 2,
                                "type": "array"
                            }
                        },
                        "required": ["struct"],
                        "additionalProperties": false,
                        "type": "object"
                    },
                    "v": {
                        "properties": {
                            "amount": {
                                "const": "320933",
                                "example": "320933",
                                "type": "string"
                            },
                            "outpoint": {
                                "properties": {
                                    "hash": {
                                        "const": "OR-M2ba950zlOFqF9ujiA6Qpdqx3G5gxEKaAveGtYEs",
                                        "example": "OR-M2ba950zlOFqF9ujiA6Qpdqx3G5gxEKaAveGtYEs",
                                        "type": "string"
                                    },
                                    "index": {
                                        "const": "0",
                                        "example": "0",
                                        "type": "string"
                                    }
                                },
                                "required": ["hash", "index"],
                                "additionalProperties": false,
                                "type": "object"
                            }
                        },
                        "required": ["amount", "outpoint"],
                        "additionalProperties": false,
                        "type": "object"
                    }
                },
                "required": ["t", "v"],
                "additionalProperties": false,
                "type": "object"
            },
            "txWithOut": {
                "properties": {
                    "hash": {
                        "example": "eKT2CEAd3ZuzIsQ5mrqKO9Yv24e7ql9fSi-ltOUXfBM",
                        "type": "string"
                    },
                    "in": {
                        "$ref": "#/components/schemas/txIn"
                    },
                    "out": {
                        "$ref": "#/components/schemas/txOut"
                    },
                    "selector": {
                        "example": "BTC/fromBinanceSmartChain",
                        "type": "string"
                    },
                    "version": {
                        "default": "1",
                        "example": "1",
                        "type": "string"
                    }
                },
                "required": ["hash", "in", "selector", "version"],
                "additionalProperties": false,
                "type": "object"
            },
            "tx": {
                "properties": {
                    "hash": {
                        "example": "eKT2CEAd3ZuzIsQ5mrqKO9Yv24e7ql9fSi-ltOUXfBM",
                        "type": "string"
                    },
                    "in": {
                        "$ref": "#/components/schemas/txIn"
                    },
                    "selector": {
                        "example": "BTC/fromBinanceSmartChain",
                        "type": "string"
                    },
                    "version": {
                        "default": "1",
                        "example": "1",
                        "type": "string"
                    }
                },
                "required": ["hash", "in", "selector", "version"],
                "additionalProperties": false,
                "type": "object"
            },
            "txStatus": {
                "example": "done",
                "type": "enum",
                "description": "One of done, confirming, pending or reverted",
                "enum": ["done", "confirming", "pending", "reverted"]
            },
            "block": {
                "required": [
                    "extrinsics",
                    "extrinsicsRootHash",
                    "hash",
                    "height",
                    "next",
                    "parentHash",
                    "parentSignature",
                    "timestamp"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                    "extrinsics": {
                        "properties": {
                            "coreTxs": {
                                "items": [],
                                "additionalItems": false,
                                "minItems": 0,
                                "type": "array"
                            },
                            "plan": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "shardTxs": {
                                "properties": {
                                    "txResults": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "txs": {
                                        "properties": {
                                            "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "additionalItems": false,
                                                "minItems": 4,
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
                                        ],
                                        "additionalProperties": false,
                                        "type": "object"
                                    }
                                },
                                "required": ["txResults", "txs"],
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "state": {
                                "const": "MsTY7_ox8loLHc7224BmNTvpLPohIlN61RWi-PpjmIQ",
                                "example": "MsTY7_ox8loLHc7224BmNTvpLPohIlN61RWi-PpjmIQ",
                                "type": "string"
                            }
                        },
                        "required": ["coreTxs", "plan", "shardTxs", "state"],
                        "additionalProperties": false,
                        "type": "object"
                    },
                    "extrinsicsRootHash": {
                        "const": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
                        "example": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
                        "type": "string"
                    },
                    "hash": {
                        "const": "KLDKq5PvWWVqjXM7YWaYdo_YZrO214Kc9u3R7w1amoM",
                        "example": "KLDKq5PvWWVqjXM7YWaYdo_YZrO214Kc9u3R7w1amoM",
                        "type": "string"
                    },
                    "height": {
                        "const": "716942",
                        "example": "716942",
                        "type": "string"
                    },
                    "next": {
                        "items": {
                            "type": "object"
                        },
                        "additionalItems": false,
                        "minItems": 0,
                        "type": "array"
                    },
                    "parentHash": {
                        "const": "Gf1u1AKQKTmGI4vRIdwMbLvW60vg_hnKneAue5aP4Yg",
                        "example": "Gf1u1AKQKTmGI4vRIdwMbLvW60vg_hnKneAue5aP4Yg",
                        "type": "string"
                    },
                    "parentSignature": {
                        "const": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
                        "example": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
                        "type": "string"
                    },
                    "timestamp": {
                        "const": "1610973470192268438",
                        "example": "1610973470192268438",
                        "type": "string"
                    }
                }
            },
            "blockState": {
                "properties": {
                    "t": {
                        "properties": {
                            "struct": {
                                "items": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "latestHeight": {
                                                    "const": "u256",
                                                    "example": "u256",
                                                    "type": "string"
                                                }
                                            },
                                            "required": ["latestHeight"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "gasCap": {
                                                    "const": "u256",
                                                    "example": "u256",
                                                    "type": "string"
                                                }
                                            },
                                            "required": ["gasCap"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "gasLimit": {
                                                    "const": "u256",
                                                    "example": "u256",
                                                    "type": "string"
                                                }
                                            },
                                            "required": ["gasLimit"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "gasPrice": {
                                                    "const": "u256",
                                                    "example": "u256",
                                                    "type": "string"
                                                }
                                            },
                                            "required": ["gasPrice"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "minimumAmount": {
                                                    "const": "u256",
                                                    "example": "u256",
                                                    "type": "string"
                                                }
                                            },
                                            "required": ["minimumAmount"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "dustAmount": {
                                                    "const": "u256",
                                                    "example": "u256",
                                                    "type": "string"
                                                }
                                            },
                                            "required": ["dustAmount"],
                                            "additionalProperties": false,
                                            "type": "object"
                                        }
                                    ]
                                },
                                "additionalItems": true,
                                "minItems": 6,
                                "type": "array"
                            }
                        },
                        "required": ["struct"],
                        "additionalProperties": false,
                        "type": "object"
                    },
                    "v": {
                        "properties": {
                            "latestHeight": {
                                "type": "string"
                            },
                            "gasCap": {
                                "type": "string"
                            },
                            "gasLimit": {
                                "type": "string"
                            },
                            "gasPrice": {
                                "type": "string"
                            },
                            "minimumAmount": {
                                "type": "string"
                            },
                            "dustAmount": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "latestHeight",
                            "gasCap",
                            "gasLimit",
                            "gasPrice",
                            "minimumAmount",
                            "dustAmount"
                        ],
                        "additionalProperties": true,
                        "type": "object"
                    }
                },
                "required": ["t", "v"],
                "additionalProperties": false,
                "type": "object"
            }
        }
    },
    "x-headers": [],
    "x-explorer-enabled": true,
    "x-proxy-enabled": true,
    "x-samples-enabled": true,
    "x-samples-languages": ["curl", "node", "ruby", "javascript", "python"],
    "tags": []
}
